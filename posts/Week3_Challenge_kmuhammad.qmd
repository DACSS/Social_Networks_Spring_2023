---
title: "Week 3 Challenge"
author: "Kalimah Muhammad"
description: "Degree and Density of a Network "
date: "05/1/2023"
format:
  html:
    toc: true
    code-fold: true
    code-copy: true
    code-tools: true
# editor: visual
categories: 
  - challenge_3
---

```{r}
#| label: setup
#| include: false
```

```{r, include= FALSE}
library(igraph)
library(statnet)
library(readr)
library(network)
```

## Challenge Overview

Describe the many measures of degree, as well as density, of a network and compare.

## Describe the Network Data

```{r, results='hide'}
#load Game of Thrones like and dislike data
like_dislike<- read_csv('_data/got/got_like_dislike.csv')
```

```{r, warning=FALSE}
#create iGraph object
like_dislike.ig <- graph_from_data_frame(like_dislike)
```

Below is a plot of the like/dislike network. 

```{r}
plot(like_dislike.ig)
```

On initial review, we see the majority of contacts are directed towards NA. However, Arryn and Tyrell's most direct relationship is with the contacts Tully and Baratheon respectively. Stark appears as one of the few egos with contacts directed out. Tully appears as a potential mediator between Arryn, Stark, and NA. 

*Network Size*

```{r}
#count nodes
vcount(like_dislike.ig)

#count edges
ecount(like_dislike.ig)
```

There are 11 vertices and 46 nodes.

*Network features*

```{r}
is_weighted(like_dislike.ig)
is_directed(like_dislike.ig)
is_bipartite(like_dislike.ig)
```

The network is directed but neither weighted nor bipartite. 

*Network Attributes*

```{r}
#display vertex attributes for igraph object
vertex_attr_names(like_dislike.ig)
```
`Name` is the only vertex attribute.

```{r}
#display edge attributes for igraph object
edge_attr_names(like_dislike.ig)
```

There are approximately 47 edge attributes.

## Dyad and Triad Census

*Dyad Census*

```{r}
igraph::dyad.census(like_dislike.ig)
```

There is one mutual/ reciprocal dyad, 12 asymmetric dyads, and 42 absent relationships. 

*Triad Census*

```{r, triad census}
igraph::triad_census(like_dislike.ig)
```
Here we see most triads are null as shown in the first classification. This result is consistent with the high absent relationships in the dyad census. The second classification with a result of 32 points toward a single directed edge, similar to the asymmetrical dyad relationships seen earlier. Finally in the fifth classification with a result of 22, there is a suggestion of an inward star as the third most frequent triad type.   


## Degree

Total Degrees 

```{r, total degrees}
#Calculate average network degree: igraph
igraph::degree(like_dislike.ig)
```

Calculate In-degree

```{r, in degree}
#calculate in-degree: statnet
igraph::degree(like_dislike.ig, mode="in")
```

Calculate Out-degree

```{r, out degree}
#calculate out-degree: statnet
igraph::degree(like_dislike.ig, mode="out")
```

```{r}
#create a data frame with the degree values
like_dislike.nodes<-data.frame(
    totdegree=igraph::degree(like_dislike.ig, loops=TRUE),
    indegree=igraph::degree(like_dislike.ig, mode="in", loops=TRUE),
    outdegree=igraph::degree(like_dislike.ig, mode="out", loops=TRUE))

like_dislike.nodes
```

Here we see a significant number of relationships between NA and NA. This is likely due to the networks tracing relationships between current and former houses in which 40 of the 46 observations do not include a former house and 8 observations do not include a current house. There is a high prevalence of in-degrees for NA houses compared to out-degrees, 39 to 8 respectively. For out-degrees, both Lannister followed by Stark have the most relationships directed out with 11 and 10 out-degrees. Baratheon has the closest in- to out-degree relationships, 4 and 5, suggesting more mutual/ reciprocal contacts. 

## Density

Compute the density of the network. Is this a global or local measure? Does it have a relationship with average degree?

```{r, graph degree}
#get network density: igraph with loops
graph.density(like_dislike.ig, loops=TRUE)

```

The density of the network is 0.38 which is relatively low. This suggests there is less spread of contacts among the group. This seconds our findings in the degree statistics where overall contacts had little contact between each other outside of a few popular egos, Lannister, Stark, Baratheon, and NA houses.

## Radomn Network

```{r, random network}
#create vertices and edges variables based on like_dislike network
vertices<-11
edges <- 46

#create a random network with the same number of nodes and edges 
random_network<-sample_gnm(n=vertices,m=edges, directed = TRUE, loops = TRUE)

```

Does the comparison tell us something about the network of your choice?

First, let's plot the random graph.

```{r, plot random network}
plot(random_network)
```

Upon initial review, the random network with the same number of edges (46) and vertices (11) appear more distributed than the like_dislike network which displayed a high concentration toward a central node. We also see a higher prevalence of in-degree relationships than out-degrees suggesting a hierarchy in the relationships. 

```{r, degree statistics in random network}
#create a data frame with the degree values
random_network.nodes<-data.frame(
    totdegree=igraph::degree(random_network, loops=TRUE),
    indegree=igraph::degree(random_network, mode="in", loops=TRUE),
    outdegree=igraph::degree(random_network, mode="out", loops=TRUE))

random_network.nodes
```

Once again, we find more distributed and mutual relationships in the random network than in the Game of Thrones like_dislike network. It is likely that we'd find more brokerage relationships in the random network as well.

