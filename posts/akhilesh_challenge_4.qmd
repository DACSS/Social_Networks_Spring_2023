---
title: "Week 4 Challenge"
author: "Akhilesh Kumar"
description: "Centrality of a Network"
date: "04/20/2023"
format:
  html:
    toc: true
    code-fold: true
    code-copy: true
    code-tools: true
# editor: visual
categories: 
  - challenge_4
  - instructions

---

```{r setup, include=FALSE, warnings=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

```{r}
library(igraph)
library(network)

```

## Reading Data
```{r}
got_marriages <- read.csv("_data/got/got_marriages.csv")
head(got_marriages)
got_marriages.ig <-graph_from_data_frame(got_marriages, directed = TRUE)
```

## Challenge Overview

Describe the many measures of centrality of at least one network of your choice.


## Describe the Network Data

If you have not done it before, always start by evaluating the basic structure of the network (number of edges and vertices, dyad and triad census, etc.). Create a data frame `nodes` with the corresponding local attributes such as degree or local transitivity.

```{r}
# Number of vertices in got_marriages network:

vcount(got_marriages.ig)

# Number of edges in got_marriages network:

ecount(got_marriages.ig)

# Bipartite or single mode network verification in got_marriages network:

is_bipartite(got_marriages.ig)

# Directed or undirected edges verification in got_marriages network

is_directed(got_marriages.ig)

# Weighted or unweighted edges verification in got_marriages network

is_weighted(got_marriages.ig)

# Is Connected verification in got_marriages network

is_connected(got_marriages.ig)

# Degree calculation in got_marriages network

degree = degree(got_marriages.ig)

# Indegree

degree(got_marriages.ig, mode = 'out')

# Local Transitivity calculation in got_marriages network

transitivity(got_marriages.ig, type = "local")

# Global Transitivity calculation in got_marriages network

transitivity(got_marriages.ig, type = "global")

# Local Average Transitivity calculation in got_marriages network

transitivity(got_marriages.ig, type = "localaverage")

```

## Centrality

Compute at least one measure of centrality for each node, adding them as attributes to `nodes` in the form of extra columns: eigencentrality, betweenness, closeness, etc. Compute the distribution of at least one of those measures. What do we learn from comparing these measures of centrality with an equivalent random network (i.e. with the same number of edges and vertices)?

```{r}

# Betweenness

V(got_marriages.ig)$betweenness <-igraph::betweenness(got_marriages.ig)

# closeness

V(got_marriages.ig)$closeness <-igraph::closeness(got_marriages.ig)

# eigen_centrality

V(got_marriages.ig)$eigen_centrality <-igraph::eigen_centrality(got_marriages.ig)$vector


# Compute the Distribution eigencentrality

eigen_table <- table(V(got_marriages.ig)$eigen_centrality)
print(eigen_table)

# Compute the Distribution closeness

close_table <- table(V(got_marriages.ig)$closeness)
print(close_table)

# Compute the Distribution of betweenness

between_table <- table(V(got_marriages.ig)$betweenness)
print(between_table)


```



