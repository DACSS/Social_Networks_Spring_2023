{
  "hash": "0860b47e062b3972dc270ea23c2779f7",
  "result": {
    "markdown": "---\ntitle: \"Challenge 1 Kruzlic\"\nauthor: \"Bryn Kruzlic\"\ndescription: \"Loading Game of Thrones marriages and Creating a Network\"\ndate: \"02/28/2023\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\n# editor: visual\ncategories: \n  - challenge_1\n  - instructions\n  # - railroads\n  # - faostat\n  # - wildbirds\n---\n\n\n\n\n\n### Load in libraries\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# load in libraries\nknitr::opts_chunk$set(echo = TRUE)\nlibrary(igraph)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'igraph'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    decompose, spectrum\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:base':\n\n    union\n```\n:::\n:::\n\n### Load in data set. This is the Game of Thrones marriages dataset\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# read in data set\n\nlibrary(readr)\ngot_marriages <- read_csv(\"_data/got/got_marriages.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 255 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): From, To, Type, Notes, Generation\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nView(got_marriages)\n```\n:::\n\n\n### Create a Network\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# plot the marriages using igraph\n\n#| label: summary\nmarriages.ig <- graph_from_data_frame(got_marriages, directed = FALSE)\nplot.igraph(marriages.ig, vertex.size=13)\n```\n\n::: {.cell-output-display}\n![](Challenge1_BrynKruzlic_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n#### Is the network directed or undirected? The answer is false. \n#### Is the network weighted or unweighted? The answer is false. \n#### Is the network unimodal or bipartite?  The answer is false. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nis.bipartite(marriages.ig)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] FALSE\n```\n:::\n\n```{.r .cell-code}\nis.directed(marriages.ig)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] FALSE\n```\n:::\n\n```{.r .cell-code}\nis.weighted(marriages.ig)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] FALSE\n```\n:::\n:::\n\nThe network is not directed, weighted, or bipartite. \n\n\n### Now, let's take a look at the vertices and edges of the network.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvcount(marriages.ig)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 20\n```\n:::\n\n```{.r .cell-code}\necount(marriages.ig)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 255\n```\n:::\n:::\n\nAccording to the above code, there is a total of 20 vertices and 255 edges. \n\n### Other important factors to consider\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(got_marriages$Type)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n Affair Engaged Married \n     36       2     217 \n```\n:::\n\n```{.r .cell-code}\ntable(got_marriages$Generation)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCurrent    Past \n    125     130 \n```\n:::\n\n```{.r .cell-code}\ntable(got_marriages$From)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n      Arryn   Baratheon  Crownlands        Frey   Lannister     Martell \n          6          15           5          47          22           9 \n      North       Reach  Riverlands       Stark  Stormlands   Targaryen \n         13          16           5          27           1          65 \n      Tully      Tyrell        Vale Westerlands \n          2           8          11           3 \n```\n:::\n:::\n",
    "supporting": [
      "Challenge1_BrynKruzlic_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}