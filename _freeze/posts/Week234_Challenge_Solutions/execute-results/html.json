{
  "hash": "5e7b732901d92e1e589c5d8ae8b2ab8f",
  "result": {
    "markdown": "---\ntitle: \"Week 2/3/4 Challenge Solutions\"\nauthor: \"Oriol Vall√®s Codina\"\ndescription: \"Analyzing the Complex Structure of the Economic Input-Output Network of the US, 2012\"\neditor: visual\nformat:\n  html:\n    df-print: paged\n    toc: true\n    code-fold: false\n    code-copy: true\n    code-tools: true\n    css: styles.css\ncategories:\n  - challenge_2\n  - challenge_3\n  - challenge_4\n  - solution\n---\n\n\n# US Bureau of Economic Analysis - Input-Output Network\n\n![IO NETWORK OF MEXICO](_data/ntrwk_mex_total.png \"Network\")\n\n## Package Load\n\nBefore starting, the necessary packages should be loaded. For this analysis, we are going to use `igraph`, but [other options](https://kateto.net/network-visualization) can be contemplated depending on your needs.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readxl)\nlibrary(tidyverse)\nlibrary(igraph)\nlibrary(reshape2)\n\nknitr::opts_chunk$set(echo = TRUE, warning = FALSE, message=FALSE)\n```\n:::\n\n\n## Data Preparation\n\nMotivated by the recent shocks on global supply chains, we are interested in analyzing and visualizing the complex structure of the inter-industry economic transactions of the United States. In economic analysis, this information is contained in the so-called *input-output table*, which many national and international databases document at different levels of industry aggregation (26, 50, 405, 800+...). From a network perspective, an input-output table is an asymmetric, weighted adjacency matrix where the weights correspond to the *input value* required to produce a unit of output, that is, its direct requirements.\n\nData is directly loaded reading a `xlsx` file using the `readxl` package. Note that the file features two years, 2007 and 2012.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfilename <- '../posts/_data/US_input_output_table_2007_and_2012.xlsx' # while on console\nfilename <- '_data/US_input_output_table_2007_and_2012.xlsx' # while rendering\ndata <- read_xlsx(filename, sheet = \"2012\")\n```\n:::\n\n\nFirst of all, we explore the data: its dimensions and the values at its corners so we can extract the adjacency matrix.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 413 407\n```\n:::\n\n```{.r .cell-code}\ndata[1 : 10, 1 : 10]\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Commodity-by-Industry Direct Requirements Table, 2012\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"...2\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"...3\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"...4\"],\"name\":[4],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"...5\"],\"name\":[5],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"...6\"],\"name\":[6],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"...7\"],\"name\":[7],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"...8\"],\"name\":[8],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"...9\"],\"name\":[9],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"...10\"],\"name\":[10],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"Bureau of Economic Analysis\",\"2\":\"NA\",\"3\":\"NA\",\"4\":\"NA\",\"5\":\"NA\",\"6\":\"NA\",\"7\":\"NA\",\"8\":\"NA\",\"9\":\"NA\",\"10\":\"NA\"},{\"1\":\"NA\",\"2\":\"NA\",\"3\":\"NA\",\"4\":\"NA\",\"5\":\"NA\",\"6\":\"NA\",\"7\":\"NA\",\"8\":\"NA\",\"9\":\"NA\",\"10\":\"NA\"},{\"1\":\"Commodity / Industry\",\"2\":\"NA\",\"3\":\"Oilseed farming\",\"4\":\"Grain farming\",\"5\":\"Vegetable and melon farming\",\"6\":\"Fruit and tree nut farming\",\"7\":\"Greenhouse, nursery, and floriculture production\",\"8\":\"Other crop farming\",\"9\":\"Dairy cattle and milk production\",\"10\":\"Beef cattle ranching and farming, including feedlots and dual-purpose ranching and farming\"},{\"1\":\"Code\",\"2\":\"Commodity Description\",\"3\":\"1111A0\",\"4\":\"1111B0\",\"5\":\"111200\",\"6\":\"111300\",\"7\":\"111400\",\"8\":\"111900\",\"9\":\"112120\",\"10\":\"1121A0\"},{\"1\":\"1111A0\",\"2\":\"Oilseed farming\",\"3\":\"5.24173E-2\",\"4\":\"1.3503E-3\",\"5\":\"2.3680000000000001E-4\",\"6\":\"0\",\"7\":\"0\",\"8\":\"4.8999999999999997E-6\",\"9\":\"0\",\"10\":\"0\"},{\"1\":\"1111B0\",\"2\":\"Grain farming\",\"3\":\"0\",\"4\":\"6.6339499999999996E-2\",\"5\":\"0\",\"6\":\"0\",\"7\":\"0\",\"8\":\"1.52896E-2\",\"9\":\"4.50249E-2\",\"10\":\"7.07092E-2\"},{\"1\":\"111200\",\"2\":\"Vegetable and melon farming\",\"3\":\"0\",\"4\":\"0\",\"5\":\"3.0250699999999998E-2\",\"6\":\"1.661E-4\",\"7\":\"0\",\"8\":\"0\",\"9\":\"0\",\"10\":\"0\"},{\"1\":\"111300\",\"2\":\"Fruit and tree nut farming\",\"3\":\"0\",\"4\":\"0\",\"5\":\"0\",\"6\":\"1.15193E-2\",\"7\":\"0\",\"8\":\"0\",\"9\":\"0\",\"10\":\"0\"},{\"1\":\"111400\",\"2\":\"Greenhouse, nursery, and floriculture production\",\"3\":\"0\",\"4\":\"0\",\"5\":\"0\",\"6\":\"0\",\"7\":\"0.1458323\",\"8\":\"0\",\"9\":\"0\",\"10\":\"0\"},{\"1\":\"111900\",\"2\":\"Other crop farming\",\"3\":\"6.3566999999999999E-3\",\"4\":\"7.1383000000000002E-3\",\"5\":\"0\",\"6\":\"0\",\"7\":\"2.5199999999999999E-5\",\"8\":\"2.6891700000000001E-2\",\"9\":\"2.4733000000000002E-2\",\"10\":\"2.0728699999999999E-2\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\ncommodities <- unlist(data[5 : 409, 2])\nindustries <- unlist(data[3, 3 : 407])\n```\n:::\n\n\nIn this particular case, each *column* of the table displays the values of 405 *commodities* required by a specific *industry*. The input-output table is commodity-by-industry with commodities in the rows and industries in the columns, in a way that the list of commodities and industries do not necessarily match so we need to harmonize them to construct the adjacency matrix.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(commodities %in% industries)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nFALSE  TRUE \n    4   401 \n```\n:::\n\n```{.r .cell-code}\ntable(industries %in% commodities)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nFALSE  TRUE \n    4   401 \n```\n:::\n\n```{.r .cell-code}\nio.table <- data[5 : 409, 3 : 407] %>% as.matrix\nio.table <- apply(io.table, 1, as.numeric) %>% t\n\ncolnames(io.table) <- industries\nrownames(io.table) <- commodities\n\nsectors <- industries[industries %in% commodities]\nio.table <- io.table[sectors, sectors]\n\ngo <- rowSums(io.table)\n```\n:::\n\n\n## Graph Analysis\n\nOnce the adjacency matrix is constructed, we can now analyze and visualize the graph:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng <- graph_from_adjacency_matrix(io.table, mode = 'directed', weighted = TRUE, add.rownames = TRUE)\n```\n:::\n\n\n### Size\n\nThe network has the same amount of vertices than the number of rows and columns of the adjacency matrix:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvcount(g)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 401\n```\n:::\n:::\n\n\nand the following number of edges,\n\n\n::: {.cell}\n\n```{.r .cell-code}\necount(g)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 51860\n```\n:::\n:::\n\n\nThe network is relatively sparse:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(io.table > 0) / length(sectors) ^ 2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n    FALSE      TRUE \n0.6775393 0.3224607 \n```\n:::\n\n```{.r .cell-code}\nio.table[io.table < 0] <- 0\n\nprob <- (table(io.table > 0) / length(sectors) ^ 2)['TRUE'] \n```\n:::\n\n\n### Degree\n\nIt is useful to compute the different degree concepts of the network and observe its distributions:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnodes <- data.frame(name = V(g)$name,\n                    output = rowSums(io.table),\n                    all.degree = degree(g, mode = 'all'), \n                    out.degree = degree(g, mode = 'out'),\n                    in.degree = degree(g, mode = 'in'), \n                    total.degree = degree(g, mode = 'total'),\n                    eigen.centrality = evcent(g)$vector)\n\nhead(nodes)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"name\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"output\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"all.degree\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"out.degree\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"in.degree\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"total.degree\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"eigen.centrality\"],\"name\":[7],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"Oilseed farming\",\"2\":\"0.6205750\",\"3\":\"127\",\"4\":\"20\",\"5\":\"107\",\"6\":\"127\",\"7\":\"0.10637487\",\"_rn_\":\"Oilseed farming\"},{\"1\":\"Grain farming\",\"2\":\"2.3515109\",\"3\":\"146\",\"4\":\"34\",\"5\":\"112\",\"6\":\"146\",\"7\":\"0.29696022\",\"_rn_\":\"Grain farming\"},{\"1\":\"Vegetable and melon farming\",\"2\":\"0.0800573\",\"3\":\"125\",\"4\":\"22\",\"5\":\"103\",\"6\":\"125\",\"7\":\"0.06012020\",\"_rn_\":\"Vegetable and melon farming\"},{\"1\":\"Fruit and tree nut farming\",\"2\":\"0.8983714\",\"3\":\"125\",\"4\":\"28\",\"5\":\"97\",\"6\":\"125\",\"7\":\"0.06717787\",\"_rn_\":\"Fruit and tree nut farming\"},{\"1\":\"Greenhouse, nursery, and floriculture production\",\"2\":\"0.2090344\",\"3\":\"133\",\"4\":\"41\",\"5\":\"92\",\"6\":\"133\",\"7\":\"0.06267788\",\"_rn_\":\"Greenhouse, nursery, and floriculture production\"},{\"1\":\"Other crop farming\",\"2\":\"0.7128803\",\"3\":\"174\",\"4\":\"56\",\"5\":\"118\",\"6\":\"174\",\"7\":\"0.11165162\",\"_rn_\":\"Other crop farming\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\nnodes %>% melt %>% filter(variable != 'output' & variable != 'eigen.centrality') %>% \n  ggplot(aes(x = value, fill = variable, color = variable)) + geom_density(alpha = .2, bw = 5) +\n  ggtitle('Degree Distribution')\n```\n\n::: {.cell-output-display}\n![](Week234_Challenge_Solutions_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n\n```{.r .cell-code}\ncorrplot :: corrplot(cor(nodes[ , -1]), title = 'Correlation Plot')\n```\n\n::: {.cell-output-display}\n![](Week234_Challenge_Solutions_files/figure-html/unnamed-chunk-9-2.png){width=672}\n:::\n\n```{.r .cell-code}\nkableExtra :: kable(apply(nodes[ , -1], 2, function (x) nodes$name[order(x, decreasing = TRUE)][1 : 10]))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> output </th>\n   <th style=\"text-align:left;\"> all.degree </th>\n   <th style=\"text-align:left;\"> out.degree </th>\n   <th style=\"text-align:left;\"> in.degree </th>\n   <th style=\"text-align:left;\"> total.degree </th>\n   <th style=\"text-align:left;\"> eigen.centrality </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Management of companies and enterprises </td>\n   <td style=\"text-align:left;\"> Nonresidential maintenance and repair </td>\n   <td style=\"text-align:left;\"> Electric power generation, transmission, and distribution </td>\n   <td style=\"text-align:left;\"> Scientific research and development services </td>\n   <td style=\"text-align:left;\"> Nonresidential maintenance and repair </td>\n   <td style=\"text-align:left;\"> Iron and steel mills and ferroalloy manufacturing </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Iron and steel mills and ferroalloy manufacturing </td>\n   <td style=\"text-align:left;\"> Full-service restaurants </td>\n   <td style=\"text-align:left;\"> Water, sewage and other systems </td>\n   <td style=\"text-align:left;\"> Hospitals </td>\n   <td style=\"text-align:left;\"> Full-service restaurants </td>\n   <td style=\"text-align:left;\"> Management of companies and enterprises </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Other real estate </td>\n   <td style=\"text-align:left;\"> Wired telecommunications carriers </td>\n   <td style=\"text-align:left;\"> Professional and commercial equipment and supplies </td>\n   <td style=\"text-align:left;\"> State and local government other services </td>\n   <td style=\"text-align:left;\"> Wired telecommunications carriers </td>\n   <td style=\"text-align:left;\"> Plastics material and resin manufacturing </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Other durable goods merchant wholesalers </td>\n   <td style=\"text-align:left;\"> Limited-service restaurants </td>\n   <td style=\"text-align:left;\"> Machinery, equipment, and supplies </td>\n   <td style=\"text-align:left;\"> Other amusement and recreation industries </td>\n   <td style=\"text-align:left;\"> Limited-service restaurants </td>\n   <td style=\"text-align:left;\"> Petroleum refineries </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Petroleum refineries </td>\n   <td style=\"text-align:left;\"> Services to buildings and dwellings </td>\n   <td style=\"text-align:left;\"> Other durable goods merchant wholesalers </td>\n   <td style=\"text-align:left;\"> Management of companies and enterprises </td>\n   <td style=\"text-align:left;\"> Services to buildings and dwellings </td>\n   <td style=\"text-align:left;\"> Other durable goods merchant wholesalers </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Electric power generation, transmission, and distribution </td>\n   <td style=\"text-align:left;\"> Architectural, engineering, and related services </td>\n   <td style=\"text-align:left;\"> Grocery and related product wholesalers </td>\n   <td style=\"text-align:left;\"> Junior colleges, colleges, universities, and professional schools </td>\n   <td style=\"text-align:left;\"> Architectural, engineering, and related services </td>\n   <td style=\"text-align:left;\"> Other real estate </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Truck transportation </td>\n   <td style=\"text-align:left;\"> Wireless telecommunications carriers (except satellite) </td>\n   <td style=\"text-align:left;\"> Petroleum and petroleum products </td>\n   <td style=\"text-align:left;\"> Nonresidential maintenance and repair </td>\n   <td style=\"text-align:left;\"> Wireless telecommunications carriers (except satellite) </td>\n   <td style=\"text-align:left;\"> Other basic organic chemical manufacturing </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Other nondurable goods merchant wholesalers </td>\n   <td style=\"text-align:left;\"> Management of companies and enterprises </td>\n   <td style=\"text-align:left;\"> Other nondurable goods merchant wholesalers </td>\n   <td style=\"text-align:left;\"> Accommodation </td>\n   <td style=\"text-align:left;\"> Management of companies and enterprises </td>\n   <td style=\"text-align:left;\"> Petrochemical manufacturing </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Plastics material and resin manufacturing </td>\n   <td style=\"text-align:left;\"> Waste management and remediation services </td>\n   <td style=\"text-align:left;\"> Wholesale electronic markets and agents and brokers </td>\n   <td style=\"text-align:left;\"> Civic, social, professional, and similar organizations </td>\n   <td style=\"text-align:left;\"> Waste management and remediation services </td>\n   <td style=\"text-align:left;\"> Electric power generation, transmission, and distribution </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Advertising, public relations, and related services </td>\n   <td style=\"text-align:left;\"> Other durable goods merchant wholesalers </td>\n   <td style=\"text-align:left;\"> Air transportation </td>\n   <td style=\"text-align:left;\"> Architectural, engineering, and related services </td>\n   <td style=\"text-align:left;\"> Other durable goods merchant wholesalers </td>\n   <td style=\"text-align:left;\"> Custom roll forming </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n\n```{.r .cell-code}\n# top.nodes <- nodes[order(nodes$degree, decreasing = T), ]\n# top.nodes[1 : 10, ] %>% ggplot(aes(x = out.degree, y = reorder(name, degree))) + geom_bar(stat = 'identity')\n\nplot(nodes$output, nodes$eigen.centrality)\n```\n\n::: {.cell-output-display}\n![](Week234_Challenge_Solutions_files/figure-html/unnamed-chunk-9-3.png){width=672}\n:::\n:::\n\n\n### Dyad Census\n\nA dyad census confirms the input-output network is quite sparse. We could compare this dyad census with the null version of a random network with a similar number of edges:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndyad.census(g)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$mut\n[1] 10041\n\n$asym\n[1] 31430\n\n$null\n[1] 38729\n```\n:::\n\n```{.r .cell-code}\ng.random <- erdos.renyi.game(length(sectors), prob, directed = TRUE)\n\necount(g.random)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 51650\n```\n:::\n\n```{.r .cell-code}\nrbind(IO = dyad.census(g), random = dyad.census(g.random))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       mut   asym  null \nIO     10041 31430 38729\nrandom 8286  35078 36836\n```\n:::\n:::\n\n\nMutual and null dyads are higher for the IO network, while asymmetric dyads are more common for the random network. How do we interpret these results?\n\n### Triad Census\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntriad.labels <- c(\"A,B,C, the empty graph.\",\n                  \"A->B, C, the graph with a single directed edge.\",\n                  \"A<->B, C, the graph with a mutual connection between two vertices.\",\n                  \"A<-B->C, the out-star.\",\n                  \"A->B<-C, the in-star.\",\n                  \"A->B->C, directed line.\",\"A<->B<-C.\",\n                  \"A<->B->C.\",\n                  \"A->B<-C, A->C.\",\n                  \"A<-B<-C, A->C.\",\n                  \"A<->B<->C.\",\n                  \"A<-B->C, A<->C.\",\n                  \"A->B<-C, A<->C.\",\n                  \"A->B->C, A<->C.\",\n                  \"A->B<->C, A<->C.\",\n                  \"A<->B<->C, A<->C, the complete graph.\")\n\ntriad.census.data <- data.frame(label = triad.labels, IO = triad.census(g), random = triad.census(g.random)) %>% melt\ncolnames(triad.census.data) <- c('triad', 'network', 'value')\ntriad.census.data %>% ggplot(aes(x = value, y = triad, fill = network)) + geom_bar(stat = 'identity', position = 'dodge')\n```\n\n::: {.cell-output-display}\n![](Week234_Challenge_Solutions_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\nStriking features of the above plot is the over-representation of out-stars, complete, and empty graphs in the input-output case relative to the random graph, while there is an under-representation of graphs with single directed edges and directed lines.\n\n## Transitivity\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntransitivity(g, type = 'global')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.6517081\n```\n:::\n\n```{.r .cell-code}\ntransitivity(g.random, type = 'global')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.5408801\n```\n:::\n\n```{.r .cell-code}\nnodes$transitivity <- transitivity(g, type = 'local')\nnodes$weighted.transitivity <-  transitivity(g, type = 'weighted')\n\nmelt(nodes) %>% filter(variable == 'transitivity' | variable == 'weighted.transitivity') %>% \n  ggplot(aes(x = value, fill = variable, color = variable)) + geom_density(alpha = 0.2) +\n  ggtitle('Transitivity Distribution, Local and Weighted')\n```\n\n::: {.cell-output-display}\n![](Week234_Challenge_Solutions_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n\n```{.r .cell-code}\nrbind(data.frame(network = 'IO', value = transitivity(g, type = 'local')),\n      data.frame(network = 'random', value = transitivity(g.random, type = 'local'))) %>% \n  ggplot(aes(x = value, fill = network, color = network)) + geom_density(alpha = 0.2) +\n  ggtitle('Transitivity Distribution by Network')\n```\n\n::: {.cell-output-display}\n![](Week234_Challenge_Solutions_files/figure-html/unnamed-chunk-12-2.png){width=672}\n:::\n:::\n\n\n## Component Structure\n\n\n::: {.cell}\n\n```{.r .cell-code}\nE(g)$weight[E(g)$weight < 0] <- 0\n\ndiameter(g)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.129843\n```\n:::\n\n```{.r .cell-code}\ndiameter(g.random)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2\n```\n:::\n\n```{.r .cell-code}\nfarthest_vertices(g)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$vertices\n+ 2/401 vertices, named, from 3c3e69d:\n[1] Dog and cat food manufacturing Printing ink manufacturing    \n\n$distance\n[1] 0.129843\n```\n:::\n\n```{.r .cell-code}\nwc.g <- cluster_walktrap(g)\nmember <- membership(wc.g)\n\nnodes$member <- member\ntable(member)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nmember\n  1   2   3   4   5   6   7   8   9  10  11  12 \n  3  38 117 121   8 107   2   1   1   1   1   1 \n```\n:::\n\n```{.r .cell-code}\ntable(member) %>% melt %>% ggplot + geom_bar(aes(x = reorder(member, - value), y = value, fill = factor(member)), stat = 'identity')\n```\n\n::: {.cell-output-display}\n![](Week234_Challenge_Solutions_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Percentages of Output of each Component\ngo.wc.percent <- 100 * sapply(names(table(member)), function(x) sum(go[member==x]))/sum(go)\n\n\nx <- 4\nord.x <- order(go[member == x], decreasing = T)[1:15]\nV(g)$name[member == x][ord.x]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"Iron and steel mills and ferroalloy manufacturing\"       \n [2] \"Other durable goods merchant wholesalers\"                \n [3] \"Nonferrous Metal (except Aluminum) Smelting and Refining\"\n [4] \"Machinery, equipment, and supplies\"                      \n [5] \"Semiconductor and related device manufacturing\"          \n [6] \"Household appliances and electrical and electronic goods\"\n [7] \"Machine shops\"                                           \n [8] \"Turned product and screw, nut, and bolt manufacturing\"   \n [9] \"Copper rolling, drawing, extruding and alloying\"         \n[10] \"Other Motor Vehicle Parts Manufacturing\"                 \n[11] \"Aluminum product manufacturing from purchased aluminum\"  \n[12] \"Other electronic component manufacturing\"                \n[13] \"Coating, engraving, heat treating and allied activities\" \n[14] \"Alumina refining and primary aluminum production\"        \n[15] \"All other forging, stamping, and sintering\"              \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlargest <- lapply(1:3,\n       function(y) \n        {\n         x <- c(3,4,6)[y]\n         ord.x <- order(go[member == x], decreasing = T)[1:5]\n         data.frame(sector = V(g)$name[member == x][ord.x],\n                    output = go[member == x][ord.x],\n                    prcnt = round(100 * go[member == x][ord.x]/sum(go),2),\n                    component = as.factor(x),\n                    row.names = NULL)\n       })\n\nbind_rows(largest) %>% ggplot(aes(y=reorder(sector, prcnt), x=prcnt, fill=component, label=round(prcnt,2))) +\n  geom_bar(stat=\"identity\") + ylab('') + xlab('% of Output')\n```\n\n::: {.cell-output-display}\n![](Week234_Challenge_Solutions_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# + scale_fill_manual(\"component\", values = rainbow_hcl(8, end = 290)[c(1,2,6,8)])\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(colorspace)\nlibrary(qgraph)\n\nio.table.1 <- io.table\ndiag(io.table.1) <- 0\ng <- graph_from_adjacency_matrix(io.table.1, mode = 'directed', weighted = TRUE, add.rownames = TRUE)\n\ne <- get.edgelist(g, names = FALSE)\nl <- qgraph.layout.fruchtermanreingold(e, vcount = vcount(g))\nV(g)$size <- 5 * go ^ 0.25\nV(g)$frame.color <- NA\n\nV.cols <- member\nV(g)$color <- alpha(rainbow_hcl(8, end = 290)[V.cols],0.8)\nE(g)$color <- alpha('black', E(g)$weight / max(E(g)$weight))\nV(g)$label <- NA\n\n\npar(mar = c(0,0,0,0))\n\nl <- qgraph.layout.fruchtermanreingold(e, vcount = vcount(g),\n                                       area = 100 * (vcount(g) ^ 2), repulse.rad = (vcount(g) ^ 3))\n# pdf('test.pdf') # uncomment to generate a pdf file with the plot\nplot(g,layout = l, edge.arrow.size = 0)\n```\n\n::: {.cell-output-display}\n![](Week234_Challenge_Solutions_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# dev.off() # uncomment to generate a pdf file\n```\n:::\n\n\n<!-- # Other Visualization Packages -->\n\n<!-- ```{r 3js} -->\n\n<!-- library(threejs) -->\n\n<!-- library(htmlwidgets) -->\n\n<!-- # graphjs(largest_df_unique.igraph) -->\n\n<!-- # edges <- edges[!edges$from %in% 1 : 5 | !edges$to %in% 1 : 5] -->\n\n<!-- net.js <- graphjs(largest_df_unique.igraph, main=\"UNSC Members\", bg = \"gray10\", showLabels=T, stroke=F,  -->\n\n<!--                   curvature = 0.1, attraction = 0.9, repulsion = 0.8, opacity = 0.9, edge.alpha = .25, -->\n\n<!--                   vertex.size = as.vector(table(largest_df_unique$`1`)[V(largest_df_unique.igraph)$name] / 137))  -->\n\n<!-- points3d(net.js, vertices(net.js), color=\"red\", pch = V(largest_df_unique.igraph)$name,  -->\n\n<!--          size = 0.2) -->\n\n<!-- ``` -->\n\n<!-- ```{r visnetwork} -->\n\n<!-- library(visNetwork) -->\n\n<!-- node.names <- unique(largest_df_unique[,1]) %>% unlist -->\n\n<!-- node.aux <- 1 : 137 -->\n\n<!-- names(node.aux) <- node.names -->\n\n<!-- nodes <- data.frame(id = 1 : length(node.names), name = node.names) -->\n\n<!-- edges <- data.frame(from = node.aux[unlist(largest_df_unique[ , 1])],  -->\n\n<!--                     to = node.aux[unlist(largest_df_unique[ , 2])]) -->\n\n<!-- visNetwork(nodes, edges) -->\n\n<!-- plot(largest_df_unique.igraph, layout = layout_in_circle(largest_df_unique.igraph)) -->\n\n<!-- ``` -->\n",
    "supporting": [
      "Week234_Challenge_Solutions_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}