{
  "hash": "9744f52e4e3dfc0580719969a11d08f8",
  "result": {
    "markdown": "---\ntitle: \"Week 1 Challenge\"\nauthor: \"Mani Kanta Gogula\"\ndescription: \"Loading Data and Creating a Network\"\ndate: \"02/13/2023\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\n# editor: visual\ncategories: \n  - challenge_1\n  - instructions\n\n---\n\n\n\n\n\n\n## Challenge Overview\n\nToday's challenge is to\n\n1) read in a dataset, and\n\n2) create a network object\n\n## Load the Data\n\nRead in one (or more) of the following data sets, using the correct R package and command.\n\n-   got_marriages.csv\n-   fish_encounters dataset (available in the `tidyr` package)\n-   got_like_dislike.csv\n\nFind the `_data` folder, located inside the `posts` folder. Then you can read in the data, using base `read.csv` or `read_csv` standard tidy read command to read Comma Separated Values files or, alternatively, read the data in directly from loading a package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'readr' was built under R version 4.1.3\n```\n:::\n\n```{.r .cell-code}\ngot_marriages <- read_csv(\"_data/got/got_marriages.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 255 Columns: 5\n-- Column specification --------------------------------------------------------\nDelimiter: \",\"\nchr (5): From, To, Type, Notes, Generation\n\ni Use `spec()` to retrieve the full column specification for this data.\ni Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nhead(got_marriages)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 x 5\n  From      To      Type    Notes  Generation\n  <chr>     <chr>   <chr>   <chr>  <chr>     \n1 Targaryen Stark   Married R+L=J  Current   \n2 Baratheon Martell Engaged died   Current   \n3 Baratheon Stark   Engaged broken Current   \n4 Martell   Essos   Married <NA>   Current   \n5 Martell   Reach   Affair  <NA>   Current   \n6 Martell   Essos   Affair  <NA>   Current   \n```\n:::\n:::\n\n\n\n\n## Create a Network\n\nLoad the package `igraph` and create an `igraph` object (i.e. a graph or network) in the form of an edge list. The command may vary whether the data is given as a list of connections or an adjacency matrix. Is the network directed or undirected; weighted or unweighted; unimodal or bipartite? Can you plot it?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(igraph)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'igraph' was built under R version 4.1.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'igraph'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    decompose, spectrum\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:base':\n\n    union\n```\n:::\n\n```{.r .cell-code}\nnetwork.ig <- graph_from_data_frame(got_marriages, directed = TRUE)\n\n# Check if the network is directed or undirected, weighted or unweighted, unimodal or bipartite\nis_bipartite(network.ig)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] FALSE\n```\n:::\n\n```{.r .cell-code}\nis_weighted(network.ig) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] FALSE\n```\n:::\n\n```{.r .cell-code}\nis_directed(network.ig) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n\n```{.r .cell-code}\nplot(network.ig)\n```\n\n::: {.cell-output-display}\n![](Week_1_Mani-Kanta_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::",
    "supporting": [
      "Week_1_Mani-Kanta_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}