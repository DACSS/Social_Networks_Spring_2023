{
  "hash": "3f631507891428788ba2573ccee52a29",
  "result": {
    "markdown": "---\ntitle: \"Interpretive Assignment \"\nauthor: \"Akhilesh Kumar\"\ndescription: \"Interpretive Assignment\"\ndate: \"05/25/2023\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories: \n  - Interpretive Assignment\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(igraph)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'igraph'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    decompose, spectrum\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:base':\n\n    union\n```\n:::\n\n```{.r .cell-code}\nlibrary(network)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'network' was built under R version 4.2.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\n'network' 1.18.1 (2023-01-24), part of the Statnet Project\n* 'news(package=\"network\")' for changes since last version\n* 'citation(\"network\")' for citation information\n* 'https://statnet.org' for help, support, and other information\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'network'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:igraph':\n\n    %c%, %s%, add.edges, add.vertices, delete.edges, delete.vertices,\n    get.edge.attribute, get.edges, get.vertex.attribute, is.bipartite,\n    is.directed, list.edge.attributes, list.vertex.attributes,\n    set.edge.attribute, set.vertex.attribute\n```\n:::\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:igraph':\n\n    as_data_frame, groups, union\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n:::\n\n\n# Introduction\n\nThe crude oil international trade network dataset downloaded from the ITC website for the year 2022 is a matrix-format dataset capturing the import and export activities of crude oil between countries. The data is directed, representing the flow of crude oil from exporting to importing countries, and it is weighted, with the unit value expressed in 1000 dollars. This dataset provides valuable insights into the global crude oil trade dynamics, allowing for the identification of major importers, exporters, trade imbalances, and potential trade relationships. By analyzing the matrix, it is possible to gain a comprehensive understanding of the magnitude and patterns of crude oil trade on an international scale, aiding in strategic decision-making and market analysis within the crude oil industry.\n\n# Read Data\n\n::: {.cell}\n\n```{.r .cell-code}\n data <- read.csv(\"C:/social network project/project data/2709/Merged/2022.csv\", header = TRUE, row.names = 1)\n\nadjacency_matrix <- as.matrix(data)\n\nig.net <- igraph::graph_from_adjacency_matrix(adjacency_matrix, mode = \"directed\", weighted = TRUE, diag = FALSE)\n```\n:::\n\n\n\n# Network Attribute\n\nNode Count: The network consists of 241 nodes or countries. These nodes represent the entities involved in the crude international trade.\n\nEdge Count: The network has 917 edges, which represent the connections or relationships between the countries in terms of crude international trade. Each edge represents a trade relationship between two countries.\n\nis_bipartite: The network is determined to be not bipartite. A bipartite network is one where the nodes can be divided into two non-overlapping sets, and all edges connect nodes from one set to the other. In this case, the network does not exhibit such a clear division.\n\nis_directed: The network is directed, as indicated by the \"TRUE\" value. Directed edges mean that the relationships between countries in terms of crude international trade have a specific direction. It implies that the trade flow or influence between countries is not symmetric.\n\nis_weighted: The network is weighted, as indicated by the \"TRUE\" value.  the weights  represent value of international trade of crude oil between countries, and the unit is 1000 dollar, \n\nis_connected: The network is determined to be not connected. It implies that there may be some countries that are not directly connected or involved in the crude oil trade network, or there are isolated subnetworks within the overall trade network.\n\nDiameter: The diameter of the network is determined to be 1,750,920. The diameter is a measure of the longest shortest path between any two nodes in the network. In this case, it indicates that the maximum number of steps required to reach any country from any other country in terms of crude international trade is 1,750,920 steps. This value represents the maximum distance or connectivity in the network.\n\nAverage Path Length: The average path length of the network is calculated to be 68,350.95. The average path length is the average number of steps required to reach any country from any other country in the network. It provides an overall measure of the network's connectivity and how efficiently information or trade flows between countries.\n\nComponents: The components object contains three elements: membership, csize, and no. The membership element assigns each node (country) to a specific component. The csize element specifies the size of each component, and the no element indicates the number of components in the network.\n\nNumber of Components: There is only one component in the network, as indicated by the value 1 in the num_components variable. This means that all countries in the network are connected in some way, either directly or indirectly through other countries, forming a single connected component.\n\nComponent Sizes: The component_sizes variable contains a vector that indicates the size of each component. In this case, all components have a size of 1, except for one component that has a size of 146. This implies that the majority of countries are part of a single large connected component, while the remaining countries form isolated components of size 1.\n\nGiant Component Proportion: The giant_component_proportion variable represents the proportion of nodes in the giant component, which is the largest connected component in the network. The result is approximately 0.6058091, indicating that around 60.58% of the nodes are part of the giant component.\n\nSingleton Proportion: The singleton_proportion variable represents the proportion of unconnected nodes or singletons in the network. The result is approximately 0.3941909, indicating that around 39.42% of the nodes in the network are not connected to any other node.\n\nThe vertex attribute names in the network are:\n\n- \"name\": This attribute represents the name or label of each vertex in the network. It likely corresponds to the names of the countries involved in the crude international trade.\n\n- \"in_weight\": This attribute represents the weight or quantitative measure associated with the incoming edges of each vertex. It likely indicates the amount of crude oil received by each country from other countries.\n\n- \"out_weight\": This attribute represents the weight or quantitative measure associated with the outgoing edges of each vertex. It likely indicates the amount of crude oil exported by each country to other countries.\n\nThe edge attribute for the network is \"weight\", as indicated by the result, which is value of trade with per unit value of $1000.\n\nMinimum Edge Weight: The minimum edge weight in the network is 1. This represents the lowest value among all the edge weights in the crude international trade network.\n\nMean Edge Weight: The mean edge weight in the network is approximately 1,584,591, with per unit value of $1000.\n\nMedian Edge Weight: The median edge weight in the network is approximately 113,854, with per unit value of $1000.\n\nDensity: The density of the network is approximately 0.01585408. Density is a measure of how interconnected the network is. It represents the proportion of edges present in the network compared to the maximum possible number of edges. 0.01585408 suggests low density network.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  # Number of vertices in network:\n  cat(\"Node Count: \\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nNode Count: \n```\n:::\n\n```{.r .cell-code}\n  nodes = vcount(ig.net)\n  print(nodes)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 241\n```\n:::\n\n```{.r .cell-code}\n  # Number of edges in network:\n  cat(\"Edge Count: \\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nEdge Count: \n```\n:::\n\n```{.r .cell-code}\n  ecount(ig.net)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 917\n```\n:::\n\n```{.r .cell-code}\n  # Bipartite or single mode network verification in network:\n  cat(\"is_bipartite: \\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nis_bipartite: \n```\n:::\n\n```{.r .cell-code}\n  is_bipartite(ig.net)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] FALSE\n```\n:::\n\n```{.r .cell-code}\n  # Directed or undirected edges verification in network\n  cat(\"is_directed: \\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nis_directed: \n```\n:::\n\n```{.r .cell-code}\n  print(is_directed(ig.net))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n\n```{.r .cell-code}\n  # Weighted or unweighted edges verification in network\n  cat(\"is_weighted \\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nis_weighted \n```\n:::\n\n```{.r .cell-code}\n  print(is_weighted(ig.net))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n\n```{.r .cell-code}\n  # Is Connected verification in network\n  cat(\"is_connected: \\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nis_connected: \n```\n:::\n\n```{.r .cell-code}\n  print(is_connected(ig.net))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] FALSE\n```\n:::\n\n```{.r .cell-code}\n  # Calculate the diameter of the network\n  cat(\"diameter \\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ndiameter \n```\n:::\n\n```{.r .cell-code}\n  diameter <- diameter(ig.net)\n  print(diameter)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1750920\n```\n:::\n\n```{.r .cell-code}\n  # Calculate the average path length\n  cat(\"average_path_length: \\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\naverage_path_length: \n```\n:::\n\n```{.r .cell-code}\n  average_path_length <- average.path.length(ig.net)\n  print(average_path_length)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 68350.95\n```\n:::\n\n```{.r .cell-code}\n   # Calculate the connected components\n  cat(\"Components: \\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nComponents: \n```\n:::\n\n```{.r .cell-code}\n  components <- clusters(ig.net)\n  print(components)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$membership\n                              Afghanistan \n                                        1 \n                               Africa_nes \n                                        2 \n                                  Albania \n                                        3 \n                                  Algeria \n                                        3 \n                              America_nes \n                                        4 \n                           American_Samoa \n                                        5 \n                                  Andorra \n                                        3 \n                                   Angola \n                                        3 \n                                 Anguilla \n                                        6 \n                      Antigua_and_Barbuda \n                                        7 \n                                 Area_Nes \n                                        3 \n                                Argentina \n                                        3 \n                                  Armenia \n                                        8 \n                                    Aruba \n                                        3 \n                                 Asia_nes \n                                        9 \n                                Australia \n                                        3 \n                                  Austria \n                                        3 \n                               Azerbaijan \n                                        3 \n                                  Bahamas \n                                        3 \n                                  Bahrain \n                                        3 \n                               Bangladesh \n                                        3 \n                                 Barbados \n                                        3 \n                                  Belarus \n                                       10 \n                                  Belgium \n                                        3 \n                                   Belize \n                                        3 \n                                    Benin \n                                       11 \n                                  Bermuda \n                                       12 \n                                   Bhutan \n                                       13 \n                                  Bolivia \n                                        3 \n          Bonaire_Sint_Eustatius_and_Saba \n                                       14 \n                   Bosnia_and_Herzegovina \n                                        3 \n                                 Botswana \n                                        3 \n                                   Brazil \n                                        3 \n           British_Indian_Ocean_Territory \n                                       15 \n                   British_Virgin_Islands \n                                       16 \n                        Brunei_Darussalam \n                                        3 \n                                 Bulgaria \n                                        3 \n                             Burkina_Faso \n                                       17 \n                                  Burundi \n                                       18 \n                               Cabo_Verde \n                                       19 \n                                 Cambodia \n                                        3 \n                                 Cameroon \n                                        3 \n                                   Canada \n                                        3 \n                            Caribbean_Nes \n                                       20 \n                           Cayman_Islands \n                                       21 \n                 Central_African_Republic \n                                       22 \n                                     Chad \n                                        3 \n                                    Chile \n                                        3 \n                                    China \n                                        3 \n                         Christmas_Island \n                                       23 \n                  Cocos_.Keeling._Islands \n                                       24 \n                                 Colombia \n                                        3 \n                                  Comoros \n                                       25 \n                                    Congo \n                                        3 \n                                 Congo_DR \n                                        3 \n                             Cook_Islands \n                                       26 \n                               Costa_Rica \n                                       27 \n                                  Croatia \n                                        3 \n                                     Cuba \n                                        3 \n                                  Curacao \n                                        3 \n                                   Cyprus \n                                        3 \n                           Czech_Republic \n                                        3 \n                                  Denmark \n                                        3 \n                                 Djibouti \n                                       28 \n                                 Dominica \n                                        3 \n                       Dominican_Republic \n                                        3 \n                                  Ecuador \n                                        3 \n                                    Egypt \n                                        3 \n                              El_Salvador \n                                        3 \n                        Equatorial_Guinea \n                                        3 \n                                  Eritrea \n                                       29 \n                                  Estonia \n                                        3 \n                                 Eswatini \n                                       30 \n                                 Ethiopia \n                                        3 \n                         Europe_Othr._Nes \n                                       31 \n                       European_Union_Nes \n                                        3 \n              Falkland_Islands_.Malvinas. \n                                       32 \n                            Faroe_Islands \n                                       33 \n                                     Fiji \n                                       34 \n                                  Finland \n                                        3 \n                                   France \n                                        3 \n                               Free_Zones \n                                       35 \n                         French_Polynesia \n                                       36 \nFrench_Southern_and_Antarctic_Territories \n                                       37 \n                                    Gabon \n                                        3 \n                                   Gambia \n                                       38 \n                                  Georgia \n                                        3 \n                                  Germany \n                                        3 \n                                    Ghana \n                                        3 \n                                Gibraltar \n                                        3 \n                                   Greece \n                                        3 \n                                Greenland \n                                        3 \n                                  Grenada \n                                       39 \n                                Guatemala \n                                        3 \n                                   Guinea \n                                       40 \n                            Guinea.Bissau \n                                       41 \n                                   Guyana \n                                        3 \n                                    Haiti \n                                       42 \n                                 Honduras \n                                       43 \n                                 Hongkong \n                                        3 \n                                  Hungary \n                                        3 \n                                  Iceland \n                                        3 \n                                    India \n                                        3 \n                                Indonesia \n                                        3 \n                                     Iran \n                                        3 \n                                     Iraq \n                                        3 \n                                  Ireland \n                                        3 \n                                   Israel \n                                        3 \n                                    Italy \n                                        3 \n                              Ivory_Coast \n                                        3 \n                                  Jamaica \n                                        3 \n                                    Japan \n                                        3 \n                                   Jordan \n                                       44 \n                               Kazakhstan \n                                        3 \n                                    Kenya \n                                        3 \n                                 Kiribati \n                                       45 \n                                   Kuwait \n                                        3 \n                               Kyrgyzstan \n                                       46 \n                                 LAIA_nes \n                                       47 \n                                     Laos \n                                       48 \n                                     Laso \n                                       49 \n                                   Latvia \n                                        3 \n                                  Lebanon \n                                       50 \n                                  Lesotho \n                                        3 \n                                  Liberia \n                                        3 \n                                    Libya \n                                        3 \n                                Lithuania \n                                        3 \n                               Luxembourg \n                                        3 \n                                Macedonia \n                                       51 \n                               Madagascar \n                                        3 \n                                   Malawi \n                                        3 \n                                 Malaysia \n                                        3 \n                                 Maldives \n                                       52 \n                                     Mali \n                                        3 \n                                    Malta \n                                        3 \n                         Marshall_Islands \n                                       53 \n                               Mauritania \n                                       54 \n                                Mauritius \n                                       55 \n                                  Mayotte \n                                       56 \n                                   Mexico \n                                        3 \n                               Micronesia \n                                       57 \n                                  Moldova \n                                        3 \n                                 Mongolia \n                                        3 \n                               Montenegro \n                                       58 \n                               Montserrat \n                                       59 \n                                  Morocco \n                                        3 \n                               Mozambique \n                                        3 \n                                  Myanmar \n                                        3 \n                                  Namibia \n                                        3 \n                                    Nauru \n                                       60 \n                                    Nepal \n                                       61 \n                              Netherlands \n                                        3 \n                     Netherlands_Antilles \n                                       62 \n                            New_Caledonia \n                                       63 \n                              New_Zealand \n                                        3 \n                                Nicaragua \n                                        3 \n                                    Niger \n                                        3 \n                                  Nigeria \n                                        3 \n                                     Niue \n                                       64 \n                           Norfolk_Island \n                                       65 \n    North_America_and_Central_America_nes \n                                       66 \n                              North_Korea \n                                       67 \n                 Northern_Mariana_Islands \n                                       68 \n                                   Norway \n                                        3 \n                              Oceania_Nes \n                                       69 \n                                     Oman \n                                        3 \n                                 Pakistan \n                                        3 \n                                    Palau \n                                       70 \n                                Palestine \n                                       71 \n                                   Panama \n                                        3 \n                         Papua_New_Guinea \n                                        3 \n                                 Paraguay \n                                        3 \n                                     Peru \n                                        3 \n                              Philippines \n                                        3 \n                                 Pitcairn \n                                       72 \n                                   Poland \n                                        3 \n                                 Portugal \n                                        3 \n                                    Qatar \n                                        3 \n                                  Romania \n                                        3 \n                                   Russia \n                                        3 \n                                   Rwanda \n                                       73 \n                             Saint_Helena \n                                        3 \n                    Saint_Kitts_and_Nevis \n                                       74 \n                              Saint_Lucia \n                                       75 \n                Saint_Pierre_and_Miquelon \n                                       76 \n         Saint_Vincent_and_the_Grenadines \n                                       77 \n                                    Samoa \n                                       78 \n                    Sao_Tome_and_Principe \n                                       79 \n                             Saudi_Arabia \n                                        3 \n                                  Senegal \n                                        3 \n                                   Serbia \n                                        3 \n                    Serbia_and_Montenegro \n                                       80 \n                               Seychelles \n                                       81 \n                  Ship_stores_and_bunkers \n                                        3 \n                             Sierra_Leone \n                                        3 \n                                Singapore \n                                        3 \n                                 Slovakia \n                                        3 \n                                 Slovenia \n                                        3 \n                          Solomon_Islands \n                                       82 \n                                  Somalia \n                                       83 \n                             South_Africa \n                                        3 \n                              South_Korea \n                                        3 \n                              South_Sudan \n                                        3 \n                                    Spain \n                                        3 \n                       Special_categories \n                                        3 \n                                Sri_Lanka \n                                       84 \n                                    Sudan \n                                        3 \n                                 Suriname \n                                        3 \n                                   Sweden \n                                        3 \n                              Switzerland \n                                        3 \n                                    Syria \n                                       85 \n                           Taipei_Chinese \n                                        3 \n                               Tajikistan \n                                       86 \n                                 Tanzania \n                                       87 \n                                 Thailand \n                                        3 \n                              Timor.Leste \n                                        3 \n                                     Togo \n                                        3 \n                                  Tokelau \n                                       88 \n                                    Tonga \n                                       89 \n                      Trinidad_and_Tobago \n                                        3 \n                                  Tunisia \n                                        3 \n                                   Turkey \n                                        3 \n                             Turkmenistan \n                                        3 \n                 Turks_and_Caicos_Islands \n                                       90 \n                                   Tuvalu \n                                       91 \n                                   Uganda \n                                       92 \n                                  Ukraine \n                                        3 \n                     United_Arab_Emirates \n                                        3 \n                           United_Kingdom \n                                        3 \n     United_States_Minor_Outlying_Islands \n                                        3 \n                 United_States_of_America \n                                        3 \n                                  Uruguay \n                                        3 \n                               Uzbekistan \n                                       93 \n                                  Vanuatu \n                                       94 \n                                Venezuela \n                                        3 \n                                 Viet_Nam \n                                        3 \n                Wallis_and_Futuna_Islands \n                                       95 \n                            West_Asia_nes \n                                       96 \n                                    Yemen \n                                        3 \n                                   Zambia \n                                        3 \n                                 Zimbabwe \n                                        3 \n\n$csize\n [1]   1   1 146   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1\n[20]   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1\n[39]   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1\n[58]   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1\n[77]   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1\n[96]   1\n\n$no\n[1] 96\n```\n:::\n\n```{.r .cell-code}\n  cat(\"Number of Components\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nNumber of Components\n```\n:::\n\n```{.r .cell-code}\n  num_components <- length(components$no)\n  print(num_components)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1\n```\n:::\n\n```{.r .cell-code}\n  cat(\"Component_Size\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nComponent_Size\n```\n:::\n\n```{.r .cell-code}\n  component_sizes <- components$csize\n  print(component_sizes)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1]   1   1 146   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1\n[20]   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1\n[39]   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1\n[58]   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1\n[77]   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1\n[96]   1\n```\n:::\n\n```{.r .cell-code}\n  # Calculate the proportion of nodes in the giant component\n  cat(\"giant_component_proportion: \\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ngiant_component_proportion: \n```\n:::\n\n```{.r .cell-code}\n  giant_component_proportion <- max(components$csize) / nodes\n  print(giant_component_proportion)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.6058091\n```\n:::\n\n```{.r .cell-code}\n  # Calculate the proportion of unconnected nodes (singletons)\n  \n  cat(\"Singlton: \\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSinglton: \n```\n:::\n\n```{.r .cell-code}\n  singleton_proportion <- sum(components$csize == 1) / nodes\n  print(singleton_proportion)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.3941909\n```\n:::\n\n```{.r .cell-code}\n  # Vertex attributes for network\n  cat(\"vertex_attr_names: \\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nvertex_attr_names: \n```\n:::\n\n```{.r .cell-code}\n  print(vertex_attr_names(ig.net))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"name\"\n```\n:::\n\n```{.r .cell-code}\n  # Vertex attribute, Nodes in network:\n  cat(\"Node Names: \\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nNode Names: \n```\n:::\n\n```{.r .cell-code}\n  print(V(ig.net)$name)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  [1] \"Afghanistan\"                              \n  [2] \"Africa_nes\"                               \n  [3] \"Albania\"                                  \n  [4] \"Algeria\"                                  \n  [5] \"America_nes\"                              \n  [6] \"American_Samoa\"                           \n  [7] \"Andorra\"                                  \n  [8] \"Angola\"                                   \n  [9] \"Anguilla\"                                 \n [10] \"Antigua_and_Barbuda\"                      \n [11] \"Area_Nes\"                                 \n [12] \"Argentina\"                                \n [13] \"Armenia\"                                  \n [14] \"Aruba\"                                    \n [15] \"Asia_nes\"                                 \n [16] \"Australia\"                                \n [17] \"Austria\"                                  \n [18] \"Azerbaijan\"                               \n [19] \"Bahamas\"                                  \n [20] \"Bahrain\"                                  \n [21] \"Bangladesh\"                               \n [22] \"Barbados\"                                 \n [23] \"Belarus\"                                  \n [24] \"Belgium\"                                  \n [25] \"Belize\"                                   \n [26] \"Benin\"                                    \n [27] \"Bermuda\"                                  \n [28] \"Bhutan\"                                   \n [29] \"Bolivia\"                                  \n [30] \"Bonaire_Sint_Eustatius_and_Saba\"          \n [31] \"Bosnia_and_Herzegovina\"                   \n [32] \"Botswana\"                                 \n [33] \"Brazil\"                                   \n [34] \"British_Indian_Ocean_Territory\"           \n [35] \"British_Virgin_Islands\"                   \n [36] \"Brunei_Darussalam\"                        \n [37] \"Bulgaria\"                                 \n [38] \"Burkina_Faso\"                             \n [39] \"Burundi\"                                  \n [40] \"Cabo_Verde\"                               \n [41] \"Cambodia\"                                 \n [42] \"Cameroon\"                                 \n [43] \"Canada\"                                   \n [44] \"Caribbean_Nes\"                            \n [45] \"Cayman_Islands\"                           \n [46] \"Central_African_Republic\"                 \n [47] \"Chad\"                                     \n [48] \"Chile\"                                    \n [49] \"China\"                                    \n [50] \"Christmas_Island\"                         \n [51] \"Cocos_.Keeling._Islands\"                  \n [52] \"Colombia\"                                 \n [53] \"Comoros\"                                  \n [54] \"Congo\"                                    \n [55] \"Congo_DR\"                                 \n [56] \"Cook_Islands\"                             \n [57] \"Costa_Rica\"                               \n [58] \"Croatia\"                                  \n [59] \"Cuba\"                                     \n [60] \"Curacao\"                                  \n [61] \"Cyprus\"                                   \n [62] \"Czech_Republic\"                           \n [63] \"Denmark\"                                  \n [64] \"Djibouti\"                                 \n [65] \"Dominica\"                                 \n [66] \"Dominican_Republic\"                       \n [67] \"Ecuador\"                                  \n [68] \"Egypt\"                                    \n [69] \"El_Salvador\"                              \n [70] \"Equatorial_Guinea\"                        \n [71] \"Eritrea\"                                  \n [72] \"Estonia\"                                  \n [73] \"Eswatini\"                                 \n [74] \"Ethiopia\"                                 \n [75] \"Europe_Othr._Nes\"                         \n [76] \"European_Union_Nes\"                       \n [77] \"Falkland_Islands_.Malvinas.\"              \n [78] \"Faroe_Islands\"                            \n [79] \"Fiji\"                                     \n [80] \"Finland\"                                  \n [81] \"France\"                                   \n [82] \"Free_Zones\"                               \n [83] \"French_Polynesia\"                         \n [84] \"French_Southern_and_Antarctic_Territories\"\n [85] \"Gabon\"                                    \n [86] \"Gambia\"                                   \n [87] \"Georgia\"                                  \n [88] \"Germany\"                                  \n [89] \"Ghana\"                                    \n [90] \"Gibraltar\"                                \n [91] \"Greece\"                                   \n [92] \"Greenland\"                                \n [93] \"Grenada\"                                  \n [94] \"Guatemala\"                                \n [95] \"Guinea\"                                   \n [96] \"Guinea.Bissau\"                            \n [97] \"Guyana\"                                   \n [98] \"Haiti\"                                    \n [99] \"Honduras\"                                 \n[100] \"Hongkong\"                                 \n[101] \"Hungary\"                                  \n[102] \"Iceland\"                                  \n[103] \"India\"                                    \n[104] \"Indonesia\"                                \n[105] \"Iran\"                                     \n[106] \"Iraq\"                                     \n[107] \"Ireland\"                                  \n[108] \"Israel\"                                   \n[109] \"Italy\"                                    \n[110] \"Ivory_Coast\"                              \n[111] \"Jamaica\"                                  \n[112] \"Japan\"                                    \n[113] \"Jordan\"                                   \n[114] \"Kazakhstan\"                               \n[115] \"Kenya\"                                    \n[116] \"Kiribati\"                                 \n[117] \"Kuwait\"                                   \n[118] \"Kyrgyzstan\"                               \n[119] \"LAIA_nes\"                                 \n[120] \"Laos\"                                     \n[121] \"Laso\"                                     \n[122] \"Latvia\"                                   \n[123] \"Lebanon\"                                  \n[124] \"Lesotho\"                                  \n[125] \"Liberia\"                                  \n[126] \"Libya\"                                    \n[127] \"Lithuania\"                                \n[128] \"Luxembourg\"                               \n[129] \"Macedonia\"                                \n[130] \"Madagascar\"                               \n[131] \"Malawi\"                                   \n[132] \"Malaysia\"                                 \n[133] \"Maldives\"                                 \n[134] \"Mali\"                                     \n[135] \"Malta\"                                    \n[136] \"Marshall_Islands\"                         \n[137] \"Mauritania\"                               \n[138] \"Mauritius\"                                \n[139] \"Mayotte\"                                  \n[140] \"Mexico\"                                   \n[141] \"Micronesia\"                               \n[142] \"Moldova\"                                  \n[143] \"Mongolia\"                                 \n[144] \"Montenegro\"                               \n[145] \"Montserrat\"                               \n[146] \"Morocco\"                                  \n[147] \"Mozambique\"                               \n[148] \"Myanmar\"                                  \n[149] \"Namibia\"                                  \n[150] \"Nauru\"                                    \n[151] \"Nepal\"                                    \n[152] \"Netherlands\"                              \n[153] \"Netherlands_Antilles\"                     \n[154] \"New_Caledonia\"                            \n[155] \"New_Zealand\"                              \n[156] \"Nicaragua\"                                \n[157] \"Niger\"                                    \n[158] \"Nigeria\"                                  \n[159] \"Niue\"                                     \n[160] \"Norfolk_Island\"                           \n[161] \"North_America_and_Central_America_nes\"    \n[162] \"North_Korea\"                              \n[163] \"Northern_Mariana_Islands\"                 \n[164] \"Norway\"                                   \n[165] \"Oceania_Nes\"                              \n[166] \"Oman\"                                     \n[167] \"Pakistan\"                                 \n[168] \"Palau\"                                    \n[169] \"Palestine\"                                \n[170] \"Panama\"                                   \n[171] \"Papua_New_Guinea\"                         \n[172] \"Paraguay\"                                 \n[173] \"Peru\"                                     \n[174] \"Philippines\"                              \n[175] \"Pitcairn\"                                 \n[176] \"Poland\"                                   \n[177] \"Portugal\"                                 \n[178] \"Qatar\"                                    \n[179] \"Romania\"                                  \n[180] \"Russia\"                                   \n[181] \"Rwanda\"                                   \n[182] \"Saint_Helena\"                             \n[183] \"Saint_Kitts_and_Nevis\"                    \n[184] \"Saint_Lucia\"                              \n[185] \"Saint_Pierre_and_Miquelon\"                \n[186] \"Saint_Vincent_and_the_Grenadines\"         \n[187] \"Samoa\"                                    \n[188] \"Sao_Tome_and_Principe\"                    \n[189] \"Saudi_Arabia\"                             \n[190] \"Senegal\"                                  \n[191] \"Serbia\"                                   \n[192] \"Serbia_and_Montenegro\"                    \n[193] \"Seychelles\"                               \n[194] \"Ship_stores_and_bunkers\"                  \n[195] \"Sierra_Leone\"                             \n[196] \"Singapore\"                                \n[197] \"Slovakia\"                                 \n[198] \"Slovenia\"                                 \n[199] \"Solomon_Islands\"                          \n[200] \"Somalia\"                                  \n[201] \"South_Africa\"                             \n[202] \"South_Korea\"                              \n[203] \"South_Sudan\"                              \n[204] \"Spain\"                                    \n[205] \"Special_categories\"                       \n[206] \"Sri_Lanka\"                                \n[207] \"Sudan\"                                    \n[208] \"Suriname\"                                 \n[209] \"Sweden\"                                   \n[210] \"Switzerland\"                              \n[211] \"Syria\"                                    \n[212] \"Taipei_Chinese\"                           \n[213] \"Tajikistan\"                               \n[214] \"Tanzania\"                                 \n[215] \"Thailand\"                                 \n[216] \"Timor.Leste\"                              \n[217] \"Togo\"                                     \n[218] \"Tokelau\"                                  \n[219] \"Tonga\"                                    \n[220] \"Trinidad_and_Tobago\"                      \n[221] \"Tunisia\"                                  \n[222] \"Turkey\"                                   \n[223] \"Turkmenistan\"                             \n[224] \"Turks_and_Caicos_Islands\"                 \n[225] \"Tuvalu\"                                   \n[226] \"Uganda\"                                   \n[227] \"Ukraine\"                                  \n[228] \"United_Arab_Emirates\"                     \n[229] \"United_Kingdom\"                           \n[230] \"United_States_Minor_Outlying_Islands\"     \n[231] \"United_States_of_America\"                 \n[232] \"Uruguay\"                                  \n[233] \"Uzbekistan\"                               \n[234] \"Vanuatu\"                                  \n[235] \"Venezuela\"                                \n[236] \"Viet_Nam\"                                 \n[237] \"Wallis_and_Futuna_Islands\"                \n[238] \"West_Asia_nes\"                            \n[239] \"Yemen\"                                    \n[240] \"Zambia\"                                   \n[241] \"Zimbabwe\"                                 \n```\n:::\n\n```{.r .cell-code}\n  # Edge attributes for network:\n  cat(\"Edge Attribute \\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nEdge Attribute \n```\n:::\n\n```{.r .cell-code}\n  print(edge_attr_names(ig.net))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"weight\"\n```\n:::\n\n```{.r .cell-code}\n  # Edge attribute, Edges with weights in network:\n  \n  cat(\"Edge Weight \\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nEdge Weight \n```\n:::\n\n```{.r .cell-code}\n  print(E(ig.net)$weight)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  [1]     12478    305004    247026    302042   1094091    580637    167086\n  [8]   2873409   1095890    336217    401433   1202916     58094    130703\n [15]     52926   1845148    906989    159260    827905   2696792    103106\n [22]    449284   1356213    615177     32022     30318    507192     45549\n [29]    426260  22567161   2344323    108847    837639   1475558    118270\n [36]     91286   1898373    624618    297678    444347   1613939     17763\n [43]    968936   1885710    511565   1388874    677582   9751714       554\n [50]    423613    120441     80453    285242     43981         1     89379\n [57]   2204065     44153  10110530   1542035    569761    251902    278686\n [64]        65   1751801   2149031     52554   1536401     91128     11741\n [71]        25    230910     40020    131124   1217519   1456515    399133\n [78]   1779185    419543    839911    426715   7285145     16254     63262\n [85]    876148    538876   1473440    157243    233779    518854    403852\n [92]         1    423857     13355        22      1006         1     11399\n [99]         2    991855     16185      1173       396      5387         1\n[106]   4038703  18621482     73534         1    558936    114892   1847667\n[113]   1067946    264846    268517     25733   1085363   2693853     54037\n[120]         1    934574   2834469   2329024   2448930   3925967     60042\n[127]     66328         1     26116   5620105    345764   1098769     65992\n[134]     82676     83690    270472     67815    314748      3231         6\n[141]     33506    274409    477227    279639    829569     31590    305992\n[148]     71635        53   2670783         3    146598    479634     86108\n[155]     72161    110365    612260     71279    219333   1306562   1224719\n[162] 117856834   1078418    402746   1230042    444267    514249     20528\n[169]      5313     11039         1         6         4    508347    295164\n[176]         1    177277    331725     33357     92233    107830     92592\n[183]     39232    230389    318457     10624   5759014       977   1856333\n[190]    201447    421884     77604         5   5228003    585559   8163115\n[197]    446387   5153689    250250    197777    218556    217785     89856\n[204]     97656    130245    100605    153045    653934    259528         2\n[211]    395416         4         1      6632         1        41         1\n[218]         5        48        23     78256    125433        13         1\n[225]    289489         6     75931     26815         8     14297        32\n[232]         1    137694    978986   1400175      4044   1794186    452979\n[239]    112510         1   5267022    124505    105828    180201    808155\n[246]    161138         1     75283    109513   1061143    206037    341959\n[253]    162648    287495    119784    314531    884936     62533         3\n[260]        10      2251       343     20115      1029      1083     15778\n[267]      2918        16         2      1731    138094         3         2\n[274]        15      3405         1         1       409         3         1\n[281]      3965        11         6         2         5   2413278    142568\n[288]    103726    447085    564018    334619    330576    122788     29363\n[295]    705506    109962    179604    116617      1518      8485         3\n[302]        42         3       401        18    125117      4446        88\n[309]   1704766     92174    383598    112461    117861    114057    101814\n[316]    586440   2361456     92972    302919      7021         7     11779\n[323]     14686     81401    237654    565300   1265754     33130   1071646\n[330]     96613    372382   1473226     92595    504249    812657   2677127\n[337]         1        25        92     83726        87        18      2188\n[344]    160858    448830     26330     40392     63167     92034     16555\n[351]   1372918         1    560630    595979    109591  39093287   1554344\n[358]   1929780   6967447   5328790     82908   4772873    362645   1210594\n[365]    876169   8520840   3442000    512079         1   7874649     45401\n[372]        16        80    327216      5500         1         1         2\n[379]         6     30165     45954     12007        98       767         3\n[386]         2     30380       434    684940     34643      3366    196017\n[393]    154772     59620     43064     70659    113812         1      8895\n[400]       141     80639   1676963   4636197    148780    463611      5601\n[407]       266   4333606   6418960   2602604    228681   2986517     98203\n[414]    416649     86181    367912   3168910    151327   4589847   2483481\n[421]    335210     40865    625200    882818  24602783         1   8293658\n[428]    585400     12758  10728438   6388448    415100    892822      1122\n[435]       804         2      2221       169      9004         2    388291\n[442]    771639   2933334    121827    251287   2235536   3718084   2476304\n[449]   6853679     36354   2085288    114081    277850   3820278    337489\n[456]    116399   1959664   1582249   2237086        11     17229     61661\n[463]         2   2525233     56868   1043353  21740572   1185778     20434\n[470]   1043512         2         1       198    173739    552574     67573\n[477]   2323240         1    127854     71828    408574   3860052   3770179\n[484]  21163289       950    243492         2     55391     22044         1\n[491]         1         4  23250286        13         1         1         1\n[498]         7        31         2        10       101   7084382         1\n[505]         2         9        36         1         4         1        13\n[512]         2         1     17793         1         1    147472        11\n[519]         1     15746    213601    129758     66136      8498         1\n[526]    250476     17430         1     53910     32747         2    270318\n[533]    193916   1186348   1278199    340079   4204934   1735372     13200\n[540]   4198999   1596186   5010700    326074    209380   1101807    428947\n[547]    246183   2164577   1090617   6769654   1472697    747307    204119\n[554]    920506   1373720   4036198    299680     10346    651630   4545038\n[561]         2    946837   5090845   1787993   7576264    144848    102774\n[568]     84450     64065    705056    996041  10373570   2954453     80396\n[575]     58714    336835    662596   9265758    221249     56577  18123908\n[582]    575668  29157746   1202890    108261         2     44429    413453\n[589]   2025875    252664     52890    202504      1287    352673     30337\n[596]     84573     67133     60330    105772    259031    261413     55685\n[603]     13844    221547         4    110382         2       112       205\n[610]         1        14        12   5975564        17   7083052    352808\n[617]        74   3396585   4887369    307048   1223436        20        43\n[624]    267882        27     29557    236845     68061      5011   3421321\n[631]  58377524     82848   2290117     74828   1076117   1776107       475\n[638]  12641283    258279   2711426   7184273   1425354    753569    204592\n[645]  14905784   6542554   1439438   1054516    101725   2819373   2314472\n[652]    428932    223676    291718    546749    521647   3205478   2783010\n[659]  64971515    168538   2615960    859020   1511868     64327   3129554\n[666]   3039470  39706650   2209040   6328607   6226721   5233727     56367\n[673]   4059218   1564543  37662458   3566291  10227749   5247494    110622\n[680]  16598971      2104       294     26102        68     57722         3\n[687]         9    104084         1      7724        12        10         3\n[694]         5       119         2      1497         1         7        46\n[701]        18        23        15         5         4        10        10\n[708]       276         1         2     48301         3        36         1\n[715]        12         2     94841         1     52141         2         2\n[722]        15     19887         6         3    236968    139117     42715\n[729]         1         7        10       130        14         7         6\n[736]         6    412442         7    124855         4      6297        86\n[743]         9        79     23606      8475        10         3        10\n[750]         1     48346       185     34119     61297    420769     55821\n[757]    157471     13884        10         1         2        47        13\n[764]     11675       195         1         1         1         2    147665\n[771]    341480     46121    144705     21258     16823     66351     39253\n[778]     22969         4     64285    107015         5    131629     81491\n[785]    239097     82167   1565406     20351         1     19374     63190\n[792]     96874     16441    104961     32102    113854     24289    123422\n[799]     66869     62390     56687     49730     76746     80599    384577\n[806]         7     47365       287     28995      8075     61096       299\n[813]        63    238566  32246641       160    428319    205348     31746\n[820]    216825  37738082   1947939    574062    563671   9492058   9224971\n[827]    284940   2600806  14870569    462932    156362    187354         3\n[834]     71832   1714953         2         2    322861    692826   1449069\n[841]   4453724         1    182217    560733   1136405   9103259     69597\n[848]     52778   1368172         1    503848   1024198    852203   2274709\n[855]         1         2         1   1749763         1    978318    102218\n[862]     92431   3000895  11912003    183275   6971488    762749         1\n[869]    405484   1868128     28500    717941    430213   6251864   8553791\n[876]  10135076    294475   1600251   5194005   1052993    551805    168720\n[883]  12334243    155293    889513    682759     42250    799297   1013025\n[890]    356919   9937698         1  14020887   5784117   1346488    760341\n[897]   6621819   3108906  11444088   1312708     92500         1     94370\n[904]     46491     65798    490338    508348    206897    379472    131022\n[911]     78379    712747    617220     62191     23106    385102       387\n```\n:::\n\n```{.r .cell-code}\n  # maximum weight of the edges in network:\n  cat(\"Max Edge Weight \\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nMax Edge Weight \n```\n:::\n\n```{.r .cell-code}\n  print(max(E(ig.net)$weight))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 117856834\n```\n:::\n\n```{.r .cell-code}\n  # minimum weight of the edges in network:\n  cat(\"MIn Edge Weight \\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nMIn Edge Weight \n```\n:::\n\n```{.r .cell-code}\n  print(min(E(ig.net)$weight))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1\n```\n:::\n\n```{.r .cell-code}\n  # mean & median weight of the edges in network:\n  cat(\"Mean Edge Weight \\n\" )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nMean Edge Weight \n```\n:::\n\n```{.r .cell-code}\n  print(mean(E(ig.net)$weight))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1584591\n```\n:::\n\n```{.r .cell-code}\n  cat(\"Median Edge Weight \\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nMedian Edge Weight \n```\n:::\n\n```{.r .cell-code}\n  print(median(E(ig.net)$weight))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 113854\n```\n:::\n\n```{.r .cell-code}\n  # density\n  cat(\"Density \\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nDensity \n```\n:::\n\n```{.r .cell-code}\n  print(igraph::edge_density(ig.net))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.01585408\n```\n:::\n:::\n\n\n# Diad and Triad\n\nDyad Census:\n\n- Mutual Ties (dyads with reciprocal relationships): There are 102 mutual ties in the network. Mutual ties occur when two countries have a two-way trade relationship.\n\n- Asymmetric Ties (dyads with non-reciprocal relationships): There are 713 asymmetric ties in the network. Asymmetric ties occur when the trade relationship between two countries is one-sided or unbalanced.\n\n- Null Ties (dyads with no relationship): There are 28,105 null ties in the network. Null ties represent dyads where there is no trade relationship between the two countries.\n\nTriad Census:\n\n- 212,8251 triads have the configuration of three vertices connected by three edges.\n\n- 140,157 triads have the configuration of three vertices connected by two edges and one missing edge.\n\n- 18,691 triads have the configuration of three vertices connected by one edge and two missing edges.\n\n- 2,871 triads have the configuration of three vertices connected by one edge and one missing edge.\n\n- 5,386 triads have the configuration of three vertices connected by two missing edges.\n\n- 2,693 triads have the configuration of three vertices connected by one missing edge.\n\n- 2,138 triads have the configuration of three vertices with all missing edges.\n\n- 1,129 triads have the configuration of three vertices connected by one edge and two missing edges.\n\n- 962 triads have the configuration of three vertices connected by all missing edges.\n\n- 15 triads have the configuration of three vertices with no connections.\n\n- 429 triads have the configuration of three vertices connected by three missing edges.\n\n- 717 triads have the configuration of three vertices connected by two edges and one missing edge.\n\n- 140 triads have the configuration of three vertices connected by one edge and two missing edges.\n\n- 106 triads have the configuration of three vertices connected by all missing edges.\n\n- 226 triads have the configuration of three vertices connected by one edge and one missing edge.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndyad_census(ig.net)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$mut\n[1] 102\n\n$asym\n[1] 713\n\n$null\n[1] 28105\n```\n:::\n\n```{.r .cell-code}\ntriad.census(ig.net)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] 2128251  140157   18691    2871    5386    2693    2138    1129     962\n[10]      15     429     717     140     106     226      49\n```\n:::\n:::\n\n\n# Network Attributes (2)\n\nDegree: The degree centrality values reveal the level of connectivity and influence of each country in the global network. With a degree centrality of 93, the Netherlands stands out as an exceptionally connected and influential country, followed closely by the United States of America with a centrality of 84. Spain holds a centrality of 62, positioning it as a significant player in the network. The United Kingdom, China, France, Italy, Malaysia, Singapore, and Germany also exhibit notable degrees of connectivity. These centrality values indicate the extensive connections and influence that these countries possess in the global arena, highlighting their roles in shaping international relations, trade, and cooperation.\n\nIn-Degree: The Netherlands leads the pack with an in-degree value of 63, showcasing its extensive network of international relationships. China follows closely with a score of 48, reflecting its position as a major global power. Spain holds a significant in-degree value of 40, highlighting its importance as a cultural and economic hub. The United States of America and France both have an in-degree value of 40, underscoring their global leadership and diplomatic ties. Italy, Singapore, and Thailand each possess an in-degree value of 35, emphasizing their economic and strategic significance. Germany and South Korea round out the top countries with in-degree values of 34, demonstrating their influence in global affairs. These countries play pivotal roles in shaping politics, economics, and cultural exchange on the international stage.\n\nOut-Degree: The out-degree centrality values provide insights into the number of connections each country has with other countries in terms of outgoing connections. In this context, the United States of America leads with an out-degree centrality of 44, indicating a high number of outgoing connections. The Netherlands and Russia follow closely with centrality values of 30 each. The United Kingdom, Brazil, and Nigeria demonstrate significant outgoing connectivity with centrality values of 28, 27, and 26, respectively. Other countries such as Norway, Saudi Arabia, Kazakhstan, Algeria, Angola, Spain, Azerbaijan, South Africa, Libya, France, Iraq, Italy, United Arab Emirates, and Colombia also exhibit notable levels of outgoing connections. These out-degree centrality values shed light on the countries that are actively engaged in forging relationships and initiating interactions with other nations on a global scale.\n\n\nBetweenness Centrality: The betweenness centrality values highlight the countries that act as pivotal intermediaries, facilitating connections and information flow within the network. The Netherlands emerges as a key player with the highest betweenness centrality of 7959.8333, followed by the United States of America at 3970.1667. Switzerland also demonstrates significant centrality at 3959.5000. Other countries such as South Africa, United Kingdom, Singapore, Italy, France, South Korea, Japan, and Spain play important roles in bridging different regions of the network. Brazil, Australia, Poland, China, Luxembourg, Colombia, Germany, and Belgium contribute as well to the network's connectivity. These betweenness centrality values provide insights into the countries that serve as critical hubs in facilitating communication and interactions among nations in the global network.\n\nEigenvector Centrality: The eigenvector centrality values provide insights into the influence and importance of countries within the network, based on their connections with other influential countries. The United States of America holds the highest eigenvector centrality score of 1.00000000, indicating its strong influence and widespread connections with other countries. Canada and China also demonstrate significant centrality scores of 0.88354839 and 0.67162649, respectively. Saudi Arabia, Russia, South Korea, Iraq, United Arab Emirates, and Japan also exhibit considerable eigenvector centrality values, highlighting their influence within the network. Netherlands, Brazil, Kuwait, Mexico, Malaysia, United Kingdom, Angola, Germany, Singapore, and Taipei Chinese contribute to the network's connectivity and influence as well. These eigenvector centrality values shed light on the countries that hold prominent positions and have the potential to exert substantial influence within the global network.\n\nCloseness Centrality: Closeness centrality measures how quickly information can spread from a particular country to others in the network, based on the average shortest path distance. Barbados holds the highest closeness centrality score of 7.487832e-05, indicating that it has the shortest average distance to reach other countries. Israel, Hong Kong, and India also demonstrate relatively high closeness centrality scores, suggesting their accessibility and efficient information flow within the network. Malaysia, Turkey, Singapore, and New Zealand exhibit comparable closeness centrality values, indicating their proximity to other countries in terms of information exchange. Spain, Ecuador, France, China, Cuba, Kuwait, Mongolia, Niger, Trinidad and Tobago, Italy, Japan, and Netherlands also contribute to the network's overall closeness, enabling efficient communication and information diffusion. These closeness centrality values highlight the countries that are well-connected and play a crucial role in the network's information flow dynamics.\n\nConstraint centrality: measures the extent to which a country serves as a bridge or bottleneck in the network, based on the number of shortest paths that pass through it. Slovakia has the highest constraint centrality score of 1.005663, indicating its crucial role in connecting other countries within the network. The Dominican Republic, Luxembourg, and Andorra also exhibit high constraint centrality values, suggesting their significance in controlling the flow of information or trade between various countries. Aruba, Bangladesh, Barbados, Belize, Bolivia, Botswana, Cambodia, Curacao, Dominica, El Salvador, European Union (EU) countries, Greenland, Iceland, Iran, Kenya, and Lesotho demonstrate constraint centrality scores of 1.000000, signifying their potential influence as intermediaries or constraints in the network. These countries are likely to play important roles in regulating the exchange of goods, information, or other resources among other nations in the network.\n\nAnalysis: \n\nThe analysis of the crude oil network highlights the significance of different countries based on various centrality measures. The Netherlands emerges as a highly connected and influential country, followed closely by the United States of America, Spain, and other key players such as the United Kingdom, China, France, and Germany. These countries demonstrate extensive connections, leadership, and active engagement in shaping international relations and trade within the crude oil network. Furthermore, the Netherlands and the United States of America serve as pivotal intermediaries, facilitating connections and information flow, while countries like Slovakia, the Dominican Republic, and Luxembourg play crucial roles in connecting other nations and controlling the flow of information. Overall, this analysis provides valuable insights into the importance of countries in the crude oil network, shedding light on their connectivity, influence, bridging capabilities, and potential control over the exchange of resources.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncat(\"Degree: \\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nDegree: \n```\n:::\n\n```{.r .cell-code}\nsort(igraph::degree(ig.net), decreasing = TRUE)[1:20]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n             Netherlands United_States_of_America                    Spain \n                      93                       84                       62 \n          United_Kingdom                    China                   France \n                      59                       58                       53 \n                   Italy                 Malaysia                Singapore \n                      53                       46                       46 \n                 Germany                   Brazil                 Thailand \n                      44                       40                       38 \n             South_Korea                   Norway                   Russia \n                      37                       32                       30 \n               Australia             South_Africa                Indonesia \n                      29                       29                       28 \n                 Belgium                  Nigeria \n                      26                       26 \n```\n:::\n\n```{.r .cell-code}\ncat(\"In Degree: \\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nIn Degree: \n```\n:::\n\n```{.r .cell-code}\nsort(igraph::degree(ig.net, mode = \"in\"), decreasing = TRUE)[1:20]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n             Netherlands                    China                    Spain \n                      63                       48                       40 \nUnited_States_of_America                   France                    Italy \n                      40                       36                       36 \n               Singapore                 Thailand                  Germany \n                      35                       35                       34 \n             South_Korea           United_Kingdom                 Malaysia \n                      34                       31                       30 \n                   Japan                  Belgium                Indonesia \n                      20                       19                       19 \n               Australia                   Greece           Czech_Republic \n                      18                       18                       14 \n          Taipei_Chinese                  Austria \n                      14                       13 \n```\n:::\n\n```{.r .cell-code}\ncat(\"Out Degree: \\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nOut Degree: \n```\n:::\n\n```{.r .cell-code}\nsort(igraph::degree(ig.net, mode = \"out\"), decreasing = TRUE)[1:20]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nUnited_States_of_America              Netherlands                   Russia \n                      44                       30                       30 \n          United_Kingdom                   Brazil                  Nigeria \n                      28                       27                       26 \n                  Norway             Saudi_Arabia               Kazakhstan \n                      25                       24                       23 \n                 Algeria                   Angola                    Spain \n                      22                       22                       22 \n              Azerbaijan             South_Africa                    Libya \n                      20                       20                       19 \n                  France                     Iraq                    Italy \n                      17                       17                       17 \n    United_Arab_Emirates                 Colombia \n                      17                       16 \n```\n:::\n\n```{.r .cell-code}\ncat(\"Betweenness Centrality: \\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nBetweenness Centrality: \n```\n:::\n\n```{.r .cell-code}\nsort(igraph::betweenness(ig.net),decreasing = TRUE)[1:20]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n             Netherlands United_States_of_America              Switzerland \n               7959.8333                3970.1667                3959.5000 \n            South_Africa           United_Kingdom                Singapore \n               3438.5000                2042.0000                2016.0000 \n                   Italy                   France              South_Korea \n               1948.0000                1579.3333                1422.0000 \n                   Japan              New_Zealand                    Spain \n               1402.0000                1260.0000                1256.0000 \n                  Brazil                Australia                   Poland \n               1217.0000                1065.0000                1044.0000 \n                   China               Luxembourg                 Colombia \n                896.1667                 869.1667                 864.0000 \n                 Germany                  Belgium \n                791.0000                 782.0000 \n```\n:::\n\n```{.r .cell-code}\ncat(\"Eigenvector Centrality \\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nEigenvector Centrality \n```\n:::\n\n```{.r .cell-code}\nsort(igraph::eigen_centrality(ig.net)$vector,decreasing = TRUE)[1:20]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nUnited_States_of_America                   Canada                    China \n              1.00000000               0.88354839               0.67162649 \n            Saudi_Arabia                   Russia              South_Korea \n              0.58629154               0.30412826               0.29781153 \n                    Iraq     United_Arab_Emirates                    Japan \n              0.25633142               0.24177585               0.23775259 \n             Netherlands                   Brazil                   Kuwait \n              0.17862049               0.16746186               0.15387946 \n                  Mexico                 Malaysia                     Oman \n              0.14996240               0.13452897               0.13349027 \n          United_Kingdom                   Angola                  Germany \n              0.13306143               0.11766084               0.11199193 \n               Singapore           Taipei_Chinese \n              0.10490506               0.09753917 \n```\n:::\n\n```{.r .cell-code}\ncat(\"Closeness Centrality \\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nCloseness Centrality \n```\n:::\n\n```{.r .cell-code}\nsort(igraph::closeness(ig.net),decreasing = TRUE)[1:20]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n           Barbados              Israel            Hongkong               India \n       7.487832e-05        3.056085e-06        3.772090e-07        3.724994e-07 \n           Malaysia              Turkey           Singapore         New_Zealand \n       3.696515e-07        3.672061e-07        3.655520e-07        3.655382e-07 \n              Spain             Ecuador              France               China \n       3.655285e-07        3.655154e-07        3.654896e-07        3.654860e-07 \n               Cuba              Kuwait            Mongolia               Niger \n       3.654821e-07        3.654756e-07        3.654615e-07        3.654579e-07 \nTrinidad_and_Tobago               Italy               Japan         Netherlands \n       3.654195e-07        3.654161e-07        3.654115e-07        3.653901e-07 \n```\n:::\n\n```{.r .cell-code}\ncat(\"Constraint Centrality: \\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nConstraint Centrality: \n```\n:::\n\n```{.r .cell-code}\nsort(igraph::constraint(ig.net),decreasing = TRUE)[1:20]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n          Slovakia Dominican_Republic         Luxembourg            Andorra \n          1.005663           1.000930           1.000098           1.000000 \n             Aruba         Bangladesh           Barbados             Belize \n          1.000000           1.000000           1.000000           1.000000 \n           Bolivia           Botswana           Cambodia            Curacao \n          1.000000           1.000000           1.000000           1.000000 \n          Dominica        El_Salvador European_Union_Nes          Greenland \n          1.000000           1.000000           1.000000           1.000000 \n           Iceland               Iran              Kenya            Lesotho \n          1.000000           1.000000           1.000000           1.000000 \n```\n:::\n:::\n\n# In, Out Trade Volume on Nodes\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncat(\"Trade Volume Import (Strength: \\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nTrade Volume Import (Strength: \n```\n:::\n\n```{.r .cell-code}\nV(ig.net)$in_weight <- strength(ig.net, mode = \"in\", weights = E(ig.net)$attribute)\n\nV(ig.net)$in_weight\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  [1]         0         0         0         2         0         0         1\n  [8]         0         0         0  10223762         2         0     92592\n [15]         0   7201893   3873821         2    141450         0     56868\n [22]         0         0  25091909         0         0         0         0\n [29]         1         0       102         5  10175334         0         0\n [36]   1273742   4121091         0         0         0         0         1\n [43]  17198384         0         0         0         0   5758299 366686768\n [50]         0         0    875121         0         0         4         0\n [57]         0   1496514         7     73534      7023   4906132   3681677\n [64]         0     28500    717948         6         0        87         0\n [71]         0      7702         0       170         0      2104         0\n [78]         0         0   7368876  35712407         0         0         0\n [85]         0         0       762  62337001         0     23406  15662935\n [92]        13         0      1173         0         0         0         0\n [99]         0     86108   3400640         1  15162962  11694688         0\n[106]         0   2495077  10819660  47318018    421886    359480 101257641\n[113]         0         0         2         0         0         0         0\n[120]         0         0         3         0       276         0         0\n[127]   6202343     25758         0         1         2  13545852         0\n[134]       294         2         0         0         0         0       100\n[141]         0         5         0         0         0         9        17\n[148]    295164        36         0         0  77943430         0         0\n[155]    563754    155293         0         0         0         0         0\n[162]         0         0   1190509         0         0         0         0\n[169]         0   5968853     42448         1   2556906    173742         0\n[176]  17824888   7757608        13   5881750         0         0        12\n[183]         0         0         0         0         0         0         0\n[190]    428947   2295581         0         0         0         2  35544680\n[197]   2903557         1         0         0   4432439 106278517         0\n[204]  47738163         0         0         0         0  15023555   2308059\n[211]         0  30984679         0         0  39155147         1         1\n[218]         0         0         0         0    270189         0         0\n[225]         0         0       169     59950  39947535     26116 205505482\n[232]   2002305         0         0         0    220356         0         0\n[239]         0        13        15\n```\n:::\n\n```{.r .cell-code}\ncat(\"Trade Volume Export (Strength: \\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nTrade Volume Export (Strength: \n```\n:::\n\n```{.r .cell-code}\nV(ig.net)$out_weight <- strength(ig.net, mode = \"out\", weights = E(ig.net)$attribute)\n\nV(ig.net)$out_weight\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  [1]         0         0    317482  17502344         0         0         0\n  [8]  38236228         0         0  10429850   3291328         0         0\n [15]         0  18333894     11766  18507428         0    423858         0\n [22]     13355         0   1020470      1173         0         0         0\n [29]       396         0      5387         0  49306832         0         0\n [36]   1984162      3237         0         0         0     33506   2270061\n [43] 124856692         0         0         0   3669722     36880   1438115\n [50]         0         0  23093065         0   6902806   1066507         0\n [57]         0    395422      6633         0         1       118    610282\n [64]         0         0         0  10147597   1564624         0   3441079\n [71]         0     43517         0         0         0         0         0\n [78]         0         0        16    147656         0         0         0\n [85]   5599710         0         0    140121   5574627     92972    336412\n [92]         0         0     81401         0         0   9202333         0\n [99]         0         1     83843         0      2293   2221085    560630\n[106]  83233976     45497    327216    848269    637944         0     89676\n[113]         0  36748389         0         0  51919408         0         0\n[120]         0         0      4318         0         0      9006  32316719\n[127]     78901         2         0         0         0  30860932         0\n[134]         0     71828         0         0         0         0  29202094\n[141]         0       950    243494         0         0     55391         0\n[148]     22044         1         0         0  30515935         0         0\n[155]    772558         0         2  41419717         0         0         0\n[162]         0         0  65415913         0  33205320    255394         0\n[169]         0      1287    700818         0    520444    291076         0\n[176]    110706        26  23225973    297509 123778614         0         0\n[183]         0         0         0         0         0         0 221147198\n[190]     28568         0         0         0     57722         0    111972\n[197]      1505        87         0         0    195680     19896    418800\n[204]    576065     82650         0    709242        10     11933         5\n[211]         0         0         0         0    535266    288390     22973\n[218]         0         0   2271095    681728    710736    145818         0\n[225]         0         0       362 111127635  27926876         0 131959478\n[232]    140861         0         0    556136   2016865         0         0\n[239]   1087619       387         0\n```\n:::\n:::\n\n\n# Community Clusters\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# cluster_fast_greedy\ncommunity_fast <- cluster_fast_greedy(as.undirected(ig.net))\n\n# get groups\n\nigraph::groups(community_fast)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$`1`\n [1] \"Angola\"                              \n [2] \"Bangladesh\"                          \n [3] \"Barbados\"                            \n [4] \"Bolivia\"                             \n [5] \"Brazil\"                              \n [6] \"Bulgaria\"                            \n [7] \"Chile\"                               \n [8] \"China\"                               \n [9] \"Congo\"                               \n[10] \"Congo_DR\"                            \n[11] \"Curacao\"                             \n[12] \"Cyprus\"                              \n[13] \"Egypt\"                               \n[14] \"Gabon\"                               \n[15] \"Georgia\"                             \n[16] \"Greece\"                              \n[17] \"Hungary\"                             \n[18] \"Iran\"                                \n[19] \"Iraq\"                                \n[20] \"Jamaica\"                             \n[21] \"Kuwait\"                              \n[22] \"Latvia\"                              \n[23] \"Luxembourg\"                          \n[24] \"Malaysia\"                            \n[25] \"Mongolia\"                            \n[26] \"Mozambique\"                          \n[27] \"Myanmar\"                             \n[28] \"Niger\"                               \n[29] \"Oman\"                                \n[30] \"Papua_New_Guinea\"                    \n[31] \"Paraguay\"                            \n[32] \"Poland\"                              \n[33] \"Portugal\"                            \n[34] \"Russia\"                              \n[35] \"Serbia\"                              \n[36] \"Slovakia\"                            \n[37] \"South_Sudan\"                         \n[38] \"Timor.Leste\"                         \n[39] \"United_States_Minor_Outlying_Islands\"\n[40] \"Yemen\"                               \n\n$`2`\n [1] \"Albania\"                 \"Algeria\"                \n [3] \"Andorra\"                 \"Austria\"                \n [5] \"Azerbaijan\"              \"Belgium\"                \n [7] \"Botswana\"                \"Cameroon\"               \n [9] \"Chad\"                    \"Croatia\"                \n[11] \"Cuba\"                    \"Czech_Republic\"         \n[13] \"Denmark\"                 \"Equatorial_Guinea\"      \n[15] \"Estonia\"                 \"European_Union_Nes\"     \n[17] \"Finland\"                 \"France\"                 \n[19] \"Germany\"                 \"Greenland\"              \n[21] \"Guyana\"                  \"Iceland\"                \n[23] \"Indonesia\"               \"Italy\"                  \n[25] \"Kazakhstan\"              \"Kenya\"                  \n[27] \"Lesotho\"                 \"Libya\"                  \n[29] \"Lithuania\"               \"Madagascar\"             \n[31] \"Malawi\"                  \"Mali\"                   \n[33] \"Malta\"                   \"Moldova\"                \n[35] \"Namibia\"                 \"Netherlands\"            \n[37] \"Nigeria\"                 \"Norway\"                 \n[39] \"Romania\"                 \"Saint_Helena\"           \n[41] \"Senegal\"                 \"Ship_stores_and_bunkers\"\n[43] \"Sierra_Leone\"            \"South_Africa\"           \n[45] \"Spain\"                   \"Special_categories\"     \n[47] \"Sudan\"                   \"Suriname\"               \n[49] \"Sweden\"                  \"Switzerland\"            \n[51] \"Togo\"                    \"Tunisia\"                \n[53] \"Turkey\"                  \"Turkmenistan\"           \n[55] \"Ukraine\"                 \"United_Kingdom\"         \n[57] \"Venezuela\"               \"Zambia\"                 \n[59] \"Zimbabwe\"               \n\n$`3`\n[1] \"Area_Nes\"               \"Australia\"              \"Bosnia_and_Herzegovina\"\n[4] \"Brunei_Darussalam\"      \"Israel\"                 \"Slovenia\"              \n\n$`4`\n [1] \"Argentina\"                \"Aruba\"                   \n [3] \"Bahamas\"                  \"Belize\"                  \n [5] \"Canada\"                   \"Colombia\"                \n [7] \"Dominica\"                 \"Dominican_Republic\"      \n [9] \"Ecuador\"                  \"El_Salvador\"             \n[11] \"Ghana\"                    \"Gibraltar\"               \n[13] \"Guatemala\"                \"Hongkong\"                \n[15] \"India\"                    \"Ireland\"                 \n[17] \"Ivory_Coast\"              \"Liberia\"                 \n[19] \"Mexico\"                   \"Nicaragua\"               \n[21] \"Panama\"                   \"Peru\"                    \n[23] \"Trinidad_and_Tobago\"      \"United_States_of_America\"\n[25] \"Uruguay\"                 \n\n$`5`\n [1] \"Bahrain\"              \"Cambodia\"             \"Ethiopia\"            \n [4] \"Japan\"                \"Morocco\"              \"New_Zealand\"         \n [7] \"Pakistan\"             \"Philippines\"          \"Qatar\"               \n[10] \"Saudi_Arabia\"         \"Singapore\"            \"South_Korea\"         \n[13] \"Taipei_Chinese\"       \"Thailand\"             \"United_Arab_Emirates\"\n[16] \"Viet_Nam\"            \n\n$`6`\n[1] \"Afghanistan\"\n\n$`7`\n[1] \"Africa_nes\"\n\n$`8`\n[1] \"America_nes\"\n\n$`9`\n[1] \"American_Samoa\"\n\n$`10`\n[1] \"Anguilla\"\n\n$`11`\n[1] \"Antigua_and_Barbuda\"\n\n$`12`\n[1] \"Armenia\"\n\n$`13`\n[1] \"Asia_nes\"\n\n$`14`\n[1] \"Belarus\"\n\n$`15`\n[1] \"Benin\"\n\n$`16`\n[1] \"Bermuda\"\n\n$`17`\n[1] \"Bhutan\"\n\n$`18`\n[1] \"Bonaire_Sint_Eustatius_and_Saba\"\n\n$`19`\n[1] \"British_Indian_Ocean_Territory\"\n\n$`20`\n[1] \"British_Virgin_Islands\"\n\n$`21`\n[1] \"Burkina_Faso\"\n\n$`22`\n[1] \"Burundi\"\n\n$`23`\n[1] \"Cabo_Verde\"\n\n$`24`\n[1] \"Caribbean_Nes\"\n\n$`25`\n[1] \"Cayman_Islands\"\n\n$`26`\n[1] \"Central_African_Republic\"\n\n$`27`\n[1] \"Christmas_Island\"\n\n$`28`\n[1] \"Cocos_.Keeling._Islands\"\n\n$`29`\n[1] \"Comoros\"\n\n$`30`\n[1] \"Cook_Islands\"\n\n$`31`\n[1] \"Costa_Rica\"\n\n$`32`\n[1] \"Djibouti\"\n\n$`33`\n[1] \"Eritrea\"\n\n$`34`\n[1] \"Eswatini\"\n\n$`35`\n[1] \"Europe_Othr._Nes\"\n\n$`36`\n[1] \"Falkland_Islands_.Malvinas.\"\n\n$`37`\n[1] \"Faroe_Islands\"\n\n$`38`\n[1] \"Fiji\"\n\n$`39`\n[1] \"Free_Zones\"\n\n$`40`\n[1] \"French_Polynesia\"\n\n$`41`\n[1] \"French_Southern_and_Antarctic_Territories\"\n\n$`42`\n[1] \"Gambia\"\n\n$`43`\n[1] \"Grenada\"\n\n$`44`\n[1] \"Guinea\"\n\n$`45`\n[1] \"Guinea.Bissau\"\n\n$`46`\n[1] \"Haiti\"\n\n$`47`\n[1] \"Honduras\"\n\n$`48`\n[1] \"Jordan\"\n\n$`49`\n[1] \"Kiribati\"\n\n$`50`\n[1] \"Kyrgyzstan\"\n\n$`51`\n[1] \"LAIA_nes\"\n\n$`52`\n[1] \"Laos\"\n\n$`53`\n[1] \"Laso\"\n\n$`54`\n[1] \"Lebanon\"\n\n$`55`\n[1] \"Macedonia\"\n\n$`56`\n[1] \"Maldives\"\n\n$`57`\n[1] \"Marshall_Islands\"\n\n$`58`\n[1] \"Mauritania\"\n\n$`59`\n[1] \"Mauritius\"\n\n$`60`\n[1] \"Mayotte\"\n\n$`61`\n[1] \"Micronesia\"\n\n$`62`\n[1] \"Montenegro\"\n\n$`63`\n[1] \"Montserrat\"\n\n$`64`\n[1] \"Nauru\"\n\n$`65`\n[1] \"Nepal\"\n\n$`66`\n[1] \"Netherlands_Antilles\"\n\n$`67`\n[1] \"New_Caledonia\"\n\n$`68`\n[1] \"Niue\"\n\n$`69`\n[1] \"Norfolk_Island\"\n\n$`70`\n[1] \"North_America_and_Central_America_nes\"\n\n$`71`\n[1] \"North_Korea\"\n\n$`72`\n[1] \"Northern_Mariana_Islands\"\n\n$`73`\n[1] \"Oceania_Nes\"\n\n$`74`\n[1] \"Palau\"\n\n$`75`\n[1] \"Palestine\"\n\n$`76`\n[1] \"Pitcairn\"\n\n$`77`\n[1] \"Rwanda\"\n\n$`78`\n[1] \"Saint_Kitts_and_Nevis\"\n\n$`79`\n[1] \"Saint_Lucia\"\n\n$`80`\n[1] \"Saint_Pierre_and_Miquelon\"\n\n$`81`\n[1] \"Saint_Vincent_and_the_Grenadines\"\n\n$`82`\n[1] \"Samoa\"\n\n$`83`\n[1] \"Sao_Tome_and_Principe\"\n\n$`84`\n[1] \"Serbia_and_Montenegro\"\n\n$`85`\n[1] \"Seychelles\"\n\n$`86`\n[1] \"Solomon_Islands\"\n\n$`87`\n[1] \"Somalia\"\n\n$`88`\n[1] \"Sri_Lanka\"\n\n$`89`\n[1] \"Syria\"\n\n$`90`\n[1] \"Tajikistan\"\n\n$`91`\n[1] \"Tanzania\"\n\n$`92`\n[1] \"Tokelau\"\n\n$`93`\n[1] \"Tonga\"\n\n$`94`\n[1] \"Turks_and_Caicos_Islands\"\n\n$`95`\n[1] \"Tuvalu\"\n\n$`96`\n[1] \"Uganda\"\n\n$`97`\n[1] \"Uzbekistan\"\n\n$`98`\n[1] \"Vanuatu\"\n\n$`99`\n[1] \"Wallis_and_Futuna_Islands\"\n\n$`100`\n[1] \"West_Asia_nes\"\n```\n:::\n\n```{.r .cell-code}\n# plot fast and greedy\n#png(filename = \"fg_comms.png\") # save as png\nplot(community_fast, ig.net, vertex.shape = \"circle\", vertex.size = 7, vertex.label.cex = .5, vertex.label.color = \"black\", edge.arrow.size = .25, rescale = TRUE, asp = 0, sub = \"Fast and Greedy Method\")\n```\n\n::: {.cell-output-display}\n![](Imperative_assignment_Akhilesh_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#cluster_walktrap\ncommunity_walktrap <- walktrap.community(as.undirected(ig.net))\n\n# get groups\n\nigraph::groups(community_walktrap)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$`1`\n  [1] \"Albania\"                  \"Algeria\"                 \n  [3] \"Angola\"                   \"Argentina\"               \n  [5] \"Australia\"                \"Austria\"                 \n  [7] \"Azerbaijan\"               \"Bahamas\"                 \n  [9] \"Bahrain\"                  \"Belgium\"                 \n [11] \"Brazil\"                   \"Brunei_Darussalam\"       \n [13] \"Bulgaria\"                 \"Cameroon\"                \n [15] \"Canada\"                   \"Chad\"                    \n [17] \"Chile\"                    \"China\"                   \n [19] \"Colombia\"                 \"Congo\"                   \n [21] \"Congo_DR\"                 \"Croatia\"                 \n [23] \"Cuba\"                     \"Cyprus\"                  \n [25] \"Czech_Republic\"           \"Denmark\"                 \n [27] \"Dominican_Republic\"       \"Ecuador\"                 \n [29] \"Egypt\"                    \"Equatorial_Guinea\"       \n [31] \"Estonia\"                  \"Finland\"                 \n [33] \"France\"                   \"Gabon\"                   \n [35] \"Germany\"                  \"Ghana\"                   \n [37] \"Gibraltar\"                \"Greece\"                  \n [39] \"Guatemala\"                \"Guyana\"                  \n [41] \"Hongkong\"                 \"Hungary\"                 \n [43] \"India\"                    \"Indonesia\"               \n [45] \"Iran\"                     \"Iraq\"                    \n [47] \"Ireland\"                  \"Italy\"                   \n [49] \"Ivory_Coast\"              \"Jamaica\"                 \n [51] \"Japan\"                    \"Kazakhstan\"              \n [53] \"Kuwait\"                   \"Latvia\"                  \n [55] \"Liberia\"                  \"Libya\"                   \n [57] \"Lithuania\"                \"Luxembourg\"              \n [59] \"Malaysia\"                 \"Malta\"                   \n [61] \"Mexico\"                   \"Mongolia\"                \n [63] \"Morocco\"                  \"Myanmar\"                 \n [65] \"Netherlands\"              \"New_Zealand\"             \n [67] \"Nicaragua\"                \"Nigeria\"                 \n [69] \"Norway\"                   \"Oman\"                    \n [71] \"Pakistan\"                 \"Panama\"                  \n [73] \"Papua_New_Guinea\"         \"Peru\"                    \n [75] \"Philippines\"              \"Poland\"                  \n [77] \"Portugal\"                 \"Qatar\"                   \n [79] \"Romania\"                  \"Russia\"                  \n [81] \"Saudi_Arabia\"             \"Senegal\"                 \n [83] \"Serbia\"                   \"Singapore\"               \n [85] \"Slovakia\"                 \"South_Africa\"            \n [87] \"South_Korea\"              \"South_Sudan\"             \n [89] \"Spain\"                    \"Special_categories\"      \n [91] \"Sudan\"                    \"Sweden\"                  \n [93] \"Switzerland\"              \"Taipei_Chinese\"          \n [95] \"Thailand\"                 \"Timor.Leste\"             \n [97] \"Togo\"                     \"Trinidad_and_Tobago\"     \n [99] \"Tunisia\"                  \"Turkey\"                  \n[101] \"Turkmenistan\"             \"United_Arab_Emirates\"    \n[103] \"United_Kingdom\"           \"United_States_of_America\"\n[105] \"Uruguay\"                  \"Venezuela\"               \n[107] \"Viet_Nam\"                 \"Yemen\"                   \n\n$`2`\n[1] \"Area_Nes\"               \"Bosnia_and_Herzegovina\" \"Israel\"                \n\n$`3`\n[1] \"Afghanistan\"\n\n$`4`\n[1] \"Africa_nes\"\n\n$`5`\n[1] \"America_nes\"\n\n$`6`\n[1] \"American_Samoa\"\n\n$`7`\n[1] \"Andorra\"\n\n$`8`\n[1] \"Anguilla\"\n\n$`9`\n[1] \"Antigua_and_Barbuda\"\n\n$`10`\n[1] \"Armenia\"\n\n$`11`\n[1] \"Aruba\"\n\n$`12`\n[1] \"Asia_nes\"\n\n$`13`\n[1] \"Bangladesh\"\n\n$`14`\n[1] \"Barbados\"\n\n$`15`\n[1] \"Belarus\"\n\n$`16`\n[1] \"Belize\"\n\n$`17`\n[1] \"Benin\"\n\n$`18`\n[1] \"Bermuda\"\n\n$`19`\n[1] \"Bhutan\"\n\n$`20`\n[1] \"Bolivia\"\n\n$`21`\n[1] \"Bonaire_Sint_Eustatius_and_Saba\"\n\n$`22`\n[1] \"Botswana\"\n\n$`23`\n[1] \"British_Indian_Ocean_Territory\"\n\n$`24`\n[1] \"British_Virgin_Islands\"\n\n$`25`\n[1] \"Burkina_Faso\"\n\n$`26`\n[1] \"Burundi\"\n\n$`27`\n[1] \"Cabo_Verde\"\n\n$`28`\n[1] \"Cambodia\"\n\n$`29`\n[1] \"Caribbean_Nes\"\n\n$`30`\n[1] \"Cayman_Islands\"\n\n$`31`\n[1] \"Central_African_Republic\"\n\n$`32`\n[1] \"Christmas_Island\"\n\n$`33`\n[1] \"Cocos_.Keeling._Islands\"\n\n$`34`\n[1] \"Comoros\"\n\n$`35`\n[1] \"Cook_Islands\"\n\n$`36`\n[1] \"Costa_Rica\"\n\n$`37`\n[1] \"Curacao\"\n\n$`38`\n[1] \"Djibouti\"\n\n$`39`\n[1] \"Dominica\"\n\n$`40`\n[1] \"El_Salvador\"\n\n$`41`\n[1] \"Eritrea\"\n\n$`42`\n[1] \"Eswatini\"\n\n$`43`\n[1] \"Ethiopia\"\n\n$`44`\n[1] \"Europe_Othr._Nes\"\n\n$`45`\n[1] \"European_Union_Nes\"\n\n$`46`\n[1] \"Falkland_Islands_.Malvinas.\"\n\n$`47`\n[1] \"Faroe_Islands\"\n\n$`48`\n[1] \"Fiji\"\n\n$`49`\n[1] \"Free_Zones\"\n\n$`50`\n[1] \"French_Polynesia\"\n\n$`51`\n[1] \"French_Southern_and_Antarctic_Territories\"\n\n$`52`\n[1] \"Gambia\"\n\n$`53`\n[1] \"Georgia\"\n\n$`54`\n[1] \"Greenland\"\n\n$`55`\n[1] \"Grenada\"\n\n$`56`\n[1] \"Guinea\"\n\n$`57`\n[1] \"Guinea.Bissau\"\n\n$`58`\n[1] \"Haiti\"\n\n$`59`\n[1] \"Honduras\"\n\n$`60`\n[1] \"Iceland\"\n\n$`61`\n[1] \"Jordan\"\n\n$`62`\n[1] \"Kenya\"\n\n$`63`\n[1] \"Kiribati\"\n\n$`64`\n[1] \"Kyrgyzstan\"\n\n$`65`\n[1] \"LAIA_nes\"\n\n$`66`\n[1] \"Laos\"\n\n$`67`\n[1] \"Laso\"\n\n$`68`\n[1] \"Lebanon\"\n\n$`69`\n[1] \"Lesotho\"\n\n$`70`\n[1] \"Macedonia\"\n\n$`71`\n[1] \"Madagascar\"\n\n$`72`\n[1] \"Malawi\"\n\n$`73`\n[1] \"Maldives\"\n\n$`74`\n[1] \"Mali\"\n\n$`75`\n[1] \"Marshall_Islands\"\n\n$`76`\n[1] \"Mauritania\"\n\n$`77`\n[1] \"Mauritius\"\n\n$`78`\n[1] \"Mayotte\"\n\n$`79`\n[1] \"Micronesia\"\n\n$`80`\n[1] \"Moldova\"\n\n$`81`\n[1] \"Montenegro\"\n\n$`82`\n[1] \"Montserrat\"\n\n$`83`\n[1] \"Mozambique\"\n\n$`84`\n[1] \"Namibia\"\n\n$`85`\n[1] \"Nauru\"\n\n$`86`\n[1] \"Nepal\"\n\n$`87`\n[1] \"Netherlands_Antilles\"\n\n$`88`\n[1] \"New_Caledonia\"\n\n$`89`\n[1] \"Niger\"\n\n$`90`\n[1] \"Niue\"\n\n$`91`\n[1] \"Norfolk_Island\"\n\n$`92`\n[1] \"North_America_and_Central_America_nes\"\n\n$`93`\n[1] \"North_Korea\"\n\n$`94`\n[1] \"Northern_Mariana_Islands\"\n\n$`95`\n[1] \"Oceania_Nes\"\n\n$`96`\n[1] \"Palau\"\n\n$`97`\n[1] \"Palestine\"\n\n$`98`\n[1] \"Paraguay\"\n\n$`99`\n[1] \"Pitcairn\"\n\n$`100`\n[1] \"Rwanda\"\n\n$`101`\n[1] \"Saint_Helena\"\n\n$`102`\n[1] \"Saint_Kitts_and_Nevis\"\n\n$`103`\n[1] \"Saint_Lucia\"\n\n$`104`\n[1] \"Saint_Pierre_and_Miquelon\"\n\n$`105`\n[1] \"Saint_Vincent_and_the_Grenadines\"\n\n$`106`\n[1] \"Samoa\"\n\n$`107`\n[1] \"Sao_Tome_and_Principe\"\n\n$`108`\n[1] \"Serbia_and_Montenegro\"\n\n$`109`\n[1] \"Seychelles\"\n\n$`110`\n[1] \"Ship_stores_and_bunkers\"\n\n$`111`\n[1] \"Sierra_Leone\"\n\n$`112`\n[1] \"Slovenia\"\n\n$`113`\n[1] \"Solomon_Islands\"\n\n$`114`\n[1] \"Somalia\"\n\n$`115`\n[1] \"Sri_Lanka\"\n\n$`116`\n[1] \"Suriname\"\n\n$`117`\n[1] \"Syria\"\n\n$`118`\n[1] \"Tajikistan\"\n\n$`119`\n[1] \"Tanzania\"\n\n$`120`\n[1] \"Tokelau\"\n\n$`121`\n[1] \"Tonga\"\n\n$`122`\n[1] \"Turks_and_Caicos_Islands\"\n\n$`123`\n[1] \"Tuvalu\"\n\n$`124`\n[1] \"Uganda\"\n\n$`125`\n[1] \"Ukraine\"\n\n$`126`\n[1] \"United_States_Minor_Outlying_Islands\"\n\n$`127`\n[1] \"Uzbekistan\"\n\n$`128`\n[1] \"Vanuatu\"\n\n$`129`\n[1] \"Wallis_and_Futuna_Islands\"\n\n$`130`\n[1] \"West_Asia_nes\"\n\n$`131`\n[1] \"Zambia\"\n\n$`132`\n[1] \"Zimbabwe\"\n```\n:::\n\n```{.r .cell-code}\nplot(community_walktrap, ig.net, vertex.shape = \"circle\", vertex.size = 7, vertex.label.cex = .5, vertex.label.color = \"black\", edge.arrow.size = .25, rescale = TRUE, asp = 0, sub = \"Fast and Greedy Method\")\n```\n\n::: {.cell-output-display}\n![](Imperative_assignment_Akhilesh_files/figure-html/unnamed-chunk-7-2.png){width=672}\n:::\n:::\n\nWalktrap: Walktrap is a community detection algorithm based on random walks within a graph. It tends to generate a single big cluster when applied to a dataset. This can be beneficial if the goal is to identify a cohesive group or a global pattern within the crude oil trade data. By identifying a single cluster, Walktrap may help uncover overall trends, relationships, or dynamics in the market.\n\nFast Greedy: Fast greedy is a hierarchical clustering algorithm that builds clusters by iteratively merging the most similar nodes or clusters. It tends to generate multiple clusters, typically 3-4 major ones in your case. This approach is useful it is required identify distinct subgroups or segments within the crude oil trade market. It allows for a more granular analysis and can reveal different trading patterns, regional differences, or market segments.\n",
    "supporting": [
      "Imperative_assignment_Akhilesh_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}