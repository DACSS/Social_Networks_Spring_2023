{
  "hash": "fe1b0604ff47287c3a0b1b56cc4804ac",
  "result": {
    "markdown": "---\ntitle: \"Assignment Kpop Collaboration Network\"\nauthor: \"Erika Nagai\"\ndate: \"03/28/2023\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\n# editor: visual\n---\n\n\n# Overview\n\nThe phenomenon of K-pop has recently emerged as a prominent cultural force, gaining significant attention and popularity not only in South Korea and other Asian nations but globally as well, particularly among the younger generation. An interesting aspect of K-pop is that many K-pop artists collaborate with other artists, often those who are not based in South Korea. In this analysis, my objective is to delve into the dynamics of such collaborations within the K-pop industry and beyond, across various musical genres, and to investigate how these collaborative patterns have evolved over time. To achieve this goal, we aim to examine the social network of K-pop collaborations, with a view to gaining a better understanding of the underlying trends and structures shaping this phenomenon.\n\n# Collect the data\n\nI collected the data in a following way.\n\n**collab_songs.csv:**\n\nThis is a list of collaboration songs collected by\n\n1.  gathering the name of the top 50 Kpop artists in 2010, 2015, and 2020 by asking ChatGPT\n2.  manually collecting their Spotify artist id\n3.  collecting all the singles/albums data of the artists by using Spotify API and\n4.  removing the songs that are NOT collaborative by filtering out those who have only one artist registered\n\n**artist.csv:**\n\nThis is a list of artists performed the collaboration songs collected by\n\n1.  extracting the unique artists from the collab_songs.csv\n2.  collecting their information (genre and followers) using Spotify API\n\n**song_detail.csv:**\n\nThis is a list of songs with detail information prepared by\n\n1.  extracting the detailed song information (release year, available market etc) by using Spotify API based on the track id from kpop_collab.csv\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# install libraries\nlibrary(igraph)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'igraph' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'igraph'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    decompose, spectrum\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:base':\n\n    union\n```\n:::\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:igraph':\n\n    as_data_frame, groups, union\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n\n```{.r .cell-code}\nlibrary(readr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'readr' was built under R version 4.2.2\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(tidyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'tidyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:igraph':\n\n    crossing\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Read in data\ngetwd()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"C:/Users/Microsoft/Documents/DACSS/753_Social_Network/Social_Networks_Spring_2023/posts\"\n```\n:::\n\n```{.r .cell-code}\ncollab_songs <- read_csv(\"_data/Kpop_collaboration_Erika_Nagai/collab_songs.csv\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError: '_data/Kpop_collaboration_Erika_Nagai/collab_songs.csv' does not exist in current working directory ('C:/Users/Microsoft/Documents/DACSS/753_Social_Network/Social_Networks_Spring_2023/posts').\n```\n:::\n\n```{.r .cell-code}\nartists <- read_csv(\"_data/Kpop_collaboration_Erika_Nagai/artists.csv\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError: '_data/Kpop_collaboration_Erika_Nagai/artists.csv' does not exist in current working directory ('C:/Users/Microsoft/Documents/DACSS/753_Social_Network/Social_Networks_Spring_2023/posts').\n```\n:::\n\n```{.r .cell-code}\nsong_detail <- read_csv(\"_data/Kpop_collaboration_Erika_Nagai/song_detail.csv\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError: '_data/Kpop_collaboration_Erika_Nagai/song_detail.csv' does not exist in current working directory ('C:/Users/Microsoft/Documents/DACSS/753_Social_Network/Social_Networks_Spring_2023/posts').\n```\n:::\n:::\n\n\n# Describe & Clean the data\n\n### `collab_songs` dataframe\n\n`collab_songs` is a dataframe where each observation is a collaboration songs by Kpop top artists and other artists.\n\nIt has 452 rows (collaboration songs) and 26 columns.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(skimr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'skimr' was built under R version 4.2.3\n```\n:::\n\n```{.r .cell-code}\n# Skim the data\n#skim(collab_songs)\n\nsummary(collab_songs)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in summary(collab_songs): object 'collab_songs' not found\n```\n:::\n:::\n\n\nI removed unnecessary columns. Now `collab_songs` has following columns.\n\n-   song_name\n\n-   song_id: this can be used as a key when joining with `song_detail` dataframe\n\n-   kpop_artist_name: This is a name of the Kpop top artists.\n\n-   artist_id: This is a Spotify Artist ID of the Kpop top artists. This can be used as a key when joining with `artist` dataframe\n\n-   artist\\_\\[i\\]: This is a name of the artists that collaborated with Kpop top artists or the Kpop top artists themselves, which means that it might duplicate with `kpop_artist_name` (i is a number from 1 to 7)\n\n-   artist_id\\_\\[i\\]: This is a Spotify Artist ID of the artists that collaborated with Kpop top artists or the Kpop top artists themselves, which means that it might duplicate with `artist_id` (i is a number from 1 to 7). This can be used as a key when joining with `artists` dataframe.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncollab_songs <- collab_songs %>% \n  select(c(\"song_name\", \"song_id\", \"kpop_artist_name\", \"artist_id\", \"artist_1\", \"artist_id_1\", \"artist_2\", \"artist_id_2\", \"artist_3\", \"artist_id_3\", \"artist_4\", \"artist_id_4\", \"artist_5\", \"artist_id_5\", \"artist_6\", \"artist_id_6\", \"artist_7\", \"artist_id_7\"))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in select(., c(\"song_name\", \"song_id\", \"kpop_artist_name\", \"artist_id\", : object 'collab_songs' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncollab_songs %>% \n  arrange(song_name, kpop_artist_name, artist_1, artist_2) %>%\n  select(c(\"song_name\", \"kpop_artist_name\", \"artist_1\", \"artist_2\"))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in arrange(., song_name, kpop_artist_name, artist_1, artist_2): object 'collab_songs' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncollab_songs %>% filter(artist_1 == \"Blackpink\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in filter(., artist_1 == \"Blackpink\"): object 'collab_songs' not found\n```\n:::\n:::\n\n\n### Artists (artist.csv)\n\n`artists` is a dataframe where each row represents an artist (individual/group) that have participated in Kpop collaboration songs by top Kpop artists.\n\n1.  id: This is a Spotify Artist ID of the artist. It can be used as a key when joining with `collab_songs` dataframe\n\n2.  name: the name of the artist\n\n3.  top_kpop: if the artist is one of the top 50 Kpop artists in 2010, 2015, or 2020, the value is 1. Otherwise, the value is 0.\n\n4.  genre: the genre of the artist (can be multiple)\n\n5.  followers: the number of the followers on Spotify\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#skim(artists)\n\nsummary(artists)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in summary(artists): object 'artists' not found\n```\n:::\n\n```{.r .cell-code}\nartists\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'artists' not found\n```\n:::\n:::\n\n\n`name` has 513 unique values and `id` has 517 unique values, which may mean that there are `name` values that are duplicated or missing id information.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nartists %>% \n  arrange(name)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in arrange(., name): object 'artists' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Clean data by removing unnecessary columns\n\nartists <- artists %>% \n  select(-c('...1'))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in select(., -c(\"...1\")): object 'artists' not found\n```\n:::\n\n```{.r .cell-code}\nartists <- artists %>%\n  select(-c('Unnamed: 0'))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in select(., -c(\"Unnamed: 0\")): object 'artists' not found\n```\n:::\n\n```{.r .cell-code}\nartists <- artists %>% relocate(id, .before = name)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in relocate(., id, .before = name): object 'artists' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# This is the list of the genre names that appear in artist dataframe\nartists %>%\n  select(genre) %>%\n  separate_rows(genre, sep = \",\\\\s*\") %>%\n  mutate(genre = gsub(\"\\\\[|'|\\\\]\", \"\", genre)) %>%\n  count(genre, sort = TRUE)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in select(., genre): object 'artists' not found\n```\n:::\n:::\n\n\nI want to add two new columns to the `artist` dataFrame. The first column would indicate the broader genre of each artist, such as K-pop, Latin-pop, or J-pop (Japanese pop), which would help us to better understand the overall geographical market. The second column would simply indicate whether each artist is K-pop or not.\n\nFirst, I decided to classify the overall genre by detecting the follwoing word in the `genre` column\n\n**K-pop:** \"korean\", \"k-\" (for example k-pop, k-rap). Also any artists whose column \"to-=p-kpop\" is 1 are considered as K-pop genre.\n\n**Latin-pop:** \"latin\", \"latino\", \"chicano\"\n\n**J-pop (Japanese pop):** \"japanese\", \"j-\" (for example j-pop, j-rap, j-core), \"visual-kei\"\n\n**C-pop (Chinese pop):** \"chinese\"\n\n**UK-pop:** \"uk\" (uk-pop, uk-hiphop)\n\n**US or Others:** artists whose genre doesn't include the above words but has any word\n\n**Unknown:** artists whose genre is empty\n\n\n::: {.cell}\n\n```{.r .cell-code}\nartists <- artists %>% \n  mutate(region_category=case_when(\n    grepl(\"k-pop|korean|k-rap\", genre) | top_kpop == 1 ~ \"K-pop\",\n    grepl(\"latin|latino|chicano|bachata\", genre) ~ \"Latin-pop\",\n    grepl(\"j-pop|j-rap|japanese|j-core|josei|visual-kei\", genre) ~ \"J-pop\",\n    grepl(\"chinese\", genre) ~ \"C-pop\",\n    grepl(\"uk-|uk \", genre) ~ \"UK-pop\",\n    grepl(\"\\\\[\\\\]\", genre) ~ \"Unknown\",\n    TRUE ~ \"Other\"\n  )) %>%\n  mutate(kpop = case_when(\n    region_category == \"K-pop\" ~ \"yes\",\n    TRUE ~ \"no\"\n  ))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in mutate(., region_category = case_when(grepl(\"k-pop|korean|k-rap\", : object 'artists' not found\n```\n:::\n\n```{.r .cell-code}\nartists\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'artists' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nartists <- artists %>% \n  mutate(\n    show_kpop_top = case_when(\n      top_kpop == 1 ~ name,\n      TRUE ~ \"\"\n    )\n  )\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in mutate(., show_kpop_top = case_when(top_kpop == 1 ~ name, TRUE ~ : object 'artists' not found\n```\n:::\n:::\n\n\n### song_detail (song_detail.csv)\n\n`song_detail` is a dataframe where each observation is a collaboration song by K-pop top artists and other artists. While `collab_songs` provides the information of the artists that worked on the song, this dataframe provides more detailed information about the songs themselves such as duration, track number, release date etc...\n\nIt has 452 rows (collaboration songs), which is the same as the number of the rows of `collab_songs`, and 20 columns.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nskim(song_detail)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in skim(song_detail): object 'song_detail' not found\n```\n:::\n\n```{.r .cell-code}\nsummary(song_detail)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in summary(song_detail): object 'song_detail' not found\n```\n:::\n:::\n\n\nThe columns are as follows\n\n1.  name: name of the songs\n2.  popularity: the popularity index from Spotify\n3.  release_year\n4.  album: this is information about the album the song is from in Json format.\n5.  artists: this is information about the artists in Json format\n6.  available_markets\n7.  explicit\n8.  id: This is a Spotify song id. Can be used as a key when joining with `collab_songs`\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# I will remove unnecessary columns\nsong_detail <- song_detail %>% \n  relocate(name,popularity, release_date, release_year, .before=\"album\") %>%\n  select(-c(\"...1\", \"disc_number\", \"duration_ms\", \"external_ids\", \"external_urls\",\"href\", \"is_local\", \"preview_url\", \"track_number\", \"type\", \"uri\", \"release_date\"))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in relocate(., name, popularity, release_date, release_year, .before = \"album\"): object 'song_detail' not found\n```\n:::\n\n```{.r .cell-code}\nsong_detail$release_year <- as.integer(song_detail$release_year)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'song_detail' not found\n```\n:::\n\n```{.r .cell-code}\nsong_detail %>% arrange(release_year)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in arrange(., release_year): object 'song_detail' not found\n```\n:::\n:::\n\n\n## Extra data cleaning\n\n`collab_songs` include unofficial songs by unofficial accounts. For example, there are a few songs by After School and Blackpink. However, if you look at the Spotify album page, this \"Blackpink\" is different from \"BLACK PINK\". There seem to be several cases that the artist ID is not the correct one. So I removed the songs that are not by \"official\" (=with more monthly followers) accounts.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#For example, there are a few songs by After School and Blackpink. However, if you look at the Spotify album page, this \"Blackpink\" is different from \"BLACK PINK\". \n\ncollab_songs %>% filter(artist_1 == \"Blackpink\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in filter(., artist_1 == \"Blackpink\"): object 'collab_songs' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Remove the songs by artist_1 whose id doesn't exist\ncollab_songs <- collab_songs %>%\n  left_join(artists, by = c(\"artist_id_1\" = \"id\")) %>%\n  filter(!is.na(name)) %>%\n  select(-c(\"name\", \"top_kpop\", \"genre\", \"followers\", \"name_lower\", \"region_category\", \"kpop\"))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in left_join(., artists, by = c(artist_id_1 = \"id\")): object 'collab_songs' not found\n```\n:::\n\n```{.r .cell-code}\n# Remove the songs by artist_2 whose id doesn't exist \ncollab_songs <- collab_songs %>% \n  left_join(artists, by = c(\"artist_id_2\" = \"id\")) %>%\n  filter(is.na(artist_2)|!is.na(name)) %>%\n  select(-c(\"name\", \"top_kpop\", \"genre\", \"followers\", \"name_lower\", \"region_category\", \"kpop\"))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in left_join(., artists, by = c(artist_id_2 = \"id\")): object 'collab_songs' not found\n```\n:::\n\n```{.r .cell-code}\n# Remove the songs by artist_3 whose id doesn't exist \ncollab_songs <- collab_songs %>% \n  left_join(artists, by = c(\"artist_id_3\" = \"id\")) %>%\n  filter(is.na(artist_3)|!is.na(name)) %>%\n  select(-c(\"name\", \"top_kpop\", \"genre\", \"followers\", \"name_lower\", \"region_category\", \"kpop\"))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in left_join(., artists, by = c(artist_id_3 = \"id\")): object 'collab_songs' not found\n```\n:::\n\n```{.r .cell-code}\n# Remove the songs by artist_4 whose id doesn't exist \ncollab_songs <- collab_songs %>% \n  left_join(artists, by = c(\"artist_id_4\" = \"id\")) %>%\n  filter(is.na(artist_4)|!is.na(name)) %>%\n  select(-c(\"name\", \"top_kpop\", \"genre\", \"followers\", \"name_lower\", \"region_category\", \"kpop\"))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in left_join(., artists, by = c(artist_id_4 = \"id\")): object 'collab_songs' not found\n```\n:::\n\n```{.r .cell-code}\n# Remove the songs by artist_5 whose id doesn't exist \ncollab_songs <- collab_songs %>% \n  left_join(artists, by = c(\"artist_id_5\" = \"id\")) %>%\n  filter(is.na(artist_5)|!is.na(name)) %>%\n  select(-c(\"name\", \"top_kpop\", \"genre\", \"followers\", \"name_lower\", \"region_category\", \"kpop\"))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in left_join(., artists, by = c(artist_id_5 = \"id\")): object 'collab_songs' not found\n```\n:::\n\n```{.r .cell-code}\n# Remove the songs by artist_6 whose id doesn't exist \ncollab_songs <- collab_songs %>% \n  left_join(artists, by = c(\"artist_id_6\" = \"id\")) %>%\n  filter(is.na(artist_6)|!is.na(name)) %>%\n  select(-c(\"name\", \"top_kpop\", \"genre\", \"followers\", \"name_lower\", \"region_category\", \"kpop\"))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in left_join(., artists, by = c(artist_id_6 = \"id\")): object 'collab_songs' not found\n```\n:::\n\n```{.r .cell-code}\n# Remove the songs by artist_7 whose id doesn't exist \ncollab_songs <- collab_songs %>% \n  left_join(artists, by = c(\"artist_id_7\" = \"id\")) %>%\n  filter(is.na(artist_7)|!is.na(name)) %>%\n  select(-c(\"name\", \"top_kpop\", \"genre\", \"followers\", \"name_lower\", \"region_category\", \"kpop\"))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in left_join(., artists, by = c(artist_id_7 = \"id\")): object 'collab_songs' not found\n```\n:::\n\n```{.r .cell-code}\ncollab_songs\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'collab_songs' not found\n```\n:::\n:::\n\n\nNow `collab_songs` has 441 songs (reduced from 452)\n\n# Exploring the data\n\n### How many K-pop collaboration songs are released by year?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncollab_songs %>% \n  left_join(song_detail, by = c(\"song_id\"= \"id\")) %>%\n  ggplot(aes(x=release_year)) + \n  geom_bar() +\n  scale_x_continuous(breaks=seq(2010, 2022, 5)) + \n  xlim(2009, 2023) +\n  labs(title = \"The number of K-pop collaboration songs\", subtitle = \"The number of collaboration songs by K-pop top artists is increasing over the time\", caption = \"Note that this data is based on the information of only top 50 k-pop artists during 2010-2020\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in left_join(., song_detail, by = c(song_id = \"id\")): object 'collab_songs' not found\n```\n:::\n:::\n\n\n### Is the popularity of K-pop collaboration songs increasing?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsong_detail %>%\n  group_by(release_year) %>%\n  summarize(mean_popularity = mean(popularity)) %>%\n  ggplot(aes(x=release_year, y=mean_popularity)) + geom_line() +\n  labs(title = \"Popularity of K-pop collaboration songs\", subtitle = \"The popularity of K-pop collaboration songs is increasing dramatically.\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in group_by(., release_year): object 'song_detail' not found\n```\n:::\n:::\n\n\n# Convert this data to network data\n\nTo analyze this data in a perspective of social network, I need to convert this data into an edgelist where from_nodes are K-pop top artists, to_nodes are artists who collaborated with them, and edges are songs.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# pivot_longer\nedgelist <- collab_songs %>%\n  pivot_longer(\n    cols = starts_with(\"artist_id_\"),\n    names_to = \"variable\",\n    values_to = \"to_artist_id\"\n  )%>% \n  filter(!is.na(to_artist_id)) %>% # Remove the rows where the to_artist_id is blank \n  filter(artist_id != to_artist_id) %>%  # Remove the rows where from_artist and to_artist are the same \n  select(c(\"artist_id\", \"to_artist_id\", \"song_id\", \"song_name\"))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in pivot_longer(., cols = starts_with(\"artist_id_\"), names_to = \"variable\", : object 'collab_songs' not found\n```\n:::\n\n```{.r .cell-code}\ncolnames(edgelist) <- c(\"From\", \"To\", \"song_id\", \"song_name\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in colnames(edgelist) <- c(\"From\", \"To\", \"song_id\", \"song_name\"): object 'edgelist' not found\n```\n:::\n\n```{.r .cell-code}\n# Adding the information of type of collab (among kpop artists or with international artists)\nedgelist <- edgelist %>% \n  left_join(artists, by = c(\"From\" = \"id\")) %>%\n  select(c(\"From\", \"To\", \"song_id\", \"song_name\", \"region_category\")) %>%\n  left_join(artists, by = c(\"To\" = \"id\")) %>% \n  select(c(\"From\", \"To\", \"song_id\", \"song_name\", \"region_category.x\", \"region_category.y\")) \n```\n\n::: {.cell-output .cell-output-error}\n```\nError in left_join(., artists, by = c(From = \"id\")): object 'edgelist' not found\n```\n:::\n\n```{.r .cell-code}\ncolnames(edgelist) <- c(\"From\", \"To\", \"song_id\", \"song_name\", \"region_category_from\", \"region_category_to\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in colnames(edgelist) <- c(\"From\", \"To\", \"song_id\", \"song_name\", : object 'edgelist' not found\n```\n:::\n\n```{.r .cell-code}\nedgelist\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'edgelist' not found\n```\n:::\n\n```{.r .cell-code}\nedgelist %>%\n  mutate(collab_type = case_when(\n    region_category_to == \"K-pop\" ~ \"Domestic\",\n    region_category_to == \"Unknown\" ~ \"Unknown\", \n    TRUE ~ \"International\"\n  ))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in mutate(., collab_type = case_when(region_category_to == \"K-pop\" ~ : object 'edgelist' not found\n```\n:::\n:::\n\n\n## Edgelist (without spliting)\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncollab.net <- igraph::graph_from_data_frame(edgelist, directed = FALSE, vertices = artists)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in as.data.frame(d): object 'edgelist' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Setting the attributes\n\n# # For visualization\n# ## color\nartists <- artists %>% mutate(\n  color_region_category = case_when(\n    region_category == \"K-pop\" ~ \"#F0EFF7\",\n    region_category == \"Latin-pop\" ~ \"#DDBFE4\",\n    region_category == \"J-pop\" ~ \"#293380\",\n    region_category == \"C-pop\" ~ \"#953D60\",\n    region_category == \"UK-pop\" ~ \"#869FDE\",\n    region_category == \"Other\" ~ \"#8ABFE8\",\n    TRUE ~ \"grey\" ),\n  color_kpop = case_when(\n    kpop == \"yes\" ~ \"#F0EFF7\",\n    TRUE ~ \"#8ABFE8\"\n  )\n)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in mutate(., color_region_category = case_when(region_category == : object 'artists' not found\n```\n:::\n\n```{.r .cell-code}\nV(collab.net)$color <- artists$color_region_category\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'artists' not found\n```\n:::\n\n```{.r .cell-code}\n# \n# \n# V(collab.net)$name_kpop_top <- artists$show_name_kpop_top\n# V(collab.net)$name_followers <- artists$show_name_followers\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Check attributes\n\nsummary(collab.net) #509 nodes and 591 edges\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in summary(collab.net): object 'collab.net' not found\n```\n:::\n\n```{.r .cell-code}\nigraph::vertex_attr_names(collab.net)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in \"igraph\" %in% class(graph): object 'collab.net' not found\n```\n:::\n\n```{.r .cell-code}\nigraph::edge_attr_names(collab.net)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in \"igraph\" %in% class(graph): object 'collab.net' not found\n```\n:::\n:::\n\n\n# Overall collaboration network\n\nThis is the network of K-pop collaboration for the last almost 20 years (2005-2023).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(collab.net, \n     vertex.label = V(collab.net)$show_kpop_top,\n     arrow.mode=\"-\",\n     vertex.size = log(V(collab.net)$followers) * 0.5,\n     vertex.label.cex = .8,\n     vertex.label.color = \"black\",\n     vertex.label.dist = 0,\n     frame.width = 0,\n     color = V(collab.net)$color_region_category,\n     main = \"K pop collaboration network for the last 18 years\",\n     ref = \"The size of the circles means the popularity\"\n     )\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in plot(collab.net, vertex.label = V(collab.net)$show_kpop_top, : object 'collab.net' not found\n```\n:::\n\n```{.r .cell-code}\nlegend(\n  \"bottomright\",\n  legend = c(\"K-pop\", \"Latin-pop\", \"J-pop\", \"C-pop\", \"UK-pop\", \"US or Other\", \"Unknown\"),\n  pt.bg  = c(\"#FFFFE1\", \"#99860C\", \"#FDCCCC\", \"#920002\", \"#010087\", \"#ABD7E6\", \"grey\"),\n  pch    = 21,\n  cex    = 1,\n  bty    = \"n\",\n  title  = \"Genre\"\n  )\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in (function (s, units = \"user\", cex = NULL, font = NULL, vfont = NULL, : plot.new has not been called yet\n```\n:::\n:::\n\n\n# How the collaborative patterns have changed over years...?\n\n**Between 2005 and 2010**, there was a lack of collaboration between K-pop artists, and **only a limited number of international collaborations** took place with artists located outside of South Korea. The network was characterized by small individual components and low overall connectivity.\n\n**Beginning in 2011**, although the number of international collaborations remained small, **the network's density appeared to have increased**.\n\n**From 2016 to 2020**, the landscape of K-pop collaborations underwent significant changes, both in terms of the number of collaborations and the artists with whom K-pop artists worked. Prior to 2015, international collaborations were rare, with the majority of collaborations taking place among K-pop artists. However, from 2016 to 2020, **many collaborations occurred with artists based outside of South Korea**.\n\n**In 2021**, although the number of collaboration songs is smaller than that of 2016 to 2020 due to its shorter time span, **the proportion of international collaborations seems higher.**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nedgelist %>% \n  left_join(song_detail, by = c(\"song_id\"=\"id\"))%>%\n  filter(release_year >= 2006) %>%\n  mutate(\n    period = case_when(\n      release_year <= 2010 ~ \"2006-2010\",\n      release_year > 2010 & release_year <= 2015 ~ \"2011-2015\",\n      release_year > 2015 & release_year <= 2020 ~ \"2016-2020\",\n      TRUE ~ \"2021-\"\n    )\n  ) %>% \n  select(c(\"From\", \"To\", \"song_id\", \"release_year\", \"period\", \"name\", \"popularity\"))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in left_join(., song_detail, by = c(song_id = \"id\")): object 'edgelist' not found\n```\n:::\n\n```{.r .cell-code}\n#E(collab.net)$period <- edgelist$period\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Split the edgelist dataframe into 4 groups based on \"period\"\n# \n# edgelist_list\n# edgelist_list <- split(edgelist, edgelist$period)\n# \n# # convert each element of the list into a separate dataframe\n# \n# graphs <- list()\n# \n# for (i in seq_along(edgelist_list)) {\n#   assign(paste0(\"edgelist_\", names(edgelist_list)[i]), edgelist_list[[i]])\n#   \n#   unique_vertices <- unique(c(edgelist_list[[i]]$From, edgelist_list[[i]]$To))\n#   artists_period <- artists[artists$id %in% unique_vertices, ]\n#   \n#   # Create the graph from the filtered edgelist and vertices\n#   graph <- graph_from_data_frame(edgelist_list[[i]], directed = FALSE, vertices = artists_period)\n# \n#   # Append the graph to the list of graphs\n#   graphs[[i]] <- graph\n# } \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Assigining visualization attributes\n\nyears <- list(\"2006-2010\", \"2011-2015\", \"2016-2020\", \"2021-\")\n\nfor (i in 1:length(graphs)) {\n  V(graphs[[i]])$color <- V(graphs[[i]])$color_region_category\n  plot(graphs[[i]], \n     vertex.label = V(graphs[[i]])$show_kpop_top,\n     arrow.mode=\"-\",\n     vertex.size = log(V(graphs[[i]])$followers) * 0.7,\n     vertex.label.cex = .8,\n     vertex.label.color = \"black\",\n     vertex.label.dist = 0,\n     frame.width = 0,\n     color = V(graphs[[i]])$color_region_category,\n     main = paste0(\"Collaboration by K-pop top artists in \", years[[i]])\n     )\n  \n  legend(\n  \"bottomright\",\n  legend = c(\"K-pop\", \"Latin-pop\", \"J-pop\", \"C-pop\", \"UK-pop\", \"US or Other\", \"Unknown\"),\n  pt.bg  = c(\"#FFFFE1\", \"darkgreen\", \"#FDCCCC\", \"#920002\", \"#010087\", \"#ABD7E6\", \"grey\"),\n  pch    = 21,\n  cex    = 1,\n  bty    = \"n\",\n  title  = \"Genre\"\n  )\n}\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'graphs' not found\n```\n:::\n:::\n\n\n# Analysis of network\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# make a graph for each year\n\n\ngraphs_year<- lapply(2006:2023, function(x) graph_from_data_frame(edgelist[edgelist$release_year == x, ]))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in as.data.frame(d): object 'edgelist' not found\n```\n:::\n\n```{.r .cell-code}\n# Create an empty data frame with the desired columns\ngraph_stats <- data.frame(release_year = 2006:2023, \n                           num_nodes = numeric(length(2006:2023)), \n                           num_edges = numeric(length(2006:2023)), \n                           centrality = numeric(length(2006:2023)), \n                           density = numeric(length(2006:2023)), \n                           transitivity = numeric(length(2006:2023)))\n\n# Loop through each year and calculate the desired graph statistics\nfor (i in 1:length(graphs_year)) {\n  graph <- graphs_year[[i]]\n  \n  # Fill in the corresponding row of the data frame with the calculated statistics\n  graph_stats[i, \"num_nodes\"] <- vcount(graph)\n  graph_stats[i, \"num_edges\"] <- ecount(graph)\n  graph_stats[i, \"centralization\"] <- centralization.degree(graph)\n  graph_stats[i, \"density\"] <- graph.density(graph)\n  graph_stats[i, \"transitivity\"] <- transitivity(graph)\n}\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'graphs_year' not found\n```\n:::\n\n```{.r .cell-code}\n# View the resulting data frame\ngraph_stats\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   release_year num_nodes num_edges centrality density transitivity\n1          2006         0         0          0       0            0\n2          2007         0         0          0       0            0\n3          2008         0         0          0       0            0\n4          2009         0         0          0       0            0\n5          2010         0         0          0       0            0\n6          2011         0         0          0       0            0\n7          2012         0         0          0       0            0\n8          2013         0         0          0       0            0\n9          2014         0         0          0       0            0\n10         2015         0         0          0       0            0\n11         2016         0         0          0       0            0\n12         2017         0         0          0       0            0\n13         2018         0         0          0       0            0\n14         2019         0         0          0       0            0\n15         2020         0         0          0       0            0\n16         2021         0         0          0       0            0\n17         2022         0         0          0       0            0\n18         2023         0         0          0       0            0\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Make a function to make a graph\ngraph_from_data_frame_with_all_vertices <- function(df, vertices) {\n  \n  \n  unique_vertices <- unique(c(df$From, df$To))\n  artists_period <- vertices[artists$id %in% unique_vertices, ]\n  \n  \n  # Create the graph with all vertices and existing edges\n  graph <- graph_from_data_frame(df, directed = FALSE, vertices = artists_period)\n  \n  return(graph)\n}\n\ngraphs_year <- lapply(2006:2023, function(x) graph_from_data_frame_with_all_vertices(df = edgelist[edgelist$release_year == x, ], vertices = artists))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in unique(c(df$From, df$To)): object 'edgelist' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngraphs_year[1]\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'graphs_year' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create an empty data frame with the desired columns\ngraph_stats <- data.frame(release_year = 2006:2023, \n                           num_nodes = numeric(length(2006:2023)), \n                           num_edges = numeric(length(2006:2023)), \n                           centrality = numeric(length(2006:2023)), \n                           density = numeric(length(2006:2023)), \n                           transitivity = numeric(length(2006:2023)))\n\n# Loop through each year and calculate the desired graph statistics\nfor (i in 1:length(graphs_year)) {\n  graph <- graphs_year[[i]]\n  \n  # Fill in the corresponding row of the data frame with the calculated statistics\n  graph_stats[i, \"num_nodes\"] <- vcount(graph)\n  graph_stats[i, \"num_edges\"] <- ecount(graph)\n  graph_stats[i, \"centralization\"] <- centr_degree(graph)$centralization\n  graph_stats[i, \"eigen_centralization\"] <-centr_eigen(graph)$centralization\n  graph_stats[i, \"density\"] <- graph.density(graph)\n  graph_stats[i, \"transitivity\"] <- transitivity(graph)\n  #graph_stats[i, \"kpop\"] <- V(graph)$region_category == \"kpop\"\n}\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'graphs_year' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(V(graphs_year[[1]])$region_category==\"K-pop\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in \"igraph\" %in% class(graph): object 'graphs_year' not found\n```\n:::\n:::\n\n\n# Discussion\n\nMake a dataframe of density, centrality, degree distribution of each year\n\nArtist-based analysis\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}