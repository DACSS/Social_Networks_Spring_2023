{
  "hash": "dcf391b2ce7c0172ff28100d69b0d812",
  "result": {
    "markdown": "---\ntitle: \"Challenge 3 Mekhala\"\nauthor: \"Mekhala Kumar\"\ndescription: \"Degree and Density of a Network\"\ndate: \"03/25/2023\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\n# editor: visual\ncategories: \n  - challenge_3\n  - Mekhala Kumar\n  - input output data\n---\n\n\n\n\n\n\n## Reading in data\n\n::: {.cell}\n\n```{.r .cell-code}\ndata<-read_xlsx(\"_data/got/US_input_output_table_2007_and_2012.xlsx\",sheet=\"2012\",skip=3)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nNew names:\n• `` -> `...2`\n```\n:::\n\n```{.r .cell-code}\ndata<-data%>%\n      rename(Code=`Commodity / Industry`,`Commodity Description` =`...2`)\ndata<-data %>%\n  filter(!row_number() %in% c(1))\nhead(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 407\n  Code   Commo…¹ Oilse…² Grain…³ Veget…⁴ Fruit…⁵ Green…⁶ Other…⁷ Dairy…⁸ Beef …⁹\n  <chr>  <chr>   <chr>   <chr>     <dbl>   <dbl>   <dbl>   <dbl>   <dbl> <chr>  \n1 1111A0 Oilsee… 5.2417… 1.3503… 2.37e-4 0       0       4.9 e-6  0      0      \n2 1111B0 Grain … 0       6.6339… 0       0       0       1.53e-2  0.0450 7.0709…\n3 111200 Vegeta… 0       0       3.03e-2 1.66e-4 0       0        0      0      \n4 111300 Fruit … 0       0       0       1.15e-2 0       0        0      0      \n5 111400 Greenh… 0       0       0       0       1.46e-1 0        0      0      \n6 111900 Other … 6.3566… 7.1383… 0       0       2.52e-5 2.69e-2  0.0247 2.0728…\n# … with 397 more variables: `Poultry and egg production` <dbl>,\n#   `Animal production, except cattle and poultry and eggs` <chr>,\n#   `Forestry and logging` <dbl>, `Fishing, hunting and trapping` <dbl>,\n#   `Support activities for agriculture and forestry` <dbl>,\n#   `Oil and gas extraction` <dbl>, `Coal mining` <dbl>,\n#   `Copper, nickel, lead, and zinc mining` <dbl>,\n#   `Iron, gold, silver, and other metal ore mining` <chr>, …\n```\n:::\n:::\n\n## Converting into Network data format\nI noticed that some of the columns did not match the observations under the Commodity Description column. I looked for the differences manually but was wondering if there is a method in R that can be used to do the same. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nadj<-data %>%\n  filter(!row_number() %in% c(402:409))\nadj<-adj%>%\n  select(!(`State and local government electric utilities`))%>%\n  select(!(`State and local government passenger transit`))%>%\n  select(!(`Federal electric utilities`))%>%\n  select(!(`Secondary smelting and alloying of aluminum`))\n#state and govt electric utilities, state and local govt passenger transit, federal electric utilities, Secondary smelting and alloying of aluminum\nadj<-subset(adj[3:403])\nadj_mat <- data.matrix(adj)\ntable(adj_mat != 0)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nFALSE  TRUE \n91289 69512 \n```\n:::\n\n```{.r .cell-code}\nio_ig<-graph_from_adjacency_matrix(adj_mat, mode = \"directed\", weighted = TRUE, diag = FALSE)\nio_stat<- network(adj_mat,matrix.type=\"adjacency\", directed=TRUE,loops=FALSE)\n```\n:::\n\n\n## Evaluation of the structure of the network\nIn this challenge, I have ignored the trade occuring within an industry (that is, the loops).\n\n::: {.cell}\n\n```{.r .cell-code}\nvcount(io_ig)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 401\n```\n:::\n\n```{.r .cell-code}\necount(io_ig)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 69148\n```\n:::\n\n```{.r .cell-code}\nis_bipartite(io_ig)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] FALSE\n```\n:::\n\n```{.r .cell-code}\nis_directed(io_ig)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n\n```{.r .cell-code}\nis_weighted(io_ig)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n\n```{.r .cell-code}\nprint(io_stat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n Network attributes:\n  vertices = 401 \n  directed = TRUE \n  hyper = FALSE \n  loops = FALSE \n  multiple = FALSE \n  bipartite = FALSE \n  total edges= 69148 \n    missing edges= 0 \n    non-missing edges= 69148 \n\n Vertex attribute names: \n    vertex.names \n\n Edge attribute names not shown \n```\n:::\n\n```{.r .cell-code}\nigraph::dyad.census(io_ig)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$mut\n[1] 16448\n\n$asym\n[1] 36252\n\n$null\n[1] 27500\n```\n:::\n\n```{.r .cell-code}\nsna::dyad.census(io_stat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       Mut  Asym  Null\n[1,] 16448 36252 27500\n```\n:::\n\n```{.r .cell-code}\nigraph::triad.census(io_ig)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] 1458720 1171405  143979 1183985 1221064  136654  371468  571853 1127598\n[10]    4079  480548  489333  749868  212507  967969  375570\n```\n:::\n\n```{.r .cell-code}\nsna::triad.census(io_stat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n         003     012    102    021D    021U   021C   111D   111U    030T 030C\n[1,] 1458720 1171405 143979 1183985 1221064 136654 371468 571853 1127598 4079\n        201   120D   120U   120C    210    300\n[1,] 480548 489333 749868 212507 967969 375570\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#Global\ntransitivity(io_ig, type=\"global\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.7481592\n```\n:::\n\n```{.r .cell-code}\n##Average local clustering coefficient\ntransitivity(io_ig, type=\"average\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.8429528\n```\n:::\n\n```{.r .cell-code}\ngtrans(io_stat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.7225683\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnames(igraph::components(io_ig))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"membership\" \"csize\"      \"no\"        \n```\n:::\n\n```{.r .cell-code}\nigraph::components(io_ig)$no \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1\n```\n:::\n\n```{.r .cell-code}\nigraph::components(io_ig)$csize\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 401\n```\n:::\n\n```{.r .cell-code}\nisolates(io_stat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ninteger(0)\n```\n:::\n:::\n\n\n## Degree \nThe average degree of the network is 344.9. The mean for both the indegree and outdegree are the same but the median is slightly lower for the outdegree than for the indegree. This means the nodes receive more links than send links. However, since the difference in the medians for the indegree and outdegree is only 15, it shows more of a mutual connection between the industries rather than a particular industry dominating. \n\n::: {.cell}\n\n```{.r .cell-code}\n#igraph::degree(io_ig)\n#sna::degree(io_stat)\n\nnodes_ig<-data.frame(name=V(io_ig)$name, degree=igraph::degree(io_ig,loops=FALSE))\nnodes_ig<-nodes_ig %>%\n    mutate(indegree=igraph::degree(io_ig, mode=\"in\", loops=FALSE),\n           outdegree=igraph::degree(io_ig, mode=\"out\", loops=FALSE))\nhead(nodes_ig)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                                                                                             name\nOilseed farming                                                                   Oilseed farming\nGrain farming                                                                       Grain farming\nVegetable and melon farming                                           Vegetable and melon farming\nFruit and tree nut farming                                             Fruit and tree nut farming\nGreenhouse, nursery, and floriculture production Greenhouse, nursery, and floriculture production\nOther crop farming                                                             Other crop farming\n                                                 degree indegree outdegree\nOilseed farming                                     484      400        84\nGrain farming                                       492      400        92\nVegetable and melon farming                         183      102        81\nFruit and tree nut farming                          184       96        88\nGreenhouse, nursery, and floriculture production    189       91        98\nOther crop farming                                  224      117       107\n```\n:::\n\n```{.r .cell-code}\nnodes_stat<-data.frame(name=io_stat%v%\"vertex.names\", degree=sna::degree(io_stat))\nnodes_stat<-nodes_stat %>%\n    mutate(indegree=sna::degree(io_stat, cmode=\"indegree\"),\n          outdegree=sna::degree(io_stat, cmode=\"outdegree\"))\n\nhead(nodes_stat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                                              name degree indegree outdegree\n1                                  Oilseed farming    484      400        84\n2                                    Grain farming    492      400        92\n3                      Vegetable and melon farming    183      102        81\n4                       Fruit and tree nut farming    184       96        88\n5 Greenhouse, nursery, and floriculture production    189       91        98\n6                               Other crop farming    224      117       107\n```\n:::\n\n```{.r .cell-code}\nsummary(nodes_ig)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     name               degree         indegree       outdegree    \n Length:401         Min.   : 68.0   Min.   :  0.0   Min.   : 67.0  \n Class :character   1st Qu.:208.0   1st Qu.:110.0   1st Qu.: 79.0  \n Mode  :character   Median :279.0   Median :129.0   Median :114.0  \n                    Mean   :344.9   Mean   :172.4   Mean   :172.4  \n                    3rd Qu.:485.0   3rd Qu.:164.0   3rd Qu.:251.0  \n                    Max.   :799.0   Max.   :400.0   Max.   :399.0  \n```\n:::\n\n```{.r .cell-code}\nsummary(nodes_stat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     name               degree         indegree       outdegree    \n Length:401         Min.   : 68.0   Min.   :  0.0   Min.   : 67.0  \n Class :character   1st Qu.:208.0   1st Qu.:110.0   1st Qu.: 79.0  \n Mode  :character   Median :279.0   Median :129.0   Median :114.0  \n                    Mean   :344.9   Mean   :172.4   Mean   :172.4  \n                    3rd Qu.:485.0   3rd Qu.:164.0   3rd Qu.:251.0  \n                    Max.   :799.0   Max.   :400.0   Max.   :399.0  \n```\n:::\n:::\n\n## Density\nThe density of the network is a global measure. \n\n::: {.cell}\n\n```{.r .cell-code}\ngraph.density(io_ig)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.4310973\n```\n:::\n\n```{.r .cell-code}\nnetwork.density(io_stat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.4310973\n```\n:::\n:::\n\n## Random Network\nThe dyad and triad census as well as the distributions differ from the input output network. However, the density of the network is the same.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nerdos_renyi_net <- erdos.renyi.game(401, 69148, type = \"gnm\", directed = TRUE)\n```\n:::\n\n\n## Density of random network\n\n::: {.cell}\n\n```{.r .cell-code}\ngraph.density(erdos_renyi_net)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.4310973\n```\n:::\n:::\n\n\n## Dyad and Triad Census of Random network\n\n::: {.cell}\n\n```{.r .cell-code}\nigraph::dyad.census(erdos_renyi_net)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$mut\n[1] 14900\n\n$asym\n[1] 39348\n\n$null\n[1] 25952\n```\n:::\n\n```{.r .cell-code}\nigraph::triad.census(erdos_renyi_net)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1]  361185 1644004  623689  623753  621886 1244376  943714  943402  946000\n[10]  315548  358776  357667  357171  716768  540846   67815\n```\n:::\n:::\n\n## Degree distributions of Random network\n\n::: {.cell}\n\n```{.r .cell-code}\nnodes_ern<-data.frame(degree=igraph::degree(erdos_renyi_net))\nnodes_ern<-nodes_ern %>%\n    mutate(indegree=igraph::degree(erdos_renyi_net, mode=\"in\", loops=FALSE),\n           outdegree=igraph::degree(erdos_renyi_net, mode=\"out\", loops=FALSE))\nhead(nodes_ern)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  degree indegree outdegree\n1    335      166       169\n2    376      180       196\n3    348      173       175\n4    327      158       169\n5    334      169       165\n6    344      174       170\n```\n:::\n\n```{.r .cell-code}\nsummary(nodes_ern)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     degree         indegree       outdegree    \n Min.   :304.0   Min.   :142.0   Min.   :148.0  \n 1st Qu.:335.0   1st Qu.:165.0   1st Qu.:166.0  \n Median :345.0   Median :173.0   Median :173.0  \n Mean   :344.9   Mean   :172.4   Mean   :172.4  \n 3rd Qu.:355.0   3rd Qu.:179.0   3rd Qu.:179.0  \n Max.   :380.0   Max.   :199.0   Max.   :202.0  \n```\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}