{
  "hash": "dd39740cd2ed3406c4c575afc06d526f",
  "result": {
    "markdown": "---\ntitle: \"Week 1 Challenge\"\nauthor: \"Cynthia Hester\"\ndescription: \"Loading Data and Creating a Network\"\ndate: \"02/22/2023\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\n# editor: visual\ncategories: \n  -hw1\n  -challenge_1\n  -Cynthia Hester\n  -GOT_Marriages\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nknitr::opts_chunk$set(echo = TRUE)\n```\n:::\n\n\n### Load necessary libraries\n\n\n\n\n\n#### Challenge Overview\n\n1)  read in a dataset\n\n2)  create a network object\n\n#### Load in the GOT marriages data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngot_marriages <- read_csv(\"/Users/Bud/Desktop/DACSS_697E_Social Network Analysis_SP2023/Social_Networks_SP_2023/posts/_data/got/got_marriages.csv\",show_col_types = FALSE)\n\n\nView(got_marriages)\n```\n:::\n\n\n#### Gives us a look at the first five rows and last five rows of the data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#first five rows of marriages data\nhead(got_marriages)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 x 5\n  From      To      Type    Notes  Generation\n  <chr>     <chr>   <chr>   <chr>  <chr>     \n1 Targaryen Stark   Married R+L=J  Current   \n2 Baratheon Martell Engaged died   Current   \n3 Baratheon Stark   Engaged broken Current   \n4 Martell   Essos   Married <NA>   Current   \n5 Martell   Reach   Affair  <NA>   Current   \n6 Martell   Essos   Affair  <NA>   Current   \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#last five rows of marriages data\ntail(got_marriages)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 x 5\n  From       To         Type    Notes Generation\n  <chr>      <chr>      <chr>   <chr> <chr>     \n1 Targaryen  Crownlands Married <NA>  Past      \n2 Crownlands Stormlands Affair  <NA>  Past      \n3 Targaryen  Crownlands Married <NA>  Past      \n4 Targaryen  Crownlands Married <NA>  Past      \n5 Targaryen  Targaryen  Married <NA>  Past      \n6 Targaryen  Targaryen  Married <NA>  Past      \n```\n:::\n:::\n\n\n#### Provides summary of data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#summary statistics of data\nsummary(got_marriages)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     From                To                Type              Notes          \n Length:255         Length:255         Length:255         Length:255        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n  Generation       \n Length:255        \n Class :character  \n Mode  :character  \n```\n:::\n:::\n\n\n### Create a Network\n\nLoad the package `igraph` and create an `igraph` object (i.e. a graph or network) in the form of an edge list. The command may vary whether the data is given as a list of connections or an adjacency matrix.\n\n1)Is the network directed or undirected; 2)weighted or unweighted; 3)unimodal or bipartite; 4)Can you plot it?\n\n#### igraph object\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# object from the data frame\nmarriages.ig<- graph_from_data_frame(got_marriages)\n```\n:::\n\n\n#### IGRAPH Summary of GOT Marriages\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(marriages.ig)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nIGRAPH 246ae58 DN-- 20 255 -- \n+ attr: name (v/c), Type (e/c), Notes (e/c), Generation (e/c)\n+ edges from 246ae58 (vertex names):\n [1] Targaryen->Stark       Baratheon->Martell     Baratheon->Stark      \n [4] Martell  ->Essos       Martell  ->Reach       Martell  ->Essos      \n [7] Martell  ->Essos       Martell  ->Septa       Martell  ->Dorne      \n[10] Martell  ->Targaryen   Targaryen->Essos       Targaryen->Essos      \n[13] Baratheon->Lannister   Baratheon->Vale        Baratheon->Riverlands \n[16] Baratheon->Crownlands  Baratheon->Reach       Baratheon->Westerlands\n[19] Baratheon->Crownlands  Lannister->Lannister   Baratheon->Reach      \n[22] Baratheon->Tyrell      Tyrell   ->Reach       Tyrell   ->Reach      \n+ ... omitted several edges\n```\n:::\n:::\n\n\n### Here we see that there are 20 **edges or ties** and that there are **255 nodes or vertices**. More fun facts to follow.\n\n#### Is the network directed or undirected\n\n\n::: {.cell}\n\n```{.r .cell-code}\nis_directed<-is_directed(marriages.ig)\n\nif (is_directed) {\n  print(\"The network is directed.\")\n} else {\n  print(\"The network is not directed.\")\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"The network is directed.\"\n```\n:::\n:::\n\n\n#### Is the network weighted or unweighted?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nis_weighted<-is_weighted(marriages.ig)\n\nif (is_weighted) {\n  print(\"The network is weighted.\")\n} else {\n  print(\"The network is not weighted.\")\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"The network is not weighted.\"\n```\n:::\n:::\n\n\n#### Is the network unimodal or bipartite?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nis_bipartite <- is_bipartite(marriages.ig)\n\nif (is_bipartite) {\n  print(\"The network is bipartite.\")\n} else {\n  print(\"The network is not bipartite.\")\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"The network is not bipartite.\"\n```\n:::\n:::\n\n\n### Plot of network\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# vertex and edge attributes \nV(marriages.ig)$label <- V(marriages.ig)$name\nE(marriages.ig)$arrow.size <- 0\n\n# graph layout and plot\nlayout <- layout_with_fr(marriages.ig)\nplot(marriages.ig, layout=layout)\n```\n\n::: {.cell-output-display}\n![](CynthiaHester_Challenge1_HW1_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n#### The graph seems to accurately represent a network of GOT_Marriages, with each node representing a person.I used set the arrow size attribute of the edges to 0.This was done to indicate that this is an undirected graph. This made sense in the context of a network of marriages, as the relationship is typically bidirectional. Of note two pendant nodes are observed, **Septa and Beyond Wall**, which could considered points of interest.Upon some further research regarding the **pendant nodes**, I found that Septas are often present during weddings in the Faith of the Seven, as they are responsible for overseeing the religious aspects of the ceremony. And that Beyond the Wall, marriages and unions are often arranged in the Wildling culture, but they do not follow the same traditions as those in the Seven Kingdoms. I'm very rusty in my GOT lore, thus I am not sure how else these nodes would be meaningful aside from having low connectivity.\n",
    "supporting": [
      "CynthiaHester_Challenge1_HW1_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}