{
  "hash": "193308742b5ee0556b68da4b41417c81",
  "result": {
    "markdown": "---\ntitle: \"Week 3 Challenge Instructions\"\nauthor: \"Oriol Vall√®s Codina\"\ndescription: \"Degree and Density of a Network\"\ndate: \"03/06/2023\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\n# editor: visual\ncategories: \n  - challenge_3\n  - instructions\n  # - railroads\n  # - faostat\n  # - wildbirds\n---\n\n\n\n\n## Challenge Overview\n\nDescribe the many measures of degree, as well as density, of a network and compare \n\n## Degree\n\nIf you have not done it before, evaluate the structure of the network (number of edges and vertices, dyad and triad census, etc.).\n\nCompute the many measures of _degree_ of the network of your choice, most preferably directed. Create a data frame called `nodes` where each row corresponds to a node and each column to an attribute of the node, namely the id, name or label, and different measures of degree: total, out-degree, and in-degree. What is the average degree of the network?\n\nCompute the distributions of those measures (or histograms if your network is small). What does this tell us about the structure of the network?\n\n## Density\n\nCompute the density of the network. Is this a global or local measure? Does it have a relationship with average degree? \n\n## Random Network\n\nCreate a random (Erdos-Renyi) network with the same number of nodes and edges than the network of your choice. On `igraph`, the necessary commands are `random.graph.game(n, p.or.m, type = c(\"gnp\", \"gnm\"), directed = FALSE, loops = FALSE)` (deprecated), `sample_gnp(n, p, directed = FALSE, loops = FALSE)` or `sample_gnm(n, m, directed = FALSE, loops = FALSE)`. The `p.or.m` argument is to specify the probability of an edge $p$ or the number of edges $m$.\n  \nCompare the densities, dyad and triad censuses, and degree distributions, with the measures of the network of your choice. Does the comparison us something about the network of your choice? \n\n\n\n::: {.cell}\n\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}