{
  "hash": "22ca9aa190d3ae2bd3a7f6dd0f903e5b",
  "result": {
    "markdown": "---\ntitle: \"Migration Networks\"\nauthor: \"Mekhala Kumar\"\ndescription: \"final project\"\ndate: \"04/5/2023\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\n# editor: visual\ncategories: \n  - final project\n  - Mekhala Kumar\n  - Census data\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(ggplot2)\nlibrary(plotly)\nlibrary(gapminder)\noptions(scipen = 100, digits = 4)\nlibrary(igraph)\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n# Reading in the Data\nThe first few rows and last few rows are unnecessary. \n\n::: {.cell}\n\n```{.r .cell-code}\nmig_india <- read_excel(\"_data/Mekhala's data/DS-0000-D03-MDDS.XLSX\",skip=5,col_names=c(\"tab_name\",\"state_code\",\"dist_code\",\"area\",\"res\",\"res_time\",\"last_res\",\"last_res_type\",\"tot_t\",\"tot_m\",\"tot_f\",\"work_t\",\"work_m\",\"work_f\",\"busi_t\",\"busi_m\",\"busi_f\",\"educ_t\",\"educ_m\",\"educ_f\",\"mar_t\",\"mar_m\",\"mar_f\",\"afterbirth_t\",\"afterbirth_m\",\"afterbirth_f\",\"withhh_t\",\"withhh_m\",\"withhh_f\",\"others_t\",\"others_m\",\"others_f\"))\ndim(mig_india)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 67503    32\n```\n:::\n\n```{.r .cell-code}\nhead(mig_india)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 32\n  tab_name state_code dist_c…¹ area  res   res_t…² last_…³ last_…⁴  tot_t  tot_m\n  <chr>    <chr>      <chr>    <chr> <chr> <chr>   <chr>   <chr>    <dbl>  <dbl>\n1 D0603    00         000      INDIA Total All du… Total   Total   4.56e8 1.46e8\n2 D0603    00         000      INDIA Total All du… Last r… Total   4.50e8 1.43e8\n3 D0603    00         000      INDIA Total All du… Last r… Rural   2.92e8 7.22e7\n4 D0603    00         000      INDIA Total All du… Last r… Urban   1.05e8 4.53e7\n5 D0603    00         000      INDIA Total All du… Within… Total   3.96e8 1.20e8\n6 D0603    00         000      INDIA Total All du… Within… Rural   2.60e8 5.85e7\n# … with 22 more variables: tot_f <dbl>, work_t <dbl>, work_m <dbl>,\n#   work_f <dbl>, busi_t <dbl>, busi_m <dbl>, busi_f <dbl>, educ_t <dbl>,\n#   educ_m <dbl>, educ_f <dbl>, mar_t <dbl>, mar_m <dbl>, mar_f <dbl>,\n#   afterbirth_t <dbl>, afterbirth_m <dbl>, afterbirth_f <dbl>, withhh_t <dbl>,\n#   withhh_m <dbl>, withhh_f <dbl>, others_t <dbl>, others_m <dbl>,\n#   others_f <dbl>, and abbreviated variable names ¹​dist_code, ²​res_time,\n#   ³​last_res, ⁴​last_res_type\n```\n:::\n\n```{.r .cell-code}\ntail(mig_india)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 32\n  tab_name state…¹ dist_…² area  res   res_t…³ last_…⁴ last_…⁵ tot_t tot_m tot_f\n  <chr>    <chr>   <chr>   <chr> <chr> <chr>   <chr>   <chr>   <dbl> <dbl> <dbl>\n1 D0603    35      000     Stat… Urban Durati… Countr… Total     326   176   150\n2 D0603    35      000     Stat… Urban Durati… Other … Total      22    12    10\n3 D0603    35      000     Stat… Urban Durati… Unclas… Total      10     7     3\n4 <NA>     <NA>    <NA>    <NA>  <NA>  <NA>    <NA>    <NA>       NA    NA    NA\n5 Note:  … <NA>    <NA>    <NA>  <NA>  <NA>    <NA>    <NA>       NA    NA    NA\n6 2. The … <NA>    <NA>    <NA>  <NA>  <NA>    <NA>    <NA>       NA    NA    NA\n# … with 21 more variables: work_t <dbl>, work_m <dbl>, work_f <dbl>,\n#   busi_t <dbl>, busi_m <dbl>, busi_f <dbl>, educ_t <dbl>, educ_m <dbl>,\n#   educ_f <dbl>, mar_t <dbl>, mar_m <dbl>, mar_f <dbl>, afterbirth_t <dbl>,\n#   afterbirth_m <dbl>, afterbirth_f <dbl>, withhh_t <dbl>, withhh_m <dbl>,\n#   withhh_f <dbl>, others_t <dbl>, others_m <dbl>, others_f <dbl>, and\n#   abbreviated variable names ¹​state_code, ²​dist_code, ³​res_time, ⁴​last_res,\n#   ⁵​last_res_type\n```\n:::\n\n```{.r .cell-code}\nmig_india<-mig_india%>%slice(1:67500)\ntail(mig_india)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 32\n  tab_name state…¹ dist_…² area  res   res_t…³ last_…⁴ last_…⁵ tot_t tot_m tot_f\n  <chr>    <chr>   <chr>   <chr> <chr> <chr>   <chr>   <chr>   <dbl> <dbl> <dbl>\n1 D0603    35      000     Stat… Urban Durati… Andama… Rural       0     0     0\n2 D0603    35      000     Stat… Urban Durati… Andama… Urban       0     0     0\n3 D0603    35      000     Stat… Urban Durati… Last r… Total     348   188   160\n4 D0603    35      000     Stat… Urban Durati… Countr… Total     326   176   150\n5 D0603    35      000     Stat… Urban Durati… Other … Total      22    12    10\n6 D0603    35      000     Stat… Urban Durati… Unclas… Total      10     7     3\n# … with 21 more variables: work_t <dbl>, work_m <dbl>, work_f <dbl>,\n#   busi_t <dbl>, busi_m <dbl>, busi_f <dbl>, educ_t <dbl>, educ_m <dbl>,\n#   educ_f <dbl>, mar_t <dbl>, mar_m <dbl>, mar_f <dbl>, afterbirth_t <dbl>,\n#   afterbirth_m <dbl>, afterbirth_f <dbl>, withhh_t <dbl>, withhh_m <dbl>,\n#   withhh_f <dbl>, others_t <dbl>, others_m <dbl>, others_f <dbl>, and\n#   abbreviated variable names ¹​state_code, ²​dist_code, ³​res_time, ⁴​last_res,\n#   ⁵​last_res_type\n```\n:::\n:::\n\n\n# Checking for the various categories present\n1. Area- remove India\n2. Res- remove Rural and Urban (or is it important?)\n3. res_time- keep all durations of residence\n4. last_res- remove Elsewhere in the district of enumeration, In other districts of the state of enumeration, Last residence outside India, Last residence within India, States in India beyond the state of enumeration,Within the state of enumeration but outside the place of enumeration\t *hope this is correct*\n5. last_res_type- remove Rural and Urban\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#area\nmig_india %>% \n  count(area)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 36 × 2\n   area                                       n\n   <chr>                                  <int>\n 1 INDIA                                   1875\n 2 State - ANDAMAN & NICOBAR ISLANDS (35)  1875\n 3 State - ANDHRA PRADESH (28)             1875\n 4 State - ARUNACHAL PRADESH (12)          1875\n 5 State - ASSAM (18)                      1875\n 6 State - BIHAR (10)                      1875\n 7 State - CHANDIGARH (04)                 1875\n 8 State - CHHATTISGARH (22)               1875\n 9 State - DADRA & NAGAR HAVELI (26)       1875\n10 State - DAMAN & DIU (25)                1875\n# … with 26 more rows\n```\n:::\n\n```{.r .cell-code}\n#res\nmig_india %>% \n  count(res)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 2\n  res       n\n  <chr> <int>\n1 Rural 22500\n2 Total 22500\n3 Urban 22500\n```\n:::\n\n```{.r .cell-code}\n#res_time\nmig_india %>% \n  count(res_time)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 2\n  res_time                                     n\n  <chr>                                    <int>\n1 All durations of residence               13500\n2 Duration of residence 1-4 years          13500\n3 Duration of residence 10 years and above 13500\n4 Duration of residence 5-9 years          13500\n5 Duration of residence less than 1 year   13500\n```\n:::\n\n```{.r .cell-code}\n#last_Res\nmig_india %>% \n  count(last_res)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 45 × 2\n   last_res                           n\n   <chr>                          <int>\n 1 Andaman & Nicobar Islands       1620\n 2 Andhra Pradesh                  1620\n 3 Arunachal Pradesh               1620\n 4 Assam                           1620\n 5 Bihar                           1620\n 6 Chandigarh                      1620\n 7 Chhattisgarh                    1620\n 8 Countries in Asia beyond India   540\n 9 Dadra & Nagar Haveli            1620\n10 Daman & Diu                     1620\n# … with 35 more rows\n```\n:::\n\n```{.r .cell-code}\n#last_res_type\nmig_india %>% \n  count(last_res_type)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 2\n  last_res_type     n\n  <chr>         <int>\n1 Rural         21600\n2 Total         24300\n3 Urban         21600\n```\n:::\n:::\n\n# Getting rid of some of the categories\n1. not understanding why I am using str detect here \n2. getting confused about the district of enumeration stuff\n3. migration within state (like both from and to columns have same state name)\n\n::: {.cell}\n\n```{.r .cell-code}\nmig_india<-mig_india%>%\n  filter(!str_detect(area,\"INDIA\"))%>%\n  filter(str_detect(res,\"Total\"))%>%\n  filter(str_detect(res_time,\"All durations of residence\"))%>%\n  filter(str_detect(last_res_type,\"Total\"))%>%\n  filter(!(last_res==\"Elsewhere in the district of enumeration\"|last_res==\"In other districts of the state of enumeration\"|last_res==\"Last residence outside India\"|last_res==\"Last residence within India\"|last_res==\"States in India beyond the state of enumeration\"|last_res==\"Within the state of enumeration but outside the place of enumeration\"|last_res==\"Total\"|last_res==\"Countries in Asia beyond India\"|last_res==\"Other Countries\"|last_res==\"Unclassifiable\"))\n  \n#area\nmig_india %>% \n  count(area)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 35 × 2\n   area                                       n\n   <chr>                                  <int>\n 1 State - ANDAMAN & NICOBAR ISLANDS (35)    35\n 2 State - ANDHRA PRADESH (28)               35\n 3 State - ARUNACHAL PRADESH (12)            35\n 4 State - ASSAM (18)                        35\n 5 State - BIHAR (10)                        35\n 6 State - CHANDIGARH (04)                   35\n 7 State - CHHATTISGARH (22)                 35\n 8 State - DADRA & NAGAR HAVELI (26)         35\n 9 State - DAMAN & DIU (25)                  35\n10 State - GOA (30)                          35\n# … with 25 more rows\n```\n:::\n\n```{.r .cell-code}\n#res\nmig_india %>% \n  count(res)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 2\n  res       n\n  <chr> <int>\n1 Total  1225\n```\n:::\n\n```{.r .cell-code}\n#res_time\nmig_india %>% \n  count(res_time)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 2\n  res_time                       n\n  <chr>                      <int>\n1 All durations of residence  1225\n```\n:::\n\n```{.r .cell-code}\n#last_Res\nmig_india %>% \n  count(last_res)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 35 × 2\n   last_res                      n\n   <chr>                     <int>\n 1 Andaman & Nicobar Islands    35\n 2 Andhra Pradesh               35\n 3 Arunachal Pradesh            35\n 4 Assam                        35\n 5 Bihar                        35\n 6 Chandigarh                   35\n 7 Chhattisgarh                 35\n 8 Dadra & Nagar Haveli         35\n 9 Daman & Diu                  35\n10 Goa                          35\n# … with 25 more rows\n```\n:::\n\n```{.r .cell-code}\n#last_res_type\nmig_india %>% \n  count(last_res_type)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 2\n  last_res_type     n\n  <chr>         <int>\n1 Total          1225\n```\n:::\n:::\n\n## next steps\n1. Have to change area(to): removing the codes and making it lowercase\n\n::: {.cell}\n\n```{.r .cell-code}\nmig_india%>%select(area)%>%distinct()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 35 × 1\n   area                         \n   <chr>                        \n 1 State - JAMMU & KASHMIR (01) \n 2 State - HIMACHAL PRADESH (02)\n 3 State - PUNJAB (03)          \n 4 State - CHANDIGARH (04)      \n 5 State - UTTARAKHAND (05)     \n 6 State - HARYANA (06)         \n 7 State - NCT OF DELHI (07)    \n 8 State - RAJASTHAN (08)       \n 9 State - UTTAR PRADESH (09)   \n10 State - BIHAR (10)           \n# … with 25 more rows\n```\n:::\n\n```{.r .cell-code}\nmig_india<-mig_india%>%\n  separate(area,into=c(\"delete\",\"area\"),sep=\" - \")%>%\n  separate(area,into=c(\"area\",\"delete2\"),sep=\"\\\\(\")\nmig_india <- mig_india %>% select(-c(delete,delete2))\nmig_india%>%select(last_res)%>%distinct()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 35 × 1\n   last_res        \n   <chr>           \n 1 Jammu & Kashmir \n 2 Himachal Pradesh\n 3 Punjab          \n 4 Chandigarh      \n 5 Uttarakhand     \n 6 Haryana         \n 7 NCT of Delhi    \n 8 Rajasthan       \n 9 Uttar Pradesh   \n10 Bihar           \n# … with 25 more rows\n```\n:::\n\n```{.r .cell-code}\nmig_india<-mig_india%>% mutate(last_res = toupper(last_res))\n#mig_india<-mig_india%>% str_trim(area)\nmig_india$area <- mig_india$area %>% trimws\n\n#substr(mig_india$area, nchar(mig_india$area), nchar(mig_india$area) - 1)\n```\n:::\n\n\nratio\n\n::: {.cell}\n\n```{.r .cell-code}\nmig_india<-mig_india%>%mutate(tot_ratio=tot_f/tot_m)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmig_check<-mig_india%>%\n  relocate(last_res,area,work_t,educ_t,mar_t)\nmig_check<-mig_check[1:5]\n\nmig_check<-\n  mig_check%>%\ngroup_by(area)%>%\n  mutate(total_work = sum(work_t),total_educ=sum(educ_t),total_mar=sum(mar_t))%>%\n  ungroup()%>%\n  mutate(work_prop = work_t/total_work,educ_prop=educ_t/total_educ,mar_prop=mar_t/total_mar)\n```\n:::\n\n## edgelist part?\nCheck rowSums-emigrated vs colSums-immigrated\ncan make a scatterplot\n## Using work as the weight\n\n::: {.cell}\n\n```{.r .cell-code}\n#use this to change the metric\nmig_network<-mig_india%>%\n  relocate(last_res,area,work_t,.before=tab_name)%>%\n  rename(from=last_res,to=area,weight=work_t)\n\n#not really useful\n#mypaths<-mig_network%>%\n # group_by(from,to)%>%\n  #summarise(tot_ratio=n())\n\nmig_network<-mig_network[1:3]\ntable(mig_network$weight > 0)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nFALSE  TRUE \n   69  1156 \n```\n:::\n\n```{.r .cell-code}\ntable(mig_network$weight == 0)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nFALSE  TRUE \n 1156    69 \n```\n:::\n\n```{.r .cell-code}\nmig_network <- mig_network %>% filter(weight > 0)\ntable(mig_network$weight == 0)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nFALSE \n 1156 \n```\n:::\n\n```{.r .cell-code}\n#weighted=TRUE,values=mig_india$tot_ratio\nmig.ig<-igraph::graph_from_data_frame(mig_network,directed=TRUE)\nprint(\"Number of vertices\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Number of vertices\"\n```\n:::\n\n```{.r .cell-code}\nvcount(mig.ig)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 35\n```\n:::\n\n```{.r .cell-code}\nprint(\"Number of edges\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Number of edges\"\n```\n:::\n\n```{.r .cell-code}\necount(mig.ig)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1156\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#V(mig.ig)$weight\nE(mig.ig)$weight\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   [1]     726    3804      88     447     627     991     971    4393    3452\n  [10]      28      27      14      17       2       9      10     256    1334\n  [19]     691     610    4902    2290     214       1       1     569     371\n  [28]     233      36      10     280     210       2      11    4746   14863\n  [37]    1997    5695    5152    3680    2667   28681   21064     303     119\n  [46]      30      54      16      37      32     731    2554    6592    1893\n  [55]    2500    2570     402      11       3    1329     435     481      22\n  [64]       2     268     250       4      10    9150   36237   14441   15056\n  [73]   49932    6126   28663  230996  149495      73      59     144     210\n  [82]     136      73      69    2272   11565    8160    3672    3453    7923\n  [91]    1797       1       1    4639    1255     730     116      34    1657\n [100]    1362      24      32    1510   20328   33992   11602   23039    4947\n [109]    2550   67727   24158      25      34      21      80       4      18\n [118]      33     453    2605    1258     673     481    1061     492       4\n [127]       1    1146     330     316      23       2     298    1056       7\n [136]      17    1479    3488    8038     431    5667    7994    3729  203460\n [145]   31963     109     189     101     130      38      77     108    1325\n [154]    6803    5033    1236     988    2930    1078      26      11    2287\n [163]     751     499      50       4     662     502      20      21    2795\n [172]   11014   61627    9563   20955   62027   64896  301561  157343     105\n [181]      77      81     186      18     127      98    3272   28953    8190\n [190]    6176    5483   18753    2557      14       5    7093    2424    2469\n [199]     132       7    2840    2429      36      30    8931   23700   52245\n [208]    1629   92874  132533   86480  902393  406410     324     369     593\n [217]    1943     167     469     688    7647   62037   25121   15192    4137\n [226]   40416    5382       9      19   13801    6027    4139     291      37\n [235]   23341   14357     140     169    1594    1805   32194     303    6012\n [244]   35809   11768  107646   48253      78      66     116     110     203\n [253]     102     598    1945   22362    4042    4005    2152   59038   16822\n [262]      17      16    9926    1704    1393      98      18    6981    1608\n [271]      13      23    3686    3743   25815     902   50775   20307   79934\n [280]   22439  160825      77     127     119     152      38     131     189\n [289]    5259   32288   25104    7303   18985   41006    3489      12      26\n [298]    9907    2896    2227     135      75    5849    2361      37      61\n [307]     358     210    1416      56     181     662    3575    1227   12001\n [316]      36      59      59      47      13      19      38    1188   12934\n [325]   17585     620     201     482     746       4      18    1921     285\n [334]     281      13      67     487     342      14      10     155     194\n [343]     135      17     114     121     175     114     628    3790     100\n [352]      55     163       8      18      67    1089   10687     596     363\n [361]      22     267      41      17       1      83     251      78      17\n [370]      94      75       7      81      71      65       3      92     123\n [379]     104     358    1925    5328      87     417     588      95     269\n [388]     457   33587    2859     722     886      56      74      18     110\n [397]     124      60      11     660     136       3       1      13      12\n [406]      33       4      37      48       5     351    1044    5841      33\n [415]     130    3355      70     914     437   17354    1123     648     448\n [424]      28      42      13      97     107     121       3     533     136\n [433]       3       4      15       7       9       2       9      16     110\n [442]      47     106     450      28      17     118     126      71      86\n [451]     626     103      26      20       1       9       8      57      16\n [460]      30      12       4      62      31       1       7       4      10\n [469]       3      13      15      48      31     151     690       9      39\n [478]      82    2267     596     528    5882     259     773      26       6\n [487]      27       5      24      33      28       1     121      32       2\n [496]       1      32      19      20       3      39      17      52      75\n [505]     742    6274       1      38      65     107     204     159    3759\n [514]    1062    9576     101      17      33      37       1      60      39\n [523]      34       2       3      58      52       4       1      41      41\n [532]     196       8      94      31     358     491    4305      32     305\n [541]     306    1225     340     906    9794    1136     148     136      14\n [550]      50      18      93      72      55       7     181      63       6\n [559]       1     198     116     540      36     293     437     488    2958\n [568]    6675   33309     161    1700    2182    1710     527    4948    4806\n [577]   11237    3359    1620     402     541     303       1     502    1338\n [586]     192       8       6     579     363       5      23     500     274\n [595]    2779     106     562    1575    2099    7462   55164  269356     758\n [604]     244     498     304      86    2881     811   16480   57234   31897\n [613]    1631    2164    1808       4      19    3768    3382     991      64\n [622]      12    1942    1692      29     197     253     241    2641      53\n [631]     271     860    1601    2309   24660  292428      32      35      43\n [640]     192      12     104      76     881   54724   17676    5359    1975\n [649]    1185       1       2    2149    2122     489      66       3    1424\n [658]    1046      16      41     407     152    1187      64     255     679\n [667]    1721    1707    7076   25101      40      48     105     107      18\n [676]     175      86     797   21581   24288    7528    1951    5100       2\n [685]       4    2903   15122    1263      89    1396    1716      31      48\n [694]    1464     468    4747      72     657    3455    2353    5249   47212\n [703]   44747      22      23      32      23       6      69      31     792\n [712]   16104   23379   42989   63137    2998      12       2   21979   10812\n [721]     785      56       6    3691    1484       8      57    1111     926\n [730]    7146     138    3072    4069    5017   53236  171808   40473      45\n [739]      52      51     110      48     109      70     990   16040   11584\n [748]    6085   30389   10451      49       9   58083    4559    1597     181\n [757]      18    8611    2615      18      42     984    1103    6877     312\n [766]    3698    6323    5838  154783  346417  161946      27      65      53\n [775]     101       8     211     100    3955   32068   28012   77284    4366\n [784]   72459     959     777  174457   12267    5995     399       4   12500\n [793]    7216     121      59      22      42     104      18     231      65\n [802]     250    2120   18084   19854       5       2       6      26       1\n [811]    1418    3557    2686    3419     184    5593    5395      62    5969\n [820]     161     248      40      16     320     132       4      14      22\n [829]      58     145      12     372     109     247    2409   15825   11583\n [838]      10       2      23       1       3    1158    1749    1516    2931\n [847]     173    3015    6242     273    7724     265     354      45      14\n [856]     535     223       4       1    5141    4112   17990     868   15604\n [865]   12570   23253  154625 1104680  263195     210     182     312    1032\n [874]     118     581     496   13311  140494   50772   55075   51494  188936\n [883]  166908     386     211   93761  278084   10480     108   65828   65335\n [892]     346     269     741     321    1576     253     589    1314    4573\n [901]   12767   16200   17236      42      50      62     159      15     126\n [910]     104    2021   14261    3718   44897    6477    4939    3891      15\n [919]       3   43278   47106     403      12   11348   41517     856     271\n [928]    1604     970    3289     508    1884    3628   11125   31747   34920\n [937]   35788     254     184     408    1829     121     690     440   12721\n [946]   29449    8828   37178    2541    7869    7972      12      11   55014\n [955]  199501    2888      86   82697  204746     886     210     161     114\n [964]     232      21     210     189     678    1254    8509    3753      10\n [973]       5      29     137       8      11      14     954    2662    2208\n [982]    2643     423     978     701      60       3   13081    1453   29884\n [991]       4    2125    1102      16      58       2       2       2       1\n[1000]      16       5       4      10       3       1       1       4     104\n[1009]       1      15       2      18      37      39      69      85      28\n[1018]      28       3    1513     250       2      14     454      85     488\n[1027]      79     139     300    2482    2268    4402    4875      40      94\n[1036]     211     104      24      57      78    5780   22318    1339    7777\n[1045]     497    1339    1482      12       7    6865    4062   12794     357\n[1054]     316   72899     490     235     955     146    1151     187     218\n[1063]    1002    2909   16683    7911   10905      40      74     116     243\n[1072]      25      84      90    3198    9454    2336   11580     486    2208\n[1081]    3685      12      22   14884   44312   38357     364      11   77955\n[1090]   10732     750      22      12      37       6      21      27     200\n[1099]     222     249     175       1       6       5       3       1      10\n[1108]      10      86     282      21     629       3      34     343     364\n[1117]    6008     591      25       3    1292   40250      23      16      15\n[1126]      83      17      32      38     118      61     761     646       5\n[1135]       5       9       6       1      40       3     142    8676    3074\n[1144]     444     820     147      38       1     172    4861     130      34\n[1153]      12    1443    5855      18\n```\n:::\n\n```{.r .cell-code}\nplot(mig.ig)\n```\n\n::: {.cell-output-display}\n![](Migration-Networks-some-old-stuff-or-things-to-get-rid-of_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nis_bipartite(mig.ig)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] FALSE\n```\n:::\n\n```{.r .cell-code}\nis_directed(mig.ig)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n\n```{.r .cell-code}\nis_weighted(mig.ig)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n\n```{.r .cell-code}\nplot(mig_to_work_stat)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in plot(mig_to_work_stat): object 'mig_to_work_stat' not found\n```\n:::\n:::\n\nExplain triad census\nCheck for which states have no migration\n\n::: {.cell}\n\n```{.r .cell-code}\nigraph::dyad.census(mig.ig)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$mut\n[1] 566\n\n$asym\n[1] 24\n\n$null\n[1] 5\n```\n:::\n\n```{.r .cell-code}\nigraph::triad.census(mig.ig)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1]    0    0    4    0    0    0   20   24    2    2  113   11   39   23  590\n[16] 5717\n```\n:::\n:::\n\n\n## Components\nThe number of components is 1. \n\n::: {.cell}\n\n```{.r .cell-code}\nnames(igraph::components(mig.ig))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"membership\" \"csize\"      \"no\"        \n```\n:::\n\n```{.r .cell-code}\nigraph::components(mig.ig)$no \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1\n```\n:::\n\n```{.r .cell-code}\nigraph::components(mig.ig)$csize\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 35\n```\n:::\n:::\n\n\n## Degree \n\n\n::: {.cell}\n\n```{.r .cell-code}\n#igraph::degree(mig.ig)\nnodes <- data.frame(name = V(mig.ig)$name,\n                    all.degree = degree(mig.ig, mode = 'all'), \n                    out.degree = degree(mig.ig, mode = 'out'),\n                    in.degree = degree(mig.ig, mode = 'in'), \n                    total.degree = degree(mig.ig, mode = 'total'),\n                    eigen.centrality = evcent(mig.ig)$vector)\n\nhead(nodes)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                             name all.degree out.degree in.degree total.degree\nHIMACHAL PRADESH HIMACHAL PRADESH         67         33        34           67\nPUNJAB                     PUNJAB         68         34        34           68\nCHANDIGARH             CHANDIGARH         67         33        34           67\nUTTARAKHAND           UTTARAKHAND         68         34        34           68\nHARYANA                   HARYANA         68         34        34           68\nNCT OF DELHI         NCT OF DELHI         67         33        34           67\n                 eigen.centrality\nHIMACHAL PRADESH          0.04250\nPUNJAB                    0.21825\nCHANDIGARH                0.05366\nUTTARAKHAND               0.17913\nHARYANA                   0.29543\nNCT OF DELHI              0.65290\n```\n:::\n\n```{.r .cell-code}\n#igraph::degree(mig.ig)\nnodes <- data.frame(name = V(mig_to_work_ig)$name,\n                    all.degree = igraph::degree(mig_to_work_ig, mode = 'all'), \n                    out.degree = igraph::degree(mig_to_work_ig, mode = 'out'),\n                    in.degree = igraph::degree(mig_to_work_ig, mode = 'in'), \n                    eigen.centrality = igraph::evcent(mig_to_work_ig)$vector,\n                    cons=igraph::constraint(mig_to_work_ig),\n                    centr_btw = igraph::betweenness(mig_to_work_ig, directed = TRUE))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in \"igraph\" %in% class(graph): object 'mig_to_work_ig' not found\n```\n:::\n\n```{.r .cell-code}\nhead(nodes)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                             name all.degree out.degree in.degree total.degree\nHIMACHAL PRADESH HIMACHAL PRADESH         67         33        34           67\nPUNJAB                     PUNJAB         68         34        34           68\nCHANDIGARH             CHANDIGARH         67         33        34           67\nUTTARAKHAND           UTTARAKHAND         68         34        34           68\nHARYANA                   HARYANA         68         34        34           68\nNCT OF DELHI         NCT OF DELHI         67         33        34           67\n                 eigen.centrality\nHIMACHAL PRADESH          0.04250\nPUNJAB                    0.21825\nCHANDIGARH                0.05366\nUTTARAKHAND               0.17913\nHARYANA                   0.29543\nNCT OF DELHI              0.65290\n```\n:::\n\n```{.r .cell-code}\nsummary(nodes)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     name             all.degree     out.degree   in.degree   total.degree \n Length:35          Min.   :56.0   Min.   :26   Min.   :28   Min.   :56.0  \n Class :character   1st Qu.:64.5   1st Qu.:33   1st Qu.:32   1st Qu.:64.5  \n Mode  :character   Median :68.0   Median :34   Median :34   Median :68.0  \n                    Mean   :66.1   Mean   :33   Mean   :33   Mean   :66.1  \n                    3rd Qu.:68.0   3rd Qu.:34   3rd Qu.:34   3rd Qu.:68.0  \n                    Max.   :68.0   Max.   :34   Max.   :34   Max.   :68.0  \n eigen.centrality\n Min.   :0.0003  \n 1st Qu.:0.0036  \n Median :0.0672  \n Mean   :0.1629  \n 3rd Qu.:0.2164  \n Max.   :1.0000  \n```\n:::\n\n```{.r .cell-code}\nnodes_ig<-data.frame(name=V(mig.ig)$name, degree=igraph::degree(mig.ig,loops=TRUE))\nnodes_ig<-nodes_ig %>%\n  mutate(indegree=igraph::degree(mig.ig, mode=\"in\", loops=TRUE),\n           outdegree=igraph::degree(mig.ig, mode=\"out\", loops=TRUE))\nnodes_ig\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                                               name degree indegree outdegree\nHIMACHAL PRADESH                   HIMACHAL PRADESH     67       34        33\nPUNJAB                                       PUNJAB     68       34        34\nCHANDIGARH                               CHANDIGARH     67       34        33\nUTTARAKHAND                             UTTARAKHAND     68       34        34\nHARYANA                                     HARYANA     68       34        34\nNCT OF DELHI                           NCT OF DELHI     67       34        33\nRAJASTHAN                                 RAJASTHAN     68       34        34\nUTTAR PRADESH                         UTTAR PRADESH     68       34        34\nBIHAR                                         BIHAR     68       34        34\nSIKKIM                                       SIKKIM     63       32        31\nARUNACHAL PRADESH                 ARUNACHAL PRADESH     65       31        34\nNAGALAND                                   NAGALAND     64       31        33\nMANIPUR                                     MANIPUR     64       31        33\nMIZORAM                                     MIZORAM     64       31        33\nTRIPURA                                     TRIPURA     67       33        34\nMEGHALAYA                                 MEGHALAYA     62       30        32\nASSAM                                         ASSAM     67       33        34\nWEST BENGAL                             WEST BENGAL     68       34        34\nJHARKHAND                                 JHARKHAND     68       34        34\nODISHA                                       ODISHA     67       33        34\nCHHATTISGARH                           CHHATTISGARH     68       34        34\nMADHYA PRADESH                       MADHYA PRADESH     68       34        34\nGUJARAT                                     GUJARAT     68       34        34\nDAMAN & DIU                             DAMAN & DIU     58       32        26\nDADRA & NAGAR HAVELI           DADRA & NAGAR HAVELI     59       32        27\nMAHARASHTRA                             MAHARASHTRA     68       34        34\nANDHRA PRADESH                       ANDHRA PRADESH     68       34        34\nKARNATAKA                                 KARNATAKA     68       34        34\nGOA                                             GOA     68       34        34\nLAKSHADWEEP                             LAKSHADWEEP     56       28        28\nKERALA                                       KERALA     68       34        34\nTAMIL NADU                               TAMIL NADU     68       34        34\nPUDUCHERRY                               PUDUCHERRY     64       32        32\nANDAMAN & NICOBAR ISLANDS ANDAMAN & NICOBAR ISLANDS     67       33        34\nJAMMU & KASHMIR                     JAMMU & KASHMIR     68       34        34\n```\n:::\n\n```{.r .cell-code}\nsummary(nodes_ig)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     name               degree        indegree    outdegree \n Length:35          Min.   :56.0   Min.   :28   Min.   :26  \n Class :character   1st Qu.:64.5   1st Qu.:32   1st Qu.:33  \n Mode  :character   Median :68.0   Median :34   Median :34  \n                    Mean   :66.1   Mean   :33   Mean   :33  \n                    3rd Qu.:68.0   3rd Qu.:34   3rd Qu.:34  \n                    Max.   :68.0   Max.   :34   Max.   :34  \n```\n:::\n\n```{.r .cell-code}\ndegree_to_w<-nodes_to_w %>% arrange(desc(totdegree))%>%slice(1:10)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in arrange(., desc(totdegree)): object 'nodes_to_w' not found\n```\n:::\n\n```{.r .cell-code}\nggplot(degree_to_w, aes(x=reorder(name,totdegree),y=totdegree))+ \n  geom_bar(stat = \"identity\")+\n  coord_flip()+\n  geom_text(aes(label=round(totdegree,digits=2)),position=position_stack(vjust=0.5))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ggplot(degree_to_w, aes(x = reorder(name, totdegree), y = totdegree)): object 'degree_to_w' not found\n```\n:::\n\n```{.r .cell-code}\ndegree(mig.ig, mode = 'in')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n         HIMACHAL PRADESH                    PUNJAB                CHANDIGARH \n                       34                        34                        34 \n              UTTARAKHAND                   HARYANA              NCT OF DELHI \n                       34                        34                        34 \n                RAJASTHAN             UTTAR PRADESH                     BIHAR \n                       34                        34                        34 \n                   SIKKIM         ARUNACHAL PRADESH                  NAGALAND \n                       32                        31                        31 \n                  MANIPUR                   MIZORAM                   TRIPURA \n                       31                        31                        33 \n                MEGHALAYA                     ASSAM               WEST BENGAL \n                       30                        33                        34 \n                JHARKHAND                    ODISHA              CHHATTISGARH \n                       34                        33                        34 \n           MADHYA PRADESH                   GUJARAT               DAMAN & DIU \n                       34                        34                        32 \n     DADRA & NAGAR HAVELI               MAHARASHTRA            ANDHRA PRADESH \n                       32                        34                        34 \n                KARNATAKA                       GOA               LAKSHADWEEP \n                       34                        34                        28 \n                   KERALA                TAMIL NADU                PUDUCHERRY \n                       34                        34                        32 \nANDAMAN & NICOBAR ISLANDS           JAMMU & KASHMIR \n                       33                        34 \n```\n:::\n\n```{.r .cell-code}\ndegree(mig.ig, mode = 'out')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n         HIMACHAL PRADESH                    PUNJAB                CHANDIGARH \n                       33                        34                        33 \n              UTTARAKHAND                   HARYANA              NCT OF DELHI \n                       34                        34                        33 \n                RAJASTHAN             UTTAR PRADESH                     BIHAR \n                       34                        34                        34 \n                   SIKKIM         ARUNACHAL PRADESH                  NAGALAND \n                       31                        34                        33 \n                  MANIPUR                   MIZORAM                   TRIPURA \n                       33                        33                        34 \n                MEGHALAYA                     ASSAM               WEST BENGAL \n                       32                        34                        34 \n                JHARKHAND                    ODISHA              CHHATTISGARH \n                       34                        34                        34 \n           MADHYA PRADESH                   GUJARAT               DAMAN & DIU \n                       34                        34                        26 \n     DADRA & NAGAR HAVELI               MAHARASHTRA            ANDHRA PRADESH \n                       27                        34                        34 \n                KARNATAKA                       GOA               LAKSHADWEEP \n                       34                        34                        28 \n                   KERALA                TAMIL NADU                PUDUCHERRY \n                       34                        34                        32 \nANDAMAN & NICOBAR ISLANDS           JAMMU & KASHMIR \n                       34                        34 \n```\n:::\n\n```{.r .cell-code}\nnodes %>% count(out.degree,sort=TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  out.degree  n\n1         34 23\n2         33  6\n3         32  2\n4         26  1\n5         27  1\n6         28  1\n7         31  1\n```\n:::\n\n```{.r .cell-code}\nnodes %>% arrange(desc(out.degree))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                                               name all.degree out.degree\nPUNJAB                                       PUNJAB         68         34\nUTTARAKHAND                             UTTARAKHAND         68         34\nHARYANA                                     HARYANA         68         34\nRAJASTHAN                                 RAJASTHAN         68         34\nUTTAR PRADESH                         UTTAR PRADESH         68         34\nBIHAR                                         BIHAR         68         34\nARUNACHAL PRADESH                 ARUNACHAL PRADESH         65         34\nTRIPURA                                     TRIPURA         67         34\nASSAM                                         ASSAM         67         34\nWEST BENGAL                             WEST BENGAL         68         34\nJHARKHAND                                 JHARKHAND         68         34\nODISHA                                       ODISHA         67         34\nCHHATTISGARH                           CHHATTISGARH         68         34\nMADHYA PRADESH                       MADHYA PRADESH         68         34\nGUJARAT                                     GUJARAT         68         34\nMAHARASHTRA                             MAHARASHTRA         68         34\nANDHRA PRADESH                       ANDHRA PRADESH         68         34\nKARNATAKA                                 KARNATAKA         68         34\nGOA                                             GOA         68         34\nKERALA                                       KERALA         68         34\nTAMIL NADU                               TAMIL NADU         68         34\nANDAMAN & NICOBAR ISLANDS ANDAMAN & NICOBAR ISLANDS         67         34\nJAMMU & KASHMIR                     JAMMU & KASHMIR         68         34\nHIMACHAL PRADESH                   HIMACHAL PRADESH         67         33\nCHANDIGARH                               CHANDIGARH         67         33\nNCT OF DELHI                           NCT OF DELHI         67         33\nNAGALAND                                   NAGALAND         64         33\nMANIPUR                                     MANIPUR         64         33\nMIZORAM                                     MIZORAM         64         33\nMEGHALAYA                                 MEGHALAYA         62         32\nPUDUCHERRY                               PUDUCHERRY         64         32\nSIKKIM                                       SIKKIM         63         31\nLAKSHADWEEP                             LAKSHADWEEP         56         28\nDADRA & NAGAR HAVELI           DADRA & NAGAR HAVELI         59         27\nDAMAN & DIU                             DAMAN & DIU         58         26\n                          in.degree total.degree eigen.centrality\nPUNJAB                           34           68        0.2182487\nUTTARAKHAND                      34           68        0.1791319\nHARYANA                          34           68        0.2954332\nRAJASTHAN                        34           68        0.2443123\nUTTAR PRADESH                    34           68        1.0000000\nBIHAR                            34           68        0.4569187\nARUNACHAL PRADESH                31           65        0.0035583\nTRIPURA                          33           67        0.0036625\nASSAM                            33           67        0.0289619\nWEST BENGAL                      34           68        0.2146500\nJHARKHAND                        34           68        0.1477346\nODISHA                           33           67        0.0773249\nCHHATTISGARH                     34           68        0.0956588\nMADHYA PRADESH                   34           68        0.2638492\nGUJARAT                          34           68        0.3841171\nMAHARASHTRA                      34           68        0.7964827\nANDHRA PRADESH                   34           68        0.1087424\nKARNATAKA                        34           68        0.1992239\nGOA                              34           68        0.0189033\nKERALA                           34           68        0.0672128\nTAMIL NADU                       34           68        0.0840432\nANDAMAN & NICOBAR ISLANDS        33           67        0.0027015\nJAMMU & KASHMIR                  34           68        0.0140548\nHIMACHAL PRADESH                 34           67        0.0425002\nCHANDIGARH                       34           67        0.0536582\nNCT OF DELHI                     34           67        0.6528994\nNAGALAND                         31           64        0.0029441\nMANIPUR                          31           64        0.0017271\nMIZORAM                          31           64        0.0006438\nMEGHALAYA                        30           62        0.0024481\nPUDUCHERRY                       32           64        0.0033799\nSIKKIM                           32           63        0.0029287\nLAKSHADWEEP                      28           56        0.0002634\nDADRA & NAGAR HAVELI             32           59        0.0158408\nDAMAN & DIU                      32           58        0.0185498\n```\n:::\n\n```{.r .cell-code}\nnodes %>% count(in.degree,sort=TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  in.degree  n\n1        34 21\n2        31  4\n3        32  4\n4        33  4\n5        28  1\n6        30  1\n```\n:::\n\n```{.r .cell-code}\nnodes %>% arrange(desc(in.degree))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                                               name all.degree out.degree\nHIMACHAL PRADESH                   HIMACHAL PRADESH         67         33\nPUNJAB                                       PUNJAB         68         34\nCHANDIGARH                               CHANDIGARH         67         33\nUTTARAKHAND                             UTTARAKHAND         68         34\nHARYANA                                     HARYANA         68         34\nNCT OF DELHI                           NCT OF DELHI         67         33\nRAJASTHAN                                 RAJASTHAN         68         34\nUTTAR PRADESH                         UTTAR PRADESH         68         34\nBIHAR                                         BIHAR         68         34\nWEST BENGAL                             WEST BENGAL         68         34\nJHARKHAND                                 JHARKHAND         68         34\nCHHATTISGARH                           CHHATTISGARH         68         34\nMADHYA PRADESH                       MADHYA PRADESH         68         34\nGUJARAT                                     GUJARAT         68         34\nMAHARASHTRA                             MAHARASHTRA         68         34\nANDHRA PRADESH                       ANDHRA PRADESH         68         34\nKARNATAKA                                 KARNATAKA         68         34\nGOA                                             GOA         68         34\nKERALA                                       KERALA         68         34\nTAMIL NADU                               TAMIL NADU         68         34\nJAMMU & KASHMIR                     JAMMU & KASHMIR         68         34\nTRIPURA                                     TRIPURA         67         34\nASSAM                                         ASSAM         67         34\nODISHA                                       ODISHA         67         34\nANDAMAN & NICOBAR ISLANDS ANDAMAN & NICOBAR ISLANDS         67         34\nSIKKIM                                       SIKKIM         63         31\nDAMAN & DIU                             DAMAN & DIU         58         26\nDADRA & NAGAR HAVELI           DADRA & NAGAR HAVELI         59         27\nPUDUCHERRY                               PUDUCHERRY         64         32\nARUNACHAL PRADESH                 ARUNACHAL PRADESH         65         34\nNAGALAND                                   NAGALAND         64         33\nMANIPUR                                     MANIPUR         64         33\nMIZORAM                                     MIZORAM         64         33\nMEGHALAYA                                 MEGHALAYA         62         32\nLAKSHADWEEP                             LAKSHADWEEP         56         28\n                          in.degree total.degree eigen.centrality\nHIMACHAL PRADESH                 34           67        0.0425002\nPUNJAB                           34           68        0.2182487\nCHANDIGARH                       34           67        0.0536582\nUTTARAKHAND                      34           68        0.1791319\nHARYANA                          34           68        0.2954332\nNCT OF DELHI                     34           67        0.6528994\nRAJASTHAN                        34           68        0.2443123\nUTTAR PRADESH                    34           68        1.0000000\nBIHAR                            34           68        0.4569187\nWEST BENGAL                      34           68        0.2146500\nJHARKHAND                        34           68        0.1477346\nCHHATTISGARH                     34           68        0.0956588\nMADHYA PRADESH                   34           68        0.2638492\nGUJARAT                          34           68        0.3841171\nMAHARASHTRA                      34           68        0.7964827\nANDHRA PRADESH                   34           68        0.1087424\nKARNATAKA                        34           68        0.1992239\nGOA                              34           68        0.0189033\nKERALA                           34           68        0.0672128\nTAMIL NADU                       34           68        0.0840432\nJAMMU & KASHMIR                  34           68        0.0140548\nTRIPURA                          33           67        0.0036625\nASSAM                            33           67        0.0289619\nODISHA                           33           67        0.0773249\nANDAMAN & NICOBAR ISLANDS        33           67        0.0027015\nSIKKIM                           32           63        0.0029287\nDAMAN & DIU                      32           58        0.0185498\nDADRA & NAGAR HAVELI             32           59        0.0158408\nPUDUCHERRY                       32           64        0.0033799\nARUNACHAL PRADESH                31           65        0.0035583\nNAGALAND                         31           64        0.0029441\nMANIPUR                          31           64        0.0017271\nMIZORAM                          31           64        0.0006438\nMEGHALAYA                        30           62        0.0024481\nLAKSHADWEEP                      28           56        0.0002634\n```\n:::\n\n```{.r .cell-code}\n#nodes %>% arrange(desc(bonacich)\nnodes %>% count(cons,sort=TRUE)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in `count()`:\n! Must group by variables found in `.data`.\n✖ Column `cons` is not found.\n```\n:::\n\n```{.r .cell-code}\nnodes %>% arrange(desc(cons))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in `arrange()`:\nℹ In argument: `..1 = cons`.\nCaused by error:\n! object 'cons' not found\n```\n:::\n\n```{.r .cell-code}\ntop_eigen<-nodes %>% arrange(desc(eigen.centrality))%>%slice(1:10)\nggplot(top_eigen, aes(x=reorder(name,eigen.centrality),y=eigen.centrality))+ \n  geom_bar(stat = \"identity\")+\n  coord_flip()+\n  geom_text(aes(label=round(eigen.centrality,digits=2)),position=position_stack(vjust=0.5))\n```\n\n::: {.cell-output-display}\n![](Migration-Networks-some-old-stuff-or-things-to-get-rid-of_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(nodes, aes(x=reorder(name,cons),y=cons))+ \n  geom_bar(stat = \"identity\")+\n  coord_flip()+\n  geom_text(aes(label=round(cons,digits=2)),position=position_stack(vjust=0.5))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in `geom_bar()`:\n! Problem while computing aesthetics.\nℹ Error occurred in the 1st layer.\nCaused by error in `tapply()`:\n! object 'cons' not found\n```\n:::\n\n```{.r .cell-code}\ntop_eigen2<-nodes_st %>% arrange(desc(eigen))%>%slice(1:10)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in arrange(., desc(eigen)): object 'nodes_st' not found\n```\n:::\n\n```{.r .cell-code}\nggplot(top_eigen2, aes(x=reorder(name,eigen),y=eigen))+ \n  geom_bar(stat = \"identity\")+\n  coord_flip()+\n  geom_text(aes(label=round(eigen,digits=2)),position=position_stack(vjust=0.5))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ggplot(top_eigen2, aes(x = reorder(name, eigen), y = eigen)): object 'top_eigen2' not found\n```\n:::\n\n```{.r .cell-code}\nnodes_to_w %>% count(outdegree,sort=TRUE)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in count(., outdegree, sort = TRUE): object 'nodes_to_w' not found\n```\n:::\n\n```{.r .cell-code}\nnodes_to_w %>% arrange(desc(outdegree))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in arrange(., desc(outdegree)): object 'nodes_to_w' not found\n```\n:::\n\n```{.r .cell-code}\nnodes_to_w %>% count(indegree,sort=TRUE)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in count(., indegree, sort = TRUE): object 'nodes_to_w' not found\n```\n:::\n\n```{.r .cell-code}\nnodes_to_w %>% arrange(desc(indegree))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in arrange(., desc(indegree)): object 'nodes_to_w' not found\n```\n:::\n\n```{.r .cell-code}\nout_to_w<-nodes_to_w %>% arrange(desc(outdegree))%>%slice(1:10)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in arrange(., desc(outdegree)): object 'nodes_to_w' not found\n```\n:::\n\n```{.r .cell-code}\nggplot(out_to_w, aes(x=reorder(name,outdegree),y=outdegree))+ \n  geom_bar(stat = \"identity\")+\n  coord_flip()+\n  geom_text(aes(label=round(outdegree,digits=2)),position=position_stack(vjust=0.5))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ggplot(out_to_w, aes(x = reorder(name, outdegree), y = outdegree)): object 'out_to_w' not found\n```\n:::\n\n```{.r .cell-code}\nin_to_w<-nodes_to_w %>% arrange(desc(indegree))%>%slice(1:10)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in arrange(., desc(indegree)): object 'nodes_to_w' not found\n```\n:::\n\n```{.r .cell-code}\nggplot(in_to_w, aes(x=reorder(name,indegree),y=indegree))+ \n  geom_bar(stat = \"identity\")+\n  coord_flip()+\n  geom_text(aes(label=round(indegree,digits=2)),position=position_stack(vjust=0.5))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ggplot(in_to_w, aes(x = reorder(name, indegree), y = indegree)): object 'in_to_w' not found\n```\n:::\n\n```{.r .cell-code}\ndegree_to_w<-nodes_to_w %>% arrange(desc(degree))%>%slice(1:10)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in arrange(., desc(degree)): object 'nodes_to_w' not found\n```\n:::\n\n```{.r .cell-code}\nggplot(degree_to_w, aes(x=reorder(name,degree),y=degree))+ \n  geom_bar(stat = \"identity\")+\n  coord_flip()+\n  geom_text(aes(label=round(degree,digits=2)),position=position_stack(vjust=0.5))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ggplot(degree_to_w, aes(x = reorder(name, degree), y = degree)): object 'degree_to_w' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstrength(mig.ig, mode = \"in\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n         HIMACHAL PRADESH                    PUNJAB                CHANDIGARH \n                   109193                    589553                    200291 \n              UTTARAKHAND                   HARYANA              NCT OF DELHI \n                   291227                    783336                   1934010 \n                RAJASTHAN             UTTAR PRADESH                     BIHAR \n                   378820                    526279                     57155 \n                   SIKKIM         ARUNACHAL PRADESH                  NAGALAND \n                    19542                     49370                     32987 \n                  MANIPUR                   MIZORAM                   TRIPURA \n                     2223                     11713                     22686 \n                MEGHALAYA                     ASSAM               WEST BENGAL \n                    20453                     81563                    468773 \n                JHARKHAND                    ODISHA              CHHATTISGARH \n                   414970                    122747                    298921 \n           MADHYA PRADESH                   GUJARAT               DAMAN & DIU \n                   438802                   1121744                     70048 \n     DADRA & NAGAR HAVELI               MAHARASHTRA            ANDHRA PRADESH \n                    57043                   2786767                    281141 \n                KARNATAKA                       GOA               LAKSHADWEEP \n                   781998                     73690                      2259 \n                   KERALA                TAMIL NADU                PUDUCHERRY \n                   154749                    263085                     50961 \nANDAMAN & NICOBAR ISLANDS           JAMMU & KASHMIR \n                    27723                     27627 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstrength(mig.ig, mode = \"out\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n         HIMACHAL PRADESH                    PUNJAB                CHANDIGARH \n                   110754                    285476                     32200 \n              UTTARAKHAND                   HARYANA              NCT OF DELHI \n                   232105                    310740                    246504 \n                RAJASTHAN             UTTAR PRADESH                     BIHAR \n                   666821                   3734502                   2265021 \n                   SIKKIM         ARUNACHAL PRADESH                  NAGALAND \n                     3035                      4540                      6441 \n                  MANIPUR                   MIZORAM                   TRIPURA \n                    16723                      2498                     13962 \n                MEGHALAYA                     ASSAM               WEST BENGAL \n                    10813                    161127                    585424 \n                JHARKHAND                    ODISHA              CHHATTISGARH \n                   338620                    387499                    156201 \n           MADHYA PRADESH                   GUJARAT               DAMAN & DIU \n                   534274                    251658                      1953 \n     DADRA & NAGAR HAVELI               MAHARASHTRA            ANDHRA PRADESH \n                     1305                    464419                    421134 \n                KARNATAKA                       GOA               LAKSHADWEEP \n                   432062                     16471                       894 \n                   KERALA                TAMIL NADU                PUDUCHERRY \n                   319571                    473443                     13897 \nANDAMAN & NICOBAR ISLANDS           JAMMU & KASHMIR \n                     2712                     48650 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(strength(mig.ig, mode = \"in\"),strength(mig.ig, mode = \"out\"))\n```\n\n::: {.cell-output-display}\n![](Migration-Networks-some-old-stuff-or-things-to-get-rid-of_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n\n```{.r .cell-code}\nstrength(mig.ig, mode = \"in\") / strength(mig.ig, mode = \"out\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n         HIMACHAL PRADESH                    PUNJAB                CHANDIGARH \n                  0.98591                   2.06516                   6.22022 \n              UTTARAKHAND                   HARYANA              NCT OF DELHI \n                  1.25472                   2.52087                   7.84576 \n                RAJASTHAN             UTTAR PRADESH                     BIHAR \n                  0.56810                   0.14092                   0.02523 \n                   SIKKIM         ARUNACHAL PRADESH                  NAGALAND \n                  6.43888                  10.87445                   5.12141 \n                  MANIPUR                   MIZORAM                   TRIPURA \n                  0.13293                   4.68895                   1.62484 \n                MEGHALAYA                     ASSAM               WEST BENGAL \n                  1.89152                   0.50620                   0.80074 \n                JHARKHAND                    ODISHA              CHHATTISGARH \n                  1.22547                   0.31677                   1.91369 \n           MADHYA PRADESH                   GUJARAT               DAMAN & DIU \n                  0.82131                   4.45741                  35.86687 \n     DADRA & NAGAR HAVELI               MAHARASHTRA            ANDHRA PRADESH \n                 43.71111                   6.00054                   0.66758 \n                KARNATAKA                       GOA               LAKSHADWEEP \n                  1.80992                   4.47392                   2.52685 \n                   KERALA                TAMIL NADU                PUDUCHERRY \n                  0.48424                   0.55568                   3.66705 \nANDAMAN & NICOBAR ISLANDS           JAMMU & KASHMIR \n                 10.22235                   0.56787 \n```\n:::\n:::\n\n## Density\n\n::: {.cell}\n\n```{.r .cell-code}\ngraph.density(mig.ig,loops=TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.9437\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#V(mig.ig)$weight\nprint(\"Number of vertices\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Number of vertices\"\n```\n:::\n\n```{.r .cell-code}\nvcount(mig_to_work_ig)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in \"igraph\" %in% class(graph): object 'mig_to_work_ig' not found\n```\n:::\n\n```{.r .cell-code}\nprint(\"Number of edges\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Number of edges\"\n```\n:::\n\n```{.r .cell-code}\necount(mig_to_work_ig)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in \"igraph\" %in% class(graph): object 'mig_to_work_ig' not found\n```\n:::\n\n```{.r .cell-code}\n#E(mig_to_work_ig)$weight\nmax(E(mig_to_work_ig)$weight)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in \"igraph\" %in% class(graph): object 'mig_to_work_ig' not found\n```\n:::\n\n```{.r .cell-code}\nmin(E(mig_to_work_ig)$weight)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in \"igraph\" %in% class(graph): object 'mig_to_work_ig' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#inspect density of between/within community ties\nprint(blockmodel(mig_work_stat,workto.wt$membership)$block.model, digits=2)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in blockmodel(mig_work_stat, workto.wt$membership): could not find function \"blockmodel\"\n```\n:::\n\n```{.r .cell-code}\n#inspect density of between/within community ties\nprint(blockmodel(mig_to_mar_stat,marto.wt$membership)$block.model, digits=2)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in blockmodel(mig_to_mar_stat, marto.wt$membership): could not find function \"blockmodel\"\n```\n:::\n\n```{.r .cell-code}\n#inspect density of between/within community ties\nprint(blockmodel(mig_to_work_stat,workto.spin$membership)$block.model, digits=2)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in blockmodel(mig_to_work_stat, workto.spin$membership): could not find function \"blockmodel\"\n```\n:::\n\n```{.r .cell-code}\n#inspect density of between/within community ties\nprint(blockmodel(mig_to_mar_stat,marto.spin$membership)$block.model, digits=2)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in blockmodel(mig_to_mar_stat, marto.spin$membership): could not find function \"blockmodel\"\n```\n:::\n:::\n\n\n## Transitivity\n## Why is transitivity zero?\n\n::: {.cell}\n\n```{.r .cell-code}\n#Global\ntransitivity(mig.ig, type=\"global\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.9919\n```\n:::\n\n```{.r .cell-code}\n##Average local clustering coefficient\ntransitivity(mig.ig, type=\"average\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.9919\n```\n:::\n:::\n\n\n## Centralization\n\n::: {.cell}\n\n```{.r .cell-code}\nevcent(mig.ig)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$vector\n         HIMACHAL PRADESH                    PUNJAB                CHANDIGARH \n                0.0425002                 0.2182487                 0.0536582 \n              UTTARAKHAND                   HARYANA              NCT OF DELHI \n                0.1791319                 0.2954332                 0.6528994 \n                RAJASTHAN             UTTAR PRADESH                     BIHAR \n                0.2443123                 1.0000000                 0.4569187 \n                   SIKKIM         ARUNACHAL PRADESH                  NAGALAND \n                0.0029287                 0.0035583                 0.0029441 \n                  MANIPUR                   MIZORAM                   TRIPURA \n                0.0017271                 0.0006438                 0.0036625 \n                MEGHALAYA                     ASSAM               WEST BENGAL \n                0.0024481                 0.0289619                 0.2146500 \n                JHARKHAND                    ODISHA              CHHATTISGARH \n                0.1477346                 0.0773249                 0.0956588 \n           MADHYA PRADESH                   GUJARAT               DAMAN & DIU \n                0.2638492                 0.3841171                 0.0185498 \n     DADRA & NAGAR HAVELI               MAHARASHTRA            ANDHRA PRADESH \n                0.0158408                 0.7964827                 0.1087424 \n                KARNATAKA                       GOA               LAKSHADWEEP \n                0.1992239                 0.0189033                 0.0002634 \n                   KERALA                TAMIL NADU                PUDUCHERRY \n                0.0672128                 0.0840432                 0.0033799 \nANDAMAN & NICOBAR ISLANDS           JAMMU & KASHMIR \n                0.0027015                 0.0140548 \n\n$value\n[1] 2077984\n\n$options\n$options$bmat\n[1] \"I\"\n\n$options$n\n[1] 35\n\n$options$which\n[1] \"LA\"\n\n$options$nev\n[1] 1\n\n$options$tol\n[1] 0\n\n$options$ncv\n[1] 0\n\n$options$ldv\n[1] 0\n\n$options$ishift\n[1] 1\n\n$options$maxiter\n[1] 3000\n\n$options$nb\n[1] 1\n\n$options$mode\n[1] 1\n\n$options$start\n[1] 1\n\n$options$sigma\n[1] 0\n\n$options$sigmai\n[1] 0\n\n$options$info\n[1] 0\n\n$options$iter\n[1] 1\n\n$options$nconv\n[1] 1\n\n$options$numop\n[1] 17\n\n$options$numopb\n[1] 0\n\n$options$numreo\n[1] 15\n```\n:::\n\n```{.r .cell-code}\nevcent(mig.ig)$vector\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n         HIMACHAL PRADESH                    PUNJAB                CHANDIGARH \n                0.0425002                 0.2182487                 0.0536582 \n              UTTARAKHAND                   HARYANA              NCT OF DELHI \n                0.1791319                 0.2954332                 0.6528994 \n                RAJASTHAN             UTTAR PRADESH                     BIHAR \n                0.2443123                 1.0000000                 0.4569187 \n                   SIKKIM         ARUNACHAL PRADESH                  NAGALAND \n                0.0029287                 0.0035583                 0.0029441 \n                  MANIPUR                   MIZORAM                   TRIPURA \n                0.0017271                 0.0006438                 0.0036625 \n                MEGHALAYA                     ASSAM               WEST BENGAL \n                0.0024481                 0.0289619                 0.2146500 \n                JHARKHAND                    ODISHA              CHHATTISGARH \n                0.1477346                 0.0773249                 0.0956588 \n           MADHYA PRADESH                   GUJARAT               DAMAN & DIU \n                0.2638492                 0.3841171                 0.0185498 \n     DADRA & NAGAR HAVELI               MAHARASHTRA            ANDHRA PRADESH \n                0.0158408                 0.7964827                 0.1087424 \n                KARNATAKA                       GOA               LAKSHADWEEP \n                0.1992239                 0.0189033                 0.0002634 \n                   KERALA                TAMIL NADU                PUDUCHERRY \n                0.0672128                 0.0840432                 0.0033799 \nANDAMAN & NICOBAR ISLANDS           JAMMU & KASHMIR \n                0.0027015                 0.0140548 \n```\n:::\n\n```{.r .cell-code}\ncentr_degree(mig.ig, loops = TRUE, mode = \"in\")$centralization\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.02857\n```\n:::\n\n```{.r .cell-code}\ncentr_degree(mig.ig, loops = TRUE, mode = \"out\")$centralization\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.02857\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwc.mig.ig <- cluster_walktrap(mig.ig)\nwc.mig.ig\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nIGRAPH clustering walktrap, groups: 3, mod: 0.13\n+ groups:\n  $`1`\n  [1] \"ARUNACHAL PRADESH\" \"NAGALAND\"          \"MANIPUR\"          \n  [4] \"MIZORAM\"           \"TRIPURA\"           \"MEGHALAYA\"        \n  [7] \"ASSAM\"            \n  \n  $`2`\n  [1] \"ANDHRA PRADESH\"            \"KARNATAKA\"                \n  [3] \"GOA\"                       \"LAKSHADWEEP\"              \n  [5] \"KERALA\"                    \"TAMIL NADU\"               \n  [7] \"PUDUCHERRY\"                \"ANDAMAN & NICOBAR ISLANDS\"\n  + ... omitted several groups/vertices\n```\n:::\n\n```{.r .cell-code}\nmember <- membership(wc.mig.ig)\nmember\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n         HIMACHAL PRADESH                    PUNJAB                CHANDIGARH \n                        3                         3                         3 \n              UTTARAKHAND                   HARYANA              NCT OF DELHI \n                        3                         3                         3 \n                RAJASTHAN             UTTAR PRADESH                     BIHAR \n                        3                         3                         3 \n                   SIKKIM         ARUNACHAL PRADESH                  NAGALAND \n                        3                         1                         1 \n                  MANIPUR                   MIZORAM                   TRIPURA \n                        1                         1                         1 \n                MEGHALAYA                     ASSAM               WEST BENGAL \n                        1                         1                         3 \n                JHARKHAND                    ODISHA              CHHATTISGARH \n                        3                         3                         3 \n           MADHYA PRADESH                   GUJARAT               DAMAN & DIU \n                        3                         3                         3 \n     DADRA & NAGAR HAVELI               MAHARASHTRA            ANDHRA PRADESH \n                        3                         3                         2 \n                KARNATAKA                       GOA               LAKSHADWEEP \n                        2                         2                         2 \n                   KERALA                TAMIL NADU                PUDUCHERRY \n                        2                         2                         2 \nANDAMAN & NICOBAR ISLANDS           JAMMU & KASHMIR \n                        2                         3 \n```\n:::\n\n```{.r .cell-code}\nnodes$member <- member\ntable(member)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nmember\n 1  2  3 \n 7  8 20 \n```\n:::\n\n```{.r .cell-code}\ntable(member) %>% melt %>% ggplot + geom_bar(aes(x = reorder(member, - value), y = value, fill = factor(member)), stat = 'identity')\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in melt(.): could not find function \"melt\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncorrplot :: corrplot(cor(nodes[ , -1]), title = 'Correlation Plot')\n```\n\n::: {.cell-output-display}\n![](Migration-Networks-some-old-stuff-or-things-to-get-rid-of_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(kableExtra)\nkableExtra :: kable(apply(nodes[ , -1], 2, function (x) nodes$name[order(x, decreasing = TRUE)][1 : 10]))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> all.degree </th>\n   <th style=\"text-align:left;\"> out.degree </th>\n   <th style=\"text-align:left;\"> in.degree </th>\n   <th style=\"text-align:left;\"> total.degree </th>\n   <th style=\"text-align:left;\"> eigen.centrality </th>\n   <th style=\"text-align:left;\"> member </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> PUNJAB </td>\n   <td style=\"text-align:left;\"> PUNJAB </td>\n   <td style=\"text-align:left;\"> HIMACHAL PRADESH </td>\n   <td style=\"text-align:left;\"> PUNJAB </td>\n   <td style=\"text-align:left;\"> UTTAR PRADESH </td>\n   <td style=\"text-align:left;\"> HIMACHAL PRADESH </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> UTTARAKHAND </td>\n   <td style=\"text-align:left;\"> UTTARAKHAND </td>\n   <td style=\"text-align:left;\"> PUNJAB </td>\n   <td style=\"text-align:left;\"> UTTARAKHAND </td>\n   <td style=\"text-align:left;\"> MAHARASHTRA </td>\n   <td style=\"text-align:left;\"> PUNJAB </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> HARYANA </td>\n   <td style=\"text-align:left;\"> HARYANA </td>\n   <td style=\"text-align:left;\"> CHANDIGARH </td>\n   <td style=\"text-align:left;\"> HARYANA </td>\n   <td style=\"text-align:left;\"> NCT OF DELHI </td>\n   <td style=\"text-align:left;\"> CHANDIGARH </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> RAJASTHAN </td>\n   <td style=\"text-align:left;\"> RAJASTHAN </td>\n   <td style=\"text-align:left;\"> UTTARAKHAND </td>\n   <td style=\"text-align:left;\"> RAJASTHAN </td>\n   <td style=\"text-align:left;\"> BIHAR </td>\n   <td style=\"text-align:left;\"> UTTARAKHAND </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> UTTAR PRADESH </td>\n   <td style=\"text-align:left;\"> UTTAR PRADESH </td>\n   <td style=\"text-align:left;\"> HARYANA </td>\n   <td style=\"text-align:left;\"> UTTAR PRADESH </td>\n   <td style=\"text-align:left;\"> GUJARAT </td>\n   <td style=\"text-align:left;\"> HARYANA </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> BIHAR </td>\n   <td style=\"text-align:left;\"> BIHAR </td>\n   <td style=\"text-align:left;\"> NCT OF DELHI </td>\n   <td style=\"text-align:left;\"> BIHAR </td>\n   <td style=\"text-align:left;\"> HARYANA </td>\n   <td style=\"text-align:left;\"> NCT OF DELHI </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> WEST BENGAL </td>\n   <td style=\"text-align:left;\"> ARUNACHAL PRADESH </td>\n   <td style=\"text-align:left;\"> RAJASTHAN </td>\n   <td style=\"text-align:left;\"> WEST BENGAL </td>\n   <td style=\"text-align:left;\"> MADHYA PRADESH </td>\n   <td style=\"text-align:left;\"> RAJASTHAN </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> JHARKHAND </td>\n   <td style=\"text-align:left;\"> TRIPURA </td>\n   <td style=\"text-align:left;\"> UTTAR PRADESH </td>\n   <td style=\"text-align:left;\"> JHARKHAND </td>\n   <td style=\"text-align:left;\"> RAJASTHAN </td>\n   <td style=\"text-align:left;\"> UTTAR PRADESH </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> CHHATTISGARH </td>\n   <td style=\"text-align:left;\"> ASSAM </td>\n   <td style=\"text-align:left;\"> BIHAR </td>\n   <td style=\"text-align:left;\"> CHHATTISGARH </td>\n   <td style=\"text-align:left;\"> PUNJAB </td>\n   <td style=\"text-align:left;\"> BIHAR </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> MADHYA PRADESH </td>\n   <td style=\"text-align:left;\"> WEST BENGAL </td>\n   <td style=\"text-align:left;\"> WEST BENGAL </td>\n   <td style=\"text-align:left;\"> MADHYA PRADESH </td>\n   <td style=\"text-align:left;\"> WEST BENGAL </td>\n   <td style=\"text-align:left;\"> SIKKIM </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstrength(mig.ig, mode = \"in\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n         HIMACHAL PRADESH                    PUNJAB                CHANDIGARH \n                   109193                    589553                    200291 \n              UTTARAKHAND                   HARYANA              NCT OF DELHI \n                   291227                    783336                   1934010 \n                RAJASTHAN             UTTAR PRADESH                     BIHAR \n                   378820                    526279                     57155 \n                   SIKKIM         ARUNACHAL PRADESH                  NAGALAND \n                    19542                     49370                     32987 \n                  MANIPUR                   MIZORAM                   TRIPURA \n                     2223                     11713                     22686 \n                MEGHALAYA                     ASSAM               WEST BENGAL \n                    20453                     81563                    468773 \n                JHARKHAND                    ODISHA              CHHATTISGARH \n                   414970                    122747                    298921 \n           MADHYA PRADESH                   GUJARAT               DAMAN & DIU \n                   438802                   1121744                     70048 \n     DADRA & NAGAR HAVELI               MAHARASHTRA            ANDHRA PRADESH \n                    57043                   2786767                    281141 \n                KARNATAKA                       GOA               LAKSHADWEEP \n                   781998                     73690                      2259 \n                   KERALA                TAMIL NADU                PUDUCHERRY \n                   154749                    263085                     50961 \nANDAMAN & NICOBAR ISLANDS           JAMMU & KASHMIR \n                    27723                     27627 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstrength(mig.ig, mode = \"out\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n         HIMACHAL PRADESH                    PUNJAB                CHANDIGARH \n                   110754                    285476                     32200 \n              UTTARAKHAND                   HARYANA              NCT OF DELHI \n                   232105                    310740                    246504 \n                RAJASTHAN             UTTAR PRADESH                     BIHAR \n                   666821                   3734502                   2265021 \n                   SIKKIM         ARUNACHAL PRADESH                  NAGALAND \n                     3035                      4540                      6441 \n                  MANIPUR                   MIZORAM                   TRIPURA \n                    16723                      2498                     13962 \n                MEGHALAYA                     ASSAM               WEST BENGAL \n                    10813                    161127                    585424 \n                JHARKHAND                    ODISHA              CHHATTISGARH \n                   338620                    387499                    156201 \n           MADHYA PRADESH                   GUJARAT               DAMAN & DIU \n                   534274                    251658                      1953 \n     DADRA & NAGAR HAVELI               MAHARASHTRA            ANDHRA PRADESH \n                     1305                    464419                    421134 \n                KARNATAKA                       GOA               LAKSHADWEEP \n                   432062                     16471                       894 \n                   KERALA                TAMIL NADU                PUDUCHERRY \n                   319571                    473443                     13897 \nANDAMAN & NICOBAR ISLANDS           JAMMU & KASHMIR \n                     2712                     48650 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(strength(mig.ig, mode = \"in\"),strength(mig.ig, mode = \"out\"))\n```\n\n::: {.cell-output-display}\n![](Migration-Networks-some-old-stuff-or-things-to-get-rid-of_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n\n```{.r .cell-code}\nstrength(mig.ig, mode = \"in\") / strength(mig.ig, mode = \"out\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n         HIMACHAL PRADESH                    PUNJAB                CHANDIGARH \n                  0.98591                   2.06516                   6.22022 \n              UTTARAKHAND                   HARYANA              NCT OF DELHI \n                  1.25472                   2.52087                   7.84576 \n                RAJASTHAN             UTTAR PRADESH                     BIHAR \n                  0.56810                   0.14092                   0.02523 \n                   SIKKIM         ARUNACHAL PRADESH                  NAGALAND \n                  6.43888                  10.87445                   5.12141 \n                  MANIPUR                   MIZORAM                   TRIPURA \n                  0.13293                   4.68895                   1.62484 \n                MEGHALAYA                     ASSAM               WEST BENGAL \n                  1.89152                   0.50620                   0.80074 \n                JHARKHAND                    ODISHA              CHHATTISGARH \n                  1.22547                   0.31677                   1.91369 \n           MADHYA PRADESH                   GUJARAT               DAMAN & DIU \n                  0.82131                   4.45741                  35.86687 \n     DADRA & NAGAR HAVELI               MAHARASHTRA            ANDHRA PRADESH \n                 43.71111                   6.00054                   0.66758 \n                KARNATAKA                       GOA               LAKSHADWEEP \n                  1.80992                   4.47392                   2.52685 \n                   KERALA                TAMIL NADU                PUDUCHERRY \n                  0.48424                   0.55568                   3.66705 \nANDAMAN & NICOBAR ISLANDS           JAMMU & KASHMIR \n                 10.22235                   0.56787 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(\n  mig.ig,\n  layout = layout_in_circle(mig.ig),\n  edge.arrow.mode = 0,\n  vertex.label.color = \"black\",\n  vertex.shape = \"circle\",\n  vertex.label.font = 2,\n  main = \"Migration for work\"\n)\n```\n\n::: {.cell-output-display}\n![](Migration-Networks-some-old-stuff-or-things-to-get-rid-of_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(\n  mig.ig,\n  layout = layout_components(mig.ig),\n  edge.arrow.mode = 0,\n  vertex.label.color = \"black\",\n  vertex.shape = \"circle\",\n  vertex.label.font = 2,\n  main = \"Migration for work\"\n)\n```\n\n::: {.cell-output-display}\n![](Migration-Networks-some-old-stuff-or-things-to-get-rid-of_files/figure-html/unnamed-chunk-28-2.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(mig.ig)\n```\n\n::: {.cell-output-display}\n![](Migration-Networks-some-old-stuff-or-things-to-get-rid-of_files/figure-html/unnamed-chunk-28-3.png){width=672}\n:::\n:::\n\nDegree- number of links that a node has \\\\\nIn degree- Number of links a node receives \\\\\nOut degree- Number of links a node sends \\\\\nSince the average degree is 66 and the most that a node can have in this network is 70, it means that the states are sending or receiving migrants to most of the other states. \\\\\nSo for both in degree and out degree, about 60% of the states have an in-degree/out-degree value of 34. To get a better idea of how many people are migrating- will have to look into the weights.  \\\\\nA node with high eigenvector centrality is connected to significant numbers of other highly central nodes.\\\\\nHere it is very clear UP and Maharashtra have high centrality- UP is a significant sending state, Maharashtra- has Mumbai which attracts many migrants due to it being an economic hub.\n\n## Leading Label Propagation Detection\n# modularity imp to finf\n# how do we know if weight is being taken into account\n\n::: {.cell}\n\n```{.r .cell-code}\n#Run clustering algorithm: leading label\nworkto.lab<-label.propagation.community(mig_to_work_ig)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in \"igraph\" %in% class(graph): object 'mig_to_work_ig' not found\n```\n:::\n\n```{.r .cell-code}\n#Inspect community membership\nigraph::groups(workto.lab)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in igraph::groups(workto.lab): object 'workto.lab' not found\n```\n:::\n\n```{.r .cell-code}\n#inspect density of between/within community ties\nprint(blockmodel(mig_to_work_stat,workto.lab$membership)$block.model, digits=2)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in blockmodel(mig_to_work_stat, workto.lab$membership): could not find function \"blockmodel\"\n```\n:::\n\n```{.r .cell-code}\n#add community membership as a vertex attribute\nnodes_to_w$comm.lab<-workto.lab$membership\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'workto.lab' not found\n```\n:::\n\n```{.r .cell-code}\n#summarize node statistics by community\n#nodes.by.gp(gotmarr.nodes,\"comm.lab\")\n#plot the network with community coloring\nplot(workto.lab,mig_to_work_ig)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in plot(workto.lab, mig_to_work_ig): object 'workto.lab' not found\n```\n:::\n\n```{.r .cell-code}\n#collect modularity scores to compare\n#mods<-(label=modularity(comm.lab))\n#mods\n#compare community partitions\ncompare.algs(alg.a=c(\"workto.wt\"),alg.b=\"comm.lab\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in compare.algs(alg.a = c(\"workto.wt\"), alg.b = \"comm.lab\"): could not find function \"compare.algs\"\n```\n:::\n:::\n\n\n## Centralization\n\n::: {.cell}\n\n```{.r .cell-code}\nevcent(mig.ig)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$vector\n         HIMACHAL PRADESH                    PUNJAB                CHANDIGARH \n                0.0425002                 0.2182487                 0.0536582 \n              UTTARAKHAND                   HARYANA              NCT OF DELHI \n                0.1791319                 0.2954332                 0.6528994 \n                RAJASTHAN             UTTAR PRADESH                     BIHAR \n                0.2443123                 1.0000000                 0.4569187 \n                   SIKKIM         ARUNACHAL PRADESH                  NAGALAND \n                0.0029287                 0.0035583                 0.0029441 \n                  MANIPUR                   MIZORAM                   TRIPURA \n                0.0017271                 0.0006438                 0.0036625 \n                MEGHALAYA                     ASSAM               WEST BENGAL \n                0.0024481                 0.0289619                 0.2146500 \n                JHARKHAND                    ODISHA              CHHATTISGARH \n                0.1477346                 0.0773249                 0.0956588 \n           MADHYA PRADESH                   GUJARAT               DAMAN & DIU \n                0.2638492                 0.3841171                 0.0185498 \n     DADRA & NAGAR HAVELI               MAHARASHTRA            ANDHRA PRADESH \n                0.0158408                 0.7964827                 0.1087424 \n                KARNATAKA                       GOA               LAKSHADWEEP \n                0.1992239                 0.0189033                 0.0002634 \n                   KERALA                TAMIL NADU                PUDUCHERRY \n                0.0672128                 0.0840432                 0.0033799 \nANDAMAN & NICOBAR ISLANDS           JAMMU & KASHMIR \n                0.0027015                 0.0140548 \n\n$value\n[1] 2077984\n\n$options\n$options$bmat\n[1] \"I\"\n\n$options$n\n[1] 35\n\n$options$which\n[1] \"LA\"\n\n$options$nev\n[1] 1\n\n$options$tol\n[1] 0\n\n$options$ncv\n[1] 0\n\n$options$ldv\n[1] 0\n\n$options$ishift\n[1] 1\n\n$options$maxiter\n[1] 3000\n\n$options$nb\n[1] 1\n\n$options$mode\n[1] 1\n\n$options$start\n[1] 1\n\n$options$sigma\n[1] 0\n\n$options$sigmai\n[1] 0\n\n$options$info\n[1] 0\n\n$options$iter\n[1] 1\n\n$options$nconv\n[1] 1\n\n$options$numop\n[1] 17\n\n$options$numopb\n[1] 0\n\n$options$numreo\n[1] 15\n```\n:::\n\n```{.r .cell-code}\nevcent(mig.ig)$vector\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n         HIMACHAL PRADESH                    PUNJAB                CHANDIGARH \n                0.0425002                 0.2182487                 0.0536582 \n              UTTARAKHAND                   HARYANA              NCT OF DELHI \n                0.1791319                 0.2954332                 0.6528994 \n                RAJASTHAN             UTTAR PRADESH                     BIHAR \n                0.2443123                 1.0000000                 0.4569187 \n                   SIKKIM         ARUNACHAL PRADESH                  NAGALAND \n                0.0029287                 0.0035583                 0.0029441 \n                  MANIPUR                   MIZORAM                   TRIPURA \n                0.0017271                 0.0006438                 0.0036625 \n                MEGHALAYA                     ASSAM               WEST BENGAL \n                0.0024481                 0.0289619                 0.2146500 \n                JHARKHAND                    ODISHA              CHHATTISGARH \n                0.1477346                 0.0773249                 0.0956588 \n           MADHYA PRADESH                   GUJARAT               DAMAN & DIU \n                0.2638492                 0.3841171                 0.0185498 \n     DADRA & NAGAR HAVELI               MAHARASHTRA            ANDHRA PRADESH \n                0.0158408                 0.7964827                 0.1087424 \n                KARNATAKA                       GOA               LAKSHADWEEP \n                0.1992239                 0.0189033                 0.0002634 \n                   KERALA                TAMIL NADU                PUDUCHERRY \n                0.0672128                 0.0840432                 0.0033799 \nANDAMAN & NICOBAR ISLANDS           JAMMU & KASHMIR \n                0.0027015                 0.0140548 \n```\n:::\n\n```{.r .cell-code}\ncentr_degree(mig.ig, loops = TRUE, mode = \"in\")$centralization\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.02857\n```\n:::\n\n```{.r .cell-code}\ncentr_degree(mig.ig, loops = TRUE, mode = \"out\")$centralization\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.02857\n```\n:::\n\n```{.r .cell-code}\n# If the network is directed, specify \"directed - T\" - will not auto-detect\neigen_info <- centr_eigen(mig.ig, directed = T)\n# Centrality score for node 3:\neigen_info[3]$vector\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nNULL\n```\n:::\n\n```{.r .cell-code}\n# Eigenveector centrality index for the network:\neigen_info$centralization\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.02715\n```\n:::\n\n```{.r .cell-code}\nsna::evcent(mig.stat, ignore.eval=TRUE)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in as.edgelist.sna(dat): object 'mig.stat' not found\n```\n:::\n\n```{.r .cell-code}\ncentralization(mig.stat, evcent)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in centralization(mig.stat, evcent): could not find function \"centralization\"\n```\n:::\n:::\n\n\nExplain triad census\nCheck for which states have no migration\n\n::: {.cell}\n\n```{.r .cell-code}\nigraph::dyad.census(mig_to_work_ig)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in \"igraph\" %in% class(graph): object 'mig_to_work_ig' not found\n```\n:::\n\n```{.r .cell-code}\nigraph::triad.census(mig_to_work_ig)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in \"igraph\" %in% class(graph): object 'mig_to_work_ig' not found\n```\n:::\n\n```{.r .cell-code}\ntriad.labels <- c(\"A,B,C, the empty graph.\",\n                  \"A->B, C, the graph with a single directed edge.\",\n                  \"A<->B, C, the graph with a mutual connection between two vertices.\",\n                  \"A<-B->C, the out-star.\",\n                  \"A->B<-C, the in-star.\",\n                  \"A->B->C, directed line.\",\"A<->B<-C.\",\n                  \"A<->B->C.\",\n                  \"A->B<-C, A->C.\",\n                  \"A<-B<-C, A->C.\",\n                  \"A<->B<->C.\",\n                  \"A<-B->C, A<->C.\",\n                  \"A->B<-C, A<->C.\",\n                  \"A->B->C, A<->C.\",\n                  \"A->B<->C, A<->C.\",\n                  \"A<->B<->C, A<->C, the complete graph.\")\n\ntriad.census.data <- data.frame(label = triad.labels, mig = igraph::triad.census(mig_to_work_ig)) %>% melt\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in melt(.): could not find function \"melt\"\n```\n:::\n\n```{.r .cell-code}\ncolnames(triad.census.data) <- c('triad', 'network', 'value')\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in colnames(triad.census.data) <- c(\"triad\", \"network\", \"value\"): object 'triad.census.data' not found\n```\n:::\n\n```{.r .cell-code}\ntriad<-triad.census.data %>% ggplot(aes(x = value, y = triad, fill = network)) + geom_bar(stat = 'identity', position = 'dodge')\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ggplot(., aes(x = value, y = triad, fill = network)): object 'triad.census.data' not found\n```\n:::\n\n```{.r .cell-code}\nggplotly(triad)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ggplotly(triad): object 'triad' not found\n```\n:::\n:::\n\n\n## Betweenness centralization\nThis is a “a measure of how central its most central node is in relation to how central all the other nodes are”.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmig.centr_btw <- centr_betw(mig.ig, directed = TRUE)\nmig.centr_btw\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$res\n [1] 1.0583 1.2766 1.0583 1.2766 1.2766 1.1181 1.2766 1.2766 1.2766 0.6344\n[11] 0.4475 0.2291 0.3916 0.3829 0.9512 0.1302 0.9512 1.2766 1.2766 1.0485\n[21] 1.2766 1.2766 1.2766 0.3542 0.3560 1.2766 1.2766 1.2766 1.2766 0.3355\n[31] 1.2766 1.2766 0.5730 1.0010 1.2766\n\n$centralization\n[1] 0.00028\n\n$theoretical_max\n[1] 38148\n```\n:::\n\n```{.r .cell-code}\ncentr_btw2 <-sna::betweenness(mig.stat, gmode = \"graph\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in as.edgelist.sna(dat): object 'mig.stat' not found\n```\n:::\n\n```{.r .cell-code}\ncentr_btw2\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'centr_btw2' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(mig_edu$weight)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in hist(mig_edu$weight): object 'mig_edu' not found\n```\n:::\n\n```{.r .cell-code}\nmig_edu<-mig_edu%>%\n  group_by(to)%>%\n  mutate(to_total = sum(weight))%>%\n  ungroup()%>%\n  group_by(from)%>%\n  mutate(from_total = sum(weight))%>%\n  ungroup()%>%\n  mutate(weight_to_prop = weight/to_total,\n         weight_from_prop = weight/from_total)%>%\n  mutate(weight_to_binary=(weight_to_prop>=0.08))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in group_by(., to): object 'mig_edu' not found\n```\n:::\n\n```{.r .cell-code}\nhist(mig_edu$weight_to_prop,breaks = 50)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in hist(mig_edu$weight_to_prop, breaks = 50): object 'mig_edu' not found\n```\n:::\n\n```{.r .cell-code}\nhist(mig_edu$weight_from_prop,breaks = 50)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in hist(mig_edu$weight_from_prop, breaks = 50): object 'mig_edu' not found\n```\n:::\n\n```{.r .cell-code}\nq<- ggplot(mig_edu, aes(x=weight_to_prop)) + \n  geom_histogram()\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ggplot(mig_edu, aes(x = weight_to_prop)): object 'mig_edu' not found\n```\n:::\n\n```{.r .cell-code}\nggplotly(q)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in UseMethod(\"ggplotly\", p): no applicable method for 'ggplotly' applied to an object of class \"function\"\n```\n:::\n\n```{.r .cell-code}\nmig_net_threshold_edu <- mig_edu%>%\n  filter(weight_to_binary)%>%\n  select(from,to, weight)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in filter(., weight_to_binary): object 'mig_edu' not found\n```\n:::\n\n```{.r .cell-code}\ntable(mig_net_threshold_edu > 0)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in table(mig_net_threshold_edu > 0): object 'mig_net_threshold_edu' not found\n```\n:::\n\n```{.r .cell-code}\n#table(mig_network$weight > 0)\n#table(mig_network$weight == 0)\n#mig_network <- mig_network %>% filter(weight > 0)\n#table(mig_network$weight == 0)\n#weighted=TRUE,values=mig_india$tot_ratio\nmigedu.ig<-igraph::graph_from_data_frame(mig_net_threshold_edu,directed=TRUE)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in as.data.frame(d): object 'mig_net_threshold_edu' not found\n```\n:::\n\n```{.r .cell-code}\nprint(\"Number of vertices\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Number of vertices\"\n```\n:::\n\n```{.r .cell-code}\nvcount(migedu.ig)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in \"igraph\" %in% class(graph): object 'migedu.ig' not found\n```\n:::\n\n```{.r .cell-code}\nprint(\"Number of edges\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Number of edges\"\n```\n:::\n\n```{.r .cell-code}\necount(migedu.ig)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in \"igraph\" %in% class(graph): object 'migedu.ig' not found\n```\n:::\n\n```{.r .cell-code}\nmigedu.stat<-network(mig_net_threshold_edu,matrix.type=\"edgelist\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in network(mig_net_threshold_edu, matrix.type = \"edgelist\"): could not find function \"network\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(migedu.ig)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in plot(migedu.ig): object 'migedu.ig' not found\n```\n:::\n\n```{.r .cell-code}\nplot(migedu.stat)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in plot(migedu.stat): object 'migedu.stat' not found\n```\n:::\n\n```{.r .cell-code}\nggnet2(migedu.stat,label=TRUE,label.size=3, arrow.size = 5, arrow.gap = 0.03)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ggnet2(migedu.stat, label = TRUE, label.size = 3, arrow.size = 5, : could not find function \"ggnet2\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#igraph::degree(mig.ig)\nnodes_edu <- data.frame(name = V(migedu.ig)$name,\n                    all.degree = igraph::degree(migedu.ig, mode = 'all'), \n                    out.degree = igraph::degree(migedu.ig, mode = 'out'),\n                    in.degree = igraph::degree(migedu.ig, mode = 'in'), \n                    eigen.centrality = igraph::evcent(migedu.ig)$vector)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in \"igraph\" %in% class(graph): object 'migedu.ig' not found\n```\n:::\n\n```{.r .cell-code}\n                    #bonacich=power_centrality(mig.ig))\n\nhead(nodes_edu)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in head(nodes_edu): object 'nodes_edu' not found\n```\n:::\n\n```{.r .cell-code}\nsummary(nodes_edu)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in summary(nodes_edu): object 'nodes_edu' not found\n```\n:::\n\n```{.r .cell-code}\nnodes_edu %>% melt %>% filter(variable != 'eigen.centrality') %>% \n  ggplot(aes(x = value, fill = variable, color = variable)) + geom_density(alpha = .2, bw = 5) +\n  ggtitle('Degree Distribution')\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in melt(.): could not find function \"melt\"\n```\n:::\n\n```{.r .cell-code}\nnodes_edu %>% count(out.degree,sort=TRUE)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in count(., out.degree, sort = TRUE): object 'nodes_edu' not found\n```\n:::\n\n```{.r .cell-code}\nnodes_edu %>% arrange(desc(out.degree))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in arrange(., desc(out.degree)): object 'nodes_edu' not found\n```\n:::\n\n```{.r .cell-code}\nnodes_edu %>% count(in.degree,sort=TRUE)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in count(., in.degree, sort = TRUE): object 'nodes_edu' not found\n```\n:::\n\n```{.r .cell-code}\nnodes_edu %>% arrange(desc(in.degree))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in arrange(., desc(in.degree)): object 'nodes_edu' not found\n```\n:::\n\n```{.r .cell-code}\n#nodes %>% arrange(desc(bonacich))\ntop_eigen<-nodes %>% arrange(desc(eigen.centrality))%>%slice(1:10)\nggplot(top_eigen, aes(x=reorder(name,eigen.centrality),y=eigen.centrality))+ \n  geom_bar(stat = \"identity\")+\n  coord_flip()+\n  geom_text(aes(label=round(eigen.centrality,digits=2)),position=position_stack(vjust=0.5))\n```\n\n::: {.cell-output-display}\n![](Migration-Networks-some-old-stuff-or-things-to-get-rid-of_files/figure-html/unnamed-chunk-35-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#top_out<-nodes_st %>% arrange(desc(outdegree))%>%slice(1:10)\n#top_out\n#nodes_st %>% arrange(desc(indegree))\n```\n:::\n\n\n\n## Using work as the weight\n\n::: {.cell}\n\n```{.r .cell-code}\n#use this to change the metric\nmig_network<-mig_india%>%\n  relocate(last_res,area,work_t,.before=tab_name)%>%\n  rename(from=last_res,to=area,weight=work_t)\nmig_network<-mig_network[1:3]\n\nhist(mig_network$weight)\n```\n\n::: {.cell-output-display}\n![](Migration-Networks-some-old-stuff-or-things-to-get-rid-of_files/figure-html/unnamed-chunk-36-1.png){width=672}\n:::\n\n```{.r .cell-code}\nmig_network<-mig_network%>%\n  group_by(to)%>%\n  mutate(to_total = sum(weight))%>%\n  ungroup()%>%\n  group_by(from)%>%\n  mutate(from_total = sum(weight))%>%\n  ungroup()%>%\n  mutate(weight_to_prop = weight/to_total,\n         weight_from_prop = weight/from_total)%>%\n  mutate(weight_to_binary=(weight_to_prop>=quantile(weight_from_prop,probs=.75)))%>%\n  mutate(weight_from_binary=(weight_from_prop>=quantile(weight_from_prop,probs=.75)))\n#Quantile(x, probs = .9)\nhist(mig_network$weight_to_prop,breaks = 50)\n```\n\n::: {.cell-output-display}\n![](Migration-Networks-some-old-stuff-or-things-to-get-rid-of_files/figure-html/unnamed-chunk-36-2.png){width=672}\n:::\n\n```{.r .cell-code}\nhist(mig_network$weight_from_prop,breaks = 50)\n```\n\n::: {.cell-output-display}\n![](Migration-Networks-some-old-stuff-or-things-to-get-rid-of_files/figure-html/unnamed-chunk-36-3.png){width=672}\n:::\n\n```{.r .cell-code}\nquantile(mig_network$weight_from_prop)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       0%       25%       50%       75%      100% \n0.0000000 0.0006767 0.0049244 0.0200697 0.7722530 \n```\n:::\n\n```{.r .cell-code}\nquantile(mig_network$weight_to_prop)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       0%       25%       50%       75%      100% \n0.0000000 0.0002454 0.0027828 0.0159182 0.7898197 \n```\n:::\n\n```{.r .cell-code}\np <- ggplot(mig_network, aes(x=weight_to_prop)) + \n  geom_histogram()\nggplotly(p)\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"plotly html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-d6e28bdd539f9ac6334c\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-d6e28bdd539f9ac6334c\">{\"x\":{\"data\":[{\"orientation\":\"v\",\"width\":[0.0272351608972108,0.0272351608972108,0.0272351608972108,0.0272351608972108,0.0272351608972108,0.0272351608972108,0.0272351608972108,0.0272351608972108,0.0272351608972108,0.0272351608972108,0.0272351608972108,0.0272351608972108,0.0272351608972108,0.0272351608972108,0.0272351608972108,0.0272351608972108,0.0272351608972108,0.0272351608972108,0.0272351608972108,0.0272351608972108,0.0272351608972108,0.0272351608972108,0.0272351608972108,0.0272351608972108,0.0272351608972108,0.0272351608972108,0.0272351608972108,0.0272351608972108,0.0272351608972108,0.0272351608972108],\"base\":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\"x\":[0,0.0272351608972108,0.0544703217944216,0.0817054826916323,0.108940643588843,0.136175804486054,0.163410965383265,0.190646126280475,0.217881287177686,0.245116448074897,0.272351608972108,0.299586769869319,0.326821930766529,0.35405709166374,0.381292252560951,0.408527413458162,0.435762574355373,0.462997735252583,0.490232896149794,0.517468057047005,0.544703217944216,0.571938378841426,0.599173539738637,0.626408700635848,0.653643861533059,0.68087902243027,0.70811418332748,0.735349344224691,0.762584505121902,0.789819666019113],\"y\":[897,141,68,21,17,16,13,10,7,3,7,5,1,0,3,4,0,2,2,1,1,1,0,0,0,2,2,0,0,1],\"text\":[\"count: 897<br />weight_to_prop: 0.00000\",\"count: 141<br />weight_to_prop: 0.02724\",\"count:  68<br />weight_to_prop: 0.05447\",\"count:  21<br />weight_to_prop: 0.08171\",\"count:  17<br />weight_to_prop: 0.10894\",\"count:  16<br />weight_to_prop: 0.13618\",\"count:  13<br />weight_to_prop: 0.16341\",\"count:  10<br />weight_to_prop: 0.19065\",\"count:   7<br />weight_to_prop: 0.21788\",\"count:   3<br />weight_to_prop: 0.24512\",\"count:   7<br />weight_to_prop: 0.27235\",\"count:   5<br />weight_to_prop: 0.29959\",\"count:   1<br />weight_to_prop: 0.32682\",\"count:   0<br />weight_to_prop: 0.35406\",\"count:   3<br />weight_to_prop: 0.38129\",\"count:   4<br />weight_to_prop: 0.40853\",\"count:   0<br />weight_to_prop: 0.43576\",\"count:   2<br />weight_to_prop: 0.46300\",\"count:   2<br />weight_to_prop: 0.49023\",\"count:   1<br />weight_to_prop: 0.51747\",\"count:   1<br />weight_to_prop: 0.54470\",\"count:   1<br />weight_to_prop: 0.57194\",\"count:   0<br />weight_to_prop: 0.59917\",\"count:   0<br />weight_to_prop: 0.62641\",\"count:   0<br />weight_to_prop: 0.65364\",\"count:   2<br />weight_to_prop: 0.68088\",\"count:   2<br />weight_to_prop: 0.70811\",\"count:   0<br />weight_to_prop: 0.73535\",\"count:   0<br />weight_to_prop: 0.76258\",\"count:   1<br />weight_to_prop: 0.78982\"],\"type\":\"bar\",\"textposition\":\"none\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(89,89,89,1)\",\"line\":{\"width\":1.88976377952756,\"color\":\"transparent\"}},\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":26.2283105022831,\"r\":7.30593607305936,\"b\":40.1826484018265,\"l\":43.1050228310502},\"plot_bgcolor\":\"rgba(235,235,235,1)\",\"paper_bgcolor\":\"rgba(255,255,255,1)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.6118721461187},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-0.0544703217944216,0.844289987813534],\"tickmode\":\"array\",\"ticktext\":[\"0.0\",\"0.2\",\"0.4\",\"0.6\",\"0.8\"],\"tickvals\":[0,0.2,0.4,0.6,0.8],\"categoryorder\":\"array\",\"categoryarray\":[\"0.0\",\"0.2\",\"0.4\",\"0.6\",\"0.8\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.65296803652968,\"tickwidth\":0.66417600664176,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.689497716895},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(255,255,255,1)\",\"gridwidth\":0.66417600664176,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"weight_to_prop\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.6118721461187}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-44.85,941.85],\"tickmode\":\"array\",\"ticktext\":[\"0\",\"250\",\"500\",\"750\"],\"tickvals\":[0,250,500,750],\"categoryorder\":\"array\",\"categoryarray\":[\"0\",\"250\",\"500\",\"750\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.65296803652968,\"tickwidth\":0.66417600664176,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.689497716895},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(255,255,255,1)\",\"gridwidth\":0.66417600664176,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"count\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.6118721461187}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":false,\"legend\":{\"bgcolor\":\"rgba(255,255,255,1)\",\"bordercolor\":\"transparent\",\"borderwidth\":1.88976377952756,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.689497716895}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"49cc48021f4f\":{\"x\":{},\"type\":\"bar\"}},\"cur_data\":\"49cc48021f4f\",\"visdat\":{\"49cc48021f4f\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.2,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n\n```{.r .cell-code}\nr <- ggplot(mig_network, aes(x=weight_from_prop)) + \n  geom_histogram()\nggplotly(r)\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"plotly html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-f85b017b391b4cc5067f\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-f85b017b391b4cc5067f\">{\"x\":{\"data\":[{\"orientation\":\"v\",\"width\":[0.0266294139395007,0.0266294139395007,0.0266294139395007,0.0266294139395007,0.0266294139395007,0.0266294139395007,0.0266294139395007,0.0266294139395007,0.0266294139395007,0.0266294139395007,0.0266294139395007,0.0266294139395007,0.0266294139395007,0.0266294139395007,0.0266294139395007,0.0266294139395007,0.0266294139395007,0.0266294139395007,0.0266294139395007,0.0266294139395007,0.0266294139395007,0.0266294139395007,0.0266294139395007,0.0266294139395007,0.0266294139395007,0.0266294139395007,0.0266294139395007,0.0266294139395007,0.0266294139395007,0.0266294139395007],\"base\":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\"x\":[0,0.0266294139395007,0.0532588278790014,0.0798882418185021,0.106517655758003,0.133147069697504,0.159776483637004,0.186405897576505,0.213035311516006,0.239664725455506,0.266294139395007,0.292923553334508,0.319552967274009,0.346182381213509,0.37281179515301,0.399441209092511,0.426070623032011,0.452700036971512,0.479329450911013,0.505958864850514,0.532588278790014,0.559217692729515,0.585847106669016,0.612476520608516,0.639105934548017,0.665735348487518,0.692364762427018,0.718994176366519,0.74562359030602,0.772253004245521],\"y\":[832,192,61,44,30,11,5,9,9,7,2,2,3,4,2,1,2,2,2,0,0,0,1,0,2,1,0,0,0,1],\"text\":[\"count: 832<br />weight_from_prop: 0.00000\",\"count: 192<br />weight_from_prop: 0.02663\",\"count:  61<br />weight_from_prop: 0.05326\",\"count:  44<br />weight_from_prop: 0.07989\",\"count:  30<br />weight_from_prop: 0.10652\",\"count:  11<br />weight_from_prop: 0.13315\",\"count:   5<br />weight_from_prop: 0.15978\",\"count:   9<br />weight_from_prop: 0.18641\",\"count:   9<br />weight_from_prop: 0.21304\",\"count:   7<br />weight_from_prop: 0.23966\",\"count:   2<br />weight_from_prop: 0.26629\",\"count:   2<br />weight_from_prop: 0.29292\",\"count:   3<br />weight_from_prop: 0.31955\",\"count:   4<br />weight_from_prop: 0.34618\",\"count:   2<br />weight_from_prop: 0.37281\",\"count:   1<br />weight_from_prop: 0.39944\",\"count:   2<br />weight_from_prop: 0.42607\",\"count:   2<br />weight_from_prop: 0.45270\",\"count:   2<br />weight_from_prop: 0.47933\",\"count:   0<br />weight_from_prop: 0.50596\",\"count:   0<br />weight_from_prop: 0.53259\",\"count:   0<br />weight_from_prop: 0.55922\",\"count:   1<br />weight_from_prop: 0.58585\",\"count:   0<br />weight_from_prop: 0.61248\",\"count:   2<br />weight_from_prop: 0.63911\",\"count:   1<br />weight_from_prop: 0.66574\",\"count:   0<br />weight_from_prop: 0.69236\",\"count:   0<br />weight_from_prop: 0.71899\",\"count:   0<br />weight_from_prop: 0.74562\",\"count:   1<br />weight_from_prop: 0.77225\"],\"type\":\"bar\",\"textposition\":\"none\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(89,89,89,1)\",\"line\":{\"width\":1.88976377952756,\"color\":\"transparent\"}},\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":26.2283105022831,\"r\":7.30593607305936,\"b\":40.1826484018265,\"l\":43.1050228310502},\"plot_bgcolor\":\"rgba(235,235,235,1)\",\"paper_bgcolor\":\"rgba(255,255,255,1)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.6118721461187},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-0.0532588278790014,0.825511832124522],\"tickmode\":\"array\",\"ticktext\":[\"0.0\",\"0.2\",\"0.4\",\"0.6\",\"0.8\"],\"tickvals\":[0,0.2,0.4,0.6,0.8],\"categoryorder\":\"array\",\"categoryarray\":[\"0.0\",\"0.2\",\"0.4\",\"0.6\",\"0.8\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.65296803652968,\"tickwidth\":0.66417600664176,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.689497716895},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(255,255,255,1)\",\"gridwidth\":0.66417600664176,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"weight_from_prop\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.6118721461187}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-41.6,873.6],\"tickmode\":\"array\",\"ticktext\":[\"0\",\"200\",\"400\",\"600\",\"800\"],\"tickvals\":[0,200,400,600,800],\"categoryorder\":\"array\",\"categoryarray\":[\"0\",\"200\",\"400\",\"600\",\"800\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.65296803652968,\"tickwidth\":0.66417600664176,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.689497716895},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(255,255,255,1)\",\"gridwidth\":0.66417600664176,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"count\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.6118721461187}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":false,\"legend\":{\"bgcolor\":\"rgba(255,255,255,1)\",\"bordercolor\":\"transparent\",\"borderwidth\":1.88976377952756,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.689497716895}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"49cc348c4ce0\":{\"x\":{},\"type\":\"bar\"}},\"cur_data\":\"49cc348c4ce0\",\"visdat\":{\"49cc348c4ce0\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.2,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmig_network<-mig_network%>%\n  group_by(to)%>%\n  mutate(to_total = sum(weight))%>%\n  ungroup()%>%\n  mutate(weight_to_prop = weight/to_total)%>%\n  mutate(weight_to_binary=(weight_to_prop>=quantile(weight_to_prop,probs=.75)))\nhist(mig_network$weight_to_prop,breaks = 50)\n```\n\n::: {.cell-output-display}\n![](Migration-Networks-some-old-stuff-or-things-to-get-rid-of_files/figure-html/unnamed-chunk-37-1.png){width=672}\n:::\n\n```{.r .cell-code}\nquantile(mig_network$weight)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     0%     25%     50%     75%    100% \n      0      26     222    2643 1104680 \n```\n:::\n\n```{.r .cell-code}\nhist(mig_network$weight)\n```\n\n::: {.cell-output-display}\n![](Migration-Networks-some-old-stuff-or-things-to-get-rid-of_files/figure-html/unnamed-chunk-37-2.png){width=672}\n:::\n\n```{.r .cell-code}\nr <- ggplot(mig_network, aes(x=weight)) + \n  geom_histogram()\nggplotly(r)\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"plotly html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-2104b75f4a71a03bda6b\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-2104b75f4a71a03bda6b\">{\"x\":{\"data\":[{\"orientation\":\"v\",\"width\":[38092.4137931034,38092.4137931034,38092.4137931034,38092.4137931035,38092.4137931034,38092.4137931035,38092.4137931035,38092.4137931034,38092.4137931034,38092.4137931035,38092.4137931035,38092.4137931034,38092.4137931034,38092.4137931035,38092.4137931033,38092.4137931033,38092.4137931033,38092.4137931033,38092.4137931035,38092.4137931033,38092.4137931033,38092.4137931035,38092.4137931033,38092.4137931033,38092.4137931033,38092.4137931033,38092.4137931035,38092.4137931035,38092.4137931033,38092.4137931038],\"base\":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\"x\":[0,38092.4137931034,76184.8275862069,114277.24137931,152369.655172414,190462.068965517,228554.482758621,266646.896551724,304739.310344828,342831.724137931,380924.137931035,419016.551724138,457108.965517241,495201.379310345,533293.793103448,571386.206896552,609478.620689655,647571.034482758,685663.448275862,723755.862068966,761848.275862069,799940.689655172,838033.103448276,876125.517241379,914217.931034483,952310.344827586,990402.75862069,1028495.17241379,1066587.5862069,1104680],\"y\":[1112,67,20,2,8,6,1,3,2,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1],\"text\":[\"count: 1112<br />weight:       0\",\"count:   67<br />weight:   38092\",\"count:   20<br />weight:   76185\",\"count:    2<br />weight:  114277\",\"count:    8<br />weight:  152370\",\"count:    6<br />weight:  190462\",\"count:    1<br />weight:  228554\",\"count:    3<br />weight:  266647\",\"count:    2<br />weight:  304739\",\"count:    1<br />weight:  342832\",\"count:    0<br />weight:  380924\",\"count:    1<br />weight:  419017\",\"count:    0<br />weight:  457109\",\"count:    0<br />weight:  495201\",\"count:    0<br />weight:  533294\",\"count:    0<br />weight:  571386\",\"count:    0<br />weight:  609479\",\"count:    0<br />weight:  647571\",\"count:    0<br />weight:  685663\",\"count:    0<br />weight:  723756\",\"count:    0<br />weight:  761848\",\"count:    0<br />weight:  799941\",\"count:    0<br />weight:  838033\",\"count:    0<br />weight:  876126\",\"count:    1<br />weight:  914218\",\"count:    0<br />weight:  952310\",\"count:    0<br />weight:  990403\",\"count:    0<br />weight: 1028495\",\"count:    0<br />weight: 1066588\",\"count:    1<br />weight: 1104680\"],\"type\":\"bar\",\"textposition\":\"none\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(89,89,89,1)\",\"line\":{\"width\":1.88976377952756,\"color\":\"transparent\"}},\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":26.2283105022831,\"r\":7.30593607305936,\"b\":40.1826484018265,\"l\":43.1050228310502},\"plot_bgcolor\":\"rgba(235,235,235,1)\",\"paper_bgcolor\":\"rgba(255,255,255,1)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.6118721461187},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-76184.8275862069,1180864.82758621],\"tickmode\":\"array\",\"ticktext\":[\"0\",\"300000\",\"600000\",\"900000\"],\"tickvals\":[0,300000,600000,900000],\"categoryorder\":\"array\",\"categoryarray\":[\"0\",\"300000\",\"600000\",\"900000\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.65296803652968,\"tickwidth\":0.66417600664176,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.689497716895},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(255,255,255,1)\",\"gridwidth\":0.66417600664176,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"weight\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.6118721461187}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-55.6,1167.6],\"tickmode\":\"array\",\"ticktext\":[\"0\",\"300\",\"600\",\"900\"],\"tickvals\":[0,300,600,900],\"categoryorder\":\"array\",\"categoryarray\":[\"0\",\"300\",\"600\",\"900\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.65296803652968,\"tickwidth\":0.66417600664176,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.689497716895},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(255,255,255,1)\",\"gridwidth\":0.66417600664176,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"count\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.6118721461187}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":false,\"legend\":{\"bgcolor\":\"rgba(255,255,255,1)\",\"bordercolor\":\"transparent\",\"borderwidth\":1.88976377952756,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.689497716895}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"49cc70303205\":{\"x\":{},\"type\":\"bar\"}},\"cur_data\":\"49cc70303205\",\"visdat\":{\"49cc70303205\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.2,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n\n```{.r .cell-code}\nquantile(mig_network$weight_to_prop)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       0%       25%       50%       75%      100% \n0.0000000 0.0002454 0.0027828 0.0159182 0.7898197 \n```\n:::\n\n```{.r .cell-code}\nhist(mig)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in hist(mig): object 'mig' not found\n```\n:::\n\n```{.r .cell-code}\nall.equal(mig_check$work_prop,mig_network$weight_to_prop)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n:::\n\n## Using education as the weight\n\n::: {.cell}\n\n```{.r .cell-code}\n#use this to change the metric\nmig_edu<-mig_india%>%\n  relocate(last_res,area,educ_t,.before=tab_name)%>%\n  rename(from=last_res,to=area,weight=educ_t)\nmig_edu<-mig_edu[1:3]\n\n\nhist(mig_edu$weight)\n```\n\n::: {.cell-output-display}\n![](Migration-Networks-some-old-stuff-or-things-to-get-rid-of_files/figure-html/unnamed-chunk-38-1.png){width=672}\n:::\n\n```{.r .cell-code}\nmig_edu<-mig_edu%>%\n  group_by(to)%>%\n  mutate(to_total = sum(weight))%>%\n  ungroup()%>%\n  mutate(weight_to_prop = weight/to_total)%>%\n  mutate(weight_to_binary=(weight_to_prop>=quantile(weight_to_prop,probs=.75)))\nquantile(mig_edu$weight_to_prop)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       0%       25%       50%       75%      100% \n0.0000000 0.0005779 0.0049566 0.0187256 0.8675958 \n```\n:::\n\n```{.r .cell-code}\nall.equal(mig_check$educ_prop,mig_edu$weight_to_prop)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n:::\n\n\n\n## Network based on destination and education\n\n::: {.cell}\n\n```{.r .cell-code}\nmig_edu_threshold <- mig_edu%>%\n  filter(weight_to_binary)%>%\n  select(from,to, weight)\n\n#table(mig_net_threshold_to)\n#table(mig_network$weight_to_binary,mig_network$weight_from_binary)\n\ndim(mig_edu_threshold)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 307   3\n```\n:::\n\n```{.r .cell-code}\nmig_to_edu_ig<-igraph::graph_from_data_frame(mig_edu_threshold,directed=TRUE)\nmig_to_edu_stat<-network(mig_edu_threshold,matrix.type=\"edgelist\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in network(mig_edu_threshold, matrix.type = \"edgelist\"): could not find function \"network\"\n```\n:::\n:::\n\n\n\n## Using education as the weight\n\n::: {.cell}\n\n```{.r .cell-code}\n#use this to change the metric\nmig_edu<-mig_india%>%\n  relocate(last_res,area,educ_t,.before=tab_name)%>%\n  rename(from=last_res,to=area,weight=educ_t)\nmig_edu<-mig_edu[1:3]\n\n\nhist(mig_edu$weight)\n```\n\n::: {.cell-output-display}\n![](Migration-Networks-some-old-stuff-or-things-to-get-rid-of_files/figure-html/unnamed-chunk-40-1.png){width=672}\n:::\n\n```{.r .cell-code}\nmig_edu<-mig_edu%>%\n  group_by(to)%>%\n  mutate(to_total = sum(weight))%>%\n  ungroup()%>%\n  group_by(from)%>%\n  mutate(from_total = sum(weight))%>%\n  ungroup()%>%\n  mutate(weight_to_prop = weight/to_total,\n         weight_from_prop = weight/from_total)%>%\n  mutate(weight_to_binary=(weight_to_prop>=quantile(weight_from_prop,probs=.75)))%>%\n  mutate(weight_from_binary=(weight_from_prop>=quantile(weight_from_prop,probs=.75)))\n#Quantile(x, probs = .9)\nhist(mig_edu$weight_to_prop,breaks = 50)\n```\n\n::: {.cell-output-display}\n![](Migration-Networks-some-old-stuff-or-things-to-get-rid-of_files/figure-html/unnamed-chunk-40-2.png){width=672}\n:::\n\n```{.r .cell-code}\nhist(mig_edu$weight_from_prop,breaks = 50)\n```\n\n::: {.cell-output-display}\n![](Migration-Networks-some-old-stuff-or-things-to-get-rid-of_files/figure-html/unnamed-chunk-40-3.png){width=672}\n:::\n\n```{.r .cell-code}\nquantile(mig_edu$weight_from_prop)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       0%       25%       50%       75%      100% \n0.0000000 0.0003741 0.0040032 0.0216014 0.8502802 \n```\n:::\n\n```{.r .cell-code}\nquantile(mig_edu$weight_to_prop)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       0%       25%       50%       75%      100% \n0.0000000 0.0005779 0.0049566 0.0187256 0.8675958 \n```\n:::\n\n```{.r .cell-code}\nggplot(mig_edu, aes(x=weight_to_prop)) + \n  geom_histogram()\n```\n\n::: {.cell-output-display}\n![](Migration-Networks-some-old-stuff-or-things-to-get-rid-of_files/figure-html/unnamed-chunk-40-4.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(mig_edu, aes(x=weight_from_prop)) + \n  geom_histogram()\n```\n\n::: {.cell-output-display}\n![](Migration-Networks-some-old-stuff-or-things-to-get-rid-of_files/figure-html/unnamed-chunk-40-5.png){width=672}\n:::\n:::\n\n\n## Using marriage as the weight\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#use this to change the metric\nmig_mar<-mig_india%>%\n  relocate(last_res,area,mar_t,.before=tab_name)%>%\n  rename(from=last_res,to=area,weight=mar_t)\nmig_mar<-mig_mar[1:3]\n\n\nhist(mig_mar$weight)\n```\n\n::: {.cell-output-display}\n![](Migration-Networks-some-old-stuff-or-things-to-get-rid-of_files/figure-html/unnamed-chunk-41-1.png){width=672}\n:::\n\n```{.r .cell-code}\nmig_mar<-mig_mar%>%\n  group_by(to)%>%\n  mutate(to_total = sum(weight))%>%\n  ungroup()%>%\n  group_by(from)%>%\n  mutate(from_total = sum(weight))%>%\n  ungroup()%>%\n  mutate(weight_to_prop = weight/to_total,\n         weight_from_prop = weight/from_total)%>%\n  mutate(weight_to_binary=(weight_to_prop>=quantile(weight_from_prop,probs=.75)))%>%\n  mutate(weight_from_binary=(weight_from_prop>=quantile(weight_from_prop,probs=.75)))\n#Quantile(x, probs = .9)\nhist(mig_mar$weight_to_prop,breaks = 50)\n```\n\n::: {.cell-output-display}\n![](Migration-Networks-some-old-stuff-or-things-to-get-rid-of_files/figure-html/unnamed-chunk-41-2.png){width=672}\n:::\n\n```{.r .cell-code}\nhist(mig_mar$weight_from_prop,breaks = 50)\n```\n\n::: {.cell-output-display}\n![](Migration-Networks-some-old-stuff-or-things-to-get-rid-of_files/figure-html/unnamed-chunk-41-3.png){width=672}\n:::\n\n```{.r .cell-code}\nquantile(mig_mar$weight_from_prop)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       0%       25%       50%       75%      100% \n0.0000000 0.0001144 0.0015905 0.0090348 0.8741219 \n```\n:::\n\n```{.r .cell-code}\nquantile(mig_mar$weight_to_prop)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        0%        25%        50%        75%       100% \n0.00000000 0.00007267 0.00111950 0.00708844 0.88632352 \n```\n:::\n\n```{.r .cell-code}\nggplot(mig_mar, aes(x=weight_to_prop)) + \n  geom_histogram()\n```\n\n::: {.cell-output-display}\n![](Migration-Networks-some-old-stuff-or-things-to-get-rid-of_files/figure-html/unnamed-chunk-41-4.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(mig_mar, aes(x=weight_from_prop)) + \n  geom_histogram()\n```\n\n::: {.cell-output-display}\n![](Migration-Networks-some-old-stuff-or-things-to-get-rid-of_files/figure-html/unnamed-chunk-41-5.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#V(mig.ig)$weight\nprint(\"Number of vertices\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Number of vertices\"\n```\n:::\n\n```{.r .cell-code}\nvcount(mig_to_edu_ig)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 35\n```\n:::\n\n```{.r .cell-code}\nprint(\"Number of edges\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Number of edges\"\n```\n:::\n\n```{.r .cell-code}\necount(mig_to_edu_ig)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 307\n```\n:::\n\n```{.r .cell-code}\n#E(mig_to_work_ig)$weight\nmax(E(mig_to_edu_ig)$weight)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 32240\n```\n:::\n\n```{.r .cell-code}\nmin(E(mig_to_edu_ig)$weight)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 9\n```\n:::\n\n```{.r .cell-code}\nprint(mig_to_edu_stat)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in print(mig_to_edu_stat): object 'mig_to_edu_stat' not found\n```\n:::\n\n```{.r .cell-code}\n#plot(mig_to_work_ig)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmig_network2<-mig_india%>%\n  relocate(last_res,area,work_t,.before=tab_name)%>%\n  rename(from=last_res,to=area,weight=work_t)\nmig_network2<-mig_network2[1:3]\n\nhist(mig_network2$weight)\n```\n\n::: {.cell-output-display}\n![](Migration-Networks-some-old-stuff-or-things-to-get-rid-of_files/figure-html/unnamed-chunk-43-1.png){width=672}\n:::\n\n```{.r .cell-code}\nmig_network2<-mig_network2%>%\n  group_by(to)%>%\n  mutate(to_total = sum(weight))%>%\n  ungroup()%>%\n  group_by(from)%>%\n  mutate(from_total = sum(weight))%>%\n  ungroup()%>%\n  mutate(weight_to_prop = weight/to_total,)%>%\n  mutate(weight_to_binary=(weight_to_prop>=quantile(weight_from_prop,probs=.75)))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in `mutate()`:\nℹ In argument: `weight_to_binary = (weight_to_prop >=\n  quantile(weight_from_prop, probs = 0.75))`.\nCaused by error in `quantile()`:\n! object 'weight_from_prop' not found\n```\n:::\n:::\n\n\n## Using marriage as the weight\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#use this to change the metric\nmig_mar<-mig_india%>%\n  relocate(last_res,area,mar_t,.before=tab_name)%>%\n  rename(from=last_res,to=area,weight=mar_t)\nmig_mar<-mig_mar[1:3]\n\n\nhist(mig_mar$weight)\n```\n\n::: {.cell-output-display}\n![](Migration-Networks-some-old-stuff-or-things-to-get-rid-of_files/figure-html/unnamed-chunk-44-1.png){width=672}\n:::\n\n```{.r .cell-code}\nmig_mar<-mig_mar%>%\n  group_by(to)%>%\n  mutate(to_total = sum(weight))%>%\n  ungroup()%>%\n  mutate(weight_to_prop = weight/to_total)%>%\n  mutate(weight_to_binary=(weight_to_prop>=quantile(weight_to_prop,probs=.75)))\n\nquantile(mig_mar$weight_to_prop)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        0%        25%        50%        75%       100% \n0.00000000 0.00007267 0.00111950 0.00708844 0.88632352 \n```\n:::\n\n```{.r .cell-code}\nall.equal(mig_check$mar_prop,mig_mar$weight_to_prop)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# switch to statnet object to plot\nggnet2(mig_to_edu_stat,label=TRUE,label.size=3, arrow.size = 5, arrow.gap = 0.03)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ggnet2(mig_to_edu_stat, label = TRUE, label.size = 3, arrow.size = 5, : could not find function \"ggnet2\"\n```\n:::\n\n```{.r .cell-code}\n#save a ggnet layout that you like\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnodes_to_e<-data.frame(name = V(mig_to_edu_ig)$name,\n    all.degree = igraph::degree(mig_to_edu_ig, mode = 'all'), \n    out.degree = igraph::degree(mig_to_edu_ig, mode = 'out'),\n    in.degree = igraph::degree(mig_to_edu_ig, mode = 'in'), \n    strength_all=igraph::strength(mig_to_edu_ig),\n    strength_in=igraph::strength(mig_to_edu_ig,mode=\"in\"),\n    strength_out=igraph::strength(mig_to_edu_ig,mode=\"out\"),\n    cons=igraph::constraint(mig_to_edu_ig))\n#Global\ntransitivity(mig_to_edu_ig, type=\"global\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.5722\n```\n:::\n\n```{.r .cell-code}\n##Average local clustering coefficient\ntransitivity(mig_to_edu_ig, type=\"average\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.7248\n```\n:::\n\n```{.r .cell-code}\nnodes_to_e$transitivity <- transitivity(mig_to_edu_ig, type = 'local')\nnodes_to_e$weighted.transitivity <-  transitivity(mig_to_edu_ig, type = 'weighted')\ngtrans(mig_to_edu_stat)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in gtrans(mig_to_edu_stat): could not find function \"gtrans\"\n```\n:::\n\n```{.r .cell-code}\nsummary(nodes_to_e)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     name             all.degree     out.degree      in.degree    \n Length:35          Min.   : 4.0   Min.   : 0.00   Min.   : 3.00  \n Class :character   1st Qu.:12.0   1st Qu.: 3.50   1st Qu.: 7.00  \n Mode  :character   Median :16.0   Median : 8.00   Median : 9.00  \n                    Mean   :17.5   Mean   : 8.77   Mean   : 8.77  \n                    3rd Qu.:22.0   3rd Qu.:11.50   3rd Qu.:11.00  \n                    Max.   :40.0   Max.   :32.00   Max.   :13.00  \n  strength_all     strength_in      strength_out         cons      \n Min.   :   482   Min.   :   387   Min.   :     0   Min.   :0.222  \n 1st Qu.:  3372   1st Qu.:  1886   1st Qu.:  1157   1st Qu.:0.387  \n Median : 18337   Median :  8254   Median :  8418   Median :0.445  \n Mean   : 37022   Mean   : 18511   Mean   : 18511   Mean   :0.469  \n 3rd Qu.: 53618   3rd Qu.: 21322   3rd Qu.: 22470   3rd Qu.:0.487  \n Max.   :173185   Max.   :101527   Max.   :128353   Max.   :1.244  \n  transitivity   weighted.transitivity\n Min.   :0.387   Min.   :0.367        \n 1st Qu.:0.584   1st Qu.:0.634        \n Median :0.773   Median :0.826        \n Mean   :0.725   Mean   :0.853        \n 3rd Qu.:0.859   3rd Qu.:0.955        \n Max.   :1.000   Max.   :1.507        \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnodes_to_e%>%select(\"name\",\"all.degree\",\"in.degree\",\"out.degree\")%>%arrange(name)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                                               name all.degree in.degree\nANDAMAN & NICOBAR ISLANDS ANDAMAN & NICOBAR ISLANDS          9         9\nANDHRA PRADESH                       ANDHRA PRADESH         25        13\nARUNACHAL PRADESH                 ARUNACHAL PRADESH         13         7\nASSAM                                         ASSAM         22        11\nBIHAR                                         BIHAR         37         5\nCHANDIGARH                               CHANDIGARH         11         9\nCHHATTISGARH                           CHHATTISGARH         12         9\nDADRA & NAGAR HAVELI           DADRA & NAGAR HAVELI          7         6\nDAMAN & DIU                             DAMAN & DIU          7         7\nGOA                                             GOA         12        12\nGUJARAT                                     GUJARAT         15         7\nHARYANA                                     HARYANA         15         7\nHIMACHAL PRADESH                   HIMACHAL PRADESH         18        13\nJAMMU & KASHMIR                     JAMMU & KASHMIR         16        11\nJHARKHAND                                 JHARKHAND         18         4\nKARNATAKA                                 KARNATAKA         22        12\nKERALA                                       KERALA         22         9\nLAKSHADWEEP                             LAKSHADWEEP          4         3\nMADHYA PRADESH                       MADHYA PRADESH         18         8\nMAHARASHTRA                             MAHARASHTRA         30        10\nMANIPUR                                     MANIPUR         17         9\nMEGHALAYA                                 MEGHALAYA         15         8\nMIZORAM                                     MIZORAM         13         8\nNAGALAND                                   NAGALAND         14         9\nNCT OF DELHI                           NCT OF DELHI         22         8\nODISHA                                       ODISHA         11         7\nPUDUCHERRY                               PUDUCHERRY          4         3\nPUNJAB                                       PUNJAB         21        13\nRAJASTHAN                                 RAJASTHAN         30        11\nSIKKIM                                       SIKKIM         10         8\nTAMIL NADU                               TAMIL NADU         18        10\nTRIPURA                                     TRIPURA         13         9\nUTTAR PRADESH                         UTTAR PRADESH         40        12\nUTTARAKHAND                             UTTARAKHAND         20        12\nWEST BENGAL                             WEST BENGAL         33         8\n                          out.degree\nANDAMAN & NICOBAR ISLANDS          0\nANDHRA PRADESH                    12\nARUNACHAL PRADESH                  6\nASSAM                             11\nBIHAR                             32\nCHANDIGARH                         2\nCHHATTISGARH                       3\nDADRA & NAGAR HAVELI               1\nDAMAN & DIU                        0\nGOA                                0\nGUJARAT                            8\nHARYANA                            8\nHIMACHAL PRADESH                   5\nJAMMU & KASHMIR                    5\nJHARKHAND                         14\nKARNATAKA                         10\nKERALA                            13\nLAKSHADWEEP                        1\nMADHYA PRADESH                    10\nMAHARASHTRA                       20\nMANIPUR                            8\nMEGHALAYA                          7\nMIZORAM                            5\nNAGALAND                           5\nNCT OF DELHI                      14\nODISHA                             4\nPUDUCHERRY                         1\nPUNJAB                             8\nRAJASTHAN                         19\nSIKKIM                             2\nTAMIL NADU                         8\nTRIPURA                            4\nUTTAR PRADESH                     28\nUTTARAKHAND                        8\nWEST BENGAL                       25\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnodes_to_e %>% melt %>%filter(variable=='strength_all'|variable=='strength_in'|variable=='strength_out')%>%\n  ggplot(aes(x = value, fill = variable, color = variable)) + geom_density(alpha = .2, bw = 5) +\n  ggtitle('Degree Distribution')\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in melt(.): could not find function \"melt\"\n```\n:::\n\n```{.r .cell-code}\nmelt(nodes_to_e) %>% filter(variable == 'transitivity' | variable == 'weighted.transitivity') %>% \n  ggplot(aes(x = value, fill = variable, color = variable)) + geom_density(alpha = 0.2) +\n  ggtitle('Transitivity Distribution, Local and Weighted')\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in melt(nodes_to_e): could not find function \"melt\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nout_to_e<-nodes_to_e%>% arrange(desc(strength_out))%>%slice(1:10)\nggplot(out_to_e, aes(fill=name,x=reorder(name,strength_out),y=strength_out))+ \n  geom_bar(stat = \"identity\")+\n  scale_fill_manual(values=Set,guide=\"none\")+\n  coord_flip()+\n  geom_text(aes(label=round(strength_out,digits=2)),position=position_stack(vjust=0.5))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in is_missing(values): object 'Set' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nin_to_e<-nodes_to_e %>% arrange(desc(strength_in))%>%slice(1:10)\nggplot(in_to_e, aes(fill=name,x=reorder(name,strength_in),y=strength_in))+ \n  geom_bar(stat = \"identity\")+\n  scale_fill_manual(values=Set,guide=\"none\")+\n  coord_flip()+\n  geom_text(aes(label=round(strength_in,digits=2)),position=position_stack(vjust=0.5))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in is_missing(values): object 'Set' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncons_to_e<-nodes_to_e %>% arrange(desc(cons))%>%slice(1:10)\nggplot(cons_to_e, aes(fill=name,x=reorder(name,cons),y=cons))+ \n  geom_bar(stat = \"identity\")+\n  scale_fill_manual(values=Set,guide=\"none\")+\n  coord_flip()+\n  geom_text(aes(label=round(cons,digits=2)),position=position_stack(vjust=0.5))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in is_missing(values): object 'Set' not found\n```\n:::\n:::\n\n\nThe number of components is 1. \n\n::: {.cell}\n\n```{.r .cell-code}\nnames(igraph::components(mig_to_edu_ig))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"membership\" \"csize\"      \"no\"        \n```\n:::\n\n```{.r .cell-code}\n#igraph::components(mig.ig)$membership\nigraph::components(mig_to_edu_ig)$no \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1\n```\n:::\n\n```{.r .cell-code}\nigraph::components(mig_to_edu_ig)$csize\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 35\n```\n:::\n\n```{.r .cell-code}\nprint(\"Diameter\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Diameter\"\n```\n:::\n\n```{.r .cell-code}\ndiameter(mig_to_edu_ig)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 6310\n```\n:::\n\n```{.r .cell-code}\nfarthest_vertices(mig_to_edu_ig)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$vertices\n+ 2/35 vertices, named, from 21d4d2f:\n[1] PUDUCHERRY  MAHARASHTRA\n\n$distance\n[1] 6310\n```\n:::\n\n```{.r .cell-code}\n#distances(mig.ig,\"WEST BENGAL\",\"MAHARASHTRA\")\n#all_shortest_paths(mig.ig,\"WEST BENGAL\",\"MAHARASHTRA\", weights=NA)$res\n\nsna::isolates(mig_to_edu_stat)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in as.edgelist.sna(dat): object 'mig_to_edu_stat' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngraph.density(mig_to_edu_ig,loops=FALSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.258\n```\n:::\n:::\n\n::: {.cell width='20' height='12'}\n\n```{.r .cell-code}\n#Run clustering algorithm: walktrap\neduto.wt<-walktrap.community(mig_to_edu_ig)\n#Inspect community membership\nigraph::groups(eduto.wt)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$`1`\n [1] \"UTTARAKHAND\"          \"NCT OF DELHI\"         \"RAJASTHAN\"           \n [4] \"UTTAR PRADESH\"        \"BIHAR\"                \"WEST BENGAL\"         \n [7] \"MADHYA PRADESH\"       \"MAHARASHTRA\"          \"SIKKIM\"              \n[10] \"JHARKHAND\"            \"GUJARAT\"              \"ODISHA\"              \n[13] \"CHHATTISGARH\"         \"DADRA & NAGAR HAVELI\" \"DAMAN & DIU\"         \n\n$`2`\n[1] \"ANDHRA PRADESH\"            \"KERALA\"                   \n[3] \"KARNATAKA\"                 \"TAMIL NADU\"               \n[5] \"LAKSHADWEEP\"               \"PUDUCHERRY\"               \n[7] \"GOA\"                       \"ANDAMAN & NICOBAR ISLANDS\"\n\n$`3`\n[1] \"MANIPUR\"   \"MEGHALAYA\" \"MIZORAM\"   \"NAGALAND\" \n\n$`4`\n[1] \"HIMACHAL PRADESH\" \"PUNJAB\"           \"HARYANA\"          \"JAMMU & KASHMIR\" \n[5] \"CHANDIGARH\"      \n\n$`5`\n[1] \"ARUNACHAL PRADESH\" \"ASSAM\"             \"TRIPURA\"          \n```\n:::\n\n```{.r .cell-code}\n#inspect density of between/within community ties\nprint(blockmodel(mig_to_edu_stat,eduto.wt$membership)$block.model, digits=2)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in blockmodel(mig_to_edu_stat, eduto.wt$membership): could not find function \"blockmodel\"\n```\n:::\n\n```{.r .cell-code}\n#add community membership as a vertex attribute\nnodes_to_e$comm.wt<-eduto.wt$membership\n#plot the network with community coloring\nplot(eduto.wt,mig_to_edu_ig)\n```\n\n::: {.cell-output-display}\n![](Migration-Networks-some-old-stuff-or-things-to-get-rid-of_files/figure-html/unnamed-chunk-54-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#modularity\nmod_et<-modularity(eduto.wt)\nmod_et\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.2782\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#Run clustering algorithm: spinglass\neduto.spin<-spinglass.community(mig_to_edu_ig)\n#Inspect community membership\nigraph::groups(eduto.spin)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$`1`\n[1] \"SIKKIM\"            \"ARUNACHAL PRADESH\" \"ASSAM\"            \n[4] \"MANIPUR\"           \"MEGHALAYA\"         \"MIZORAM\"          \n[7] \"NAGALAND\"          \"TRIPURA\"          \n\n$`2`\n[1] \"MADHYA PRADESH\" \"ODISHA\"         \"CHHATTISGARH\"  \n\n$`3`\n [1] \"WEST BENGAL\"               \"MAHARASHTRA\"              \n [3] \"ANDHRA PRADESH\"            \"KERALA\"                   \n [5] \"JHARKHAND\"                 \"GUJARAT\"                  \n [7] \"KARNATAKA\"                 \"TAMIL NADU\"               \n [9] \"DADRA & NAGAR HAVELI\"      \"LAKSHADWEEP\"              \n[11] \"PUDUCHERRY\"                \"DAMAN & DIU\"              \n[13] \"GOA\"                       \"ANDAMAN & NICOBAR ISLANDS\"\n\n$`4`\n [1] \"HIMACHAL PRADESH\" \"PUNJAB\"           \"UTTARAKHAND\"      \"HARYANA\"         \n [5] \"NCT OF DELHI\"     \"RAJASTHAN\"        \"UTTAR PRADESH\"    \"BIHAR\"           \n [9] \"JAMMU & KASHMIR\"  \"CHANDIGARH\"      \n```\n:::\n\n```{.r .cell-code}\n#inspect density of between/within community ties\nprint(blockmodel(mig_to_edu_stat,eduto.spin$membership)$block.model, digits=2)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in blockmodel(mig_to_edu_stat, eduto.spin$membership): could not find function \"blockmodel\"\n```\n:::\n\n```{.r .cell-code}\n#add community membership as a vertex attribute\nnodes_to_e$comm.spin<-eduto.spin$membership\n#plot the network with community coloring\nplot(eduto.spin,mig_to_edu_ig)\n```\n\n::: {.cell-output-display}\n![](Migration-Networks-some-old-stuff-or-things-to-get-rid-of_files/figure-html/unnamed-chunk-55-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#collect modularity scores to compare\nmod_spin_e<-modularity(eduto.spin)\nmod_spin_e\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.0001867\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngcor(mig_to_work_stat,mig_to_edu_stat)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in gcor(mig_to_work_stat, mig_to_edu_stat): could not find function \"gcor\"\n```\n:::\n\n```{.r .cell-code}\nqap1<-qaptest(list(mig_to_work_stat,mig_to_edu_stat),gcor,g1=1,g2=2)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in qaptest(list(mig_to_work_stat, mig_to_edu_stat), gcor, g1 = 1, : could not find function \"qaptest\"\n```\n:::\n\n```{.r .cell-code}\nqap1\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'qap1' not found\n```\n:::\n\n```{.r .cell-code}\nplot(qap1, xlim=c(min(qap1$dist)-.02, qap1$testval+.02))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in plot(qap1, xlim = c(min(qap1$dist) - 0.02, qap1$testval + 0.02)): object 'qap1' not found\n```\n:::\n\n```{.r .cell-code}\nabline(v=qap1$testval, col=\"red\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in int_abline(a = a, b = b, h = h, v = v, untf = untf, ...): object 'qap1' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n  #%>%\n  #select(from,to, weight)\n\n#table(mig_net_threshold_to)\n#table(mig_network$weight_to_binary,mig_network$weight_from_binary)\n # filter(weight_to_binary)%>%\n  #select(from,to, weight)\n\n#table(mig_net_threshold_to)\n#table(mig_network$weight_to_binary,mig_network$weight_from_binary)\n```\n:::",
    "supporting": [
      "Migration-Networks-some-old-stuff-or-things-to-get-rid-of_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../site_libs/htmlwidgets-1.6.1/htmlwidgets.js\"></script>\r\n<script src=\"../site_libs/plotly-binding-4.10.1/plotly.js\"></script>\r\n<script src=\"../site_libs/typedarray-0.1/typedarray.min.js\"></script>\r\n<script src=\"../site_libs/jquery-3.5.1/jquery.min.js\"></script>\r\n<link href=\"../site_libs/crosstalk-1.2.0/css/crosstalk.min.css\" rel=\"stylesheet\" />\r\n<script src=\"../site_libs/crosstalk-1.2.0/js/crosstalk.min.js\"></script>\r\n<link href=\"../site_libs/plotly-htmlwidgets-css-2.11.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\r\n<script src=\"../site_libs/plotly-main-2.11.1/plotly-latest.min.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}