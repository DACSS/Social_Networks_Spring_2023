{
  "hash": "7f878533575f14e2bff065a71bbbcaf4",
  "result": {
    "markdown": "---\ntitle: \"Week 1 Challenge\"\nauthor: \"Erika Nagai\"\ndescription: \"Loading Data and Creating a Network\"\ndate: \"02/15/2023\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\n# editor: visual\ncategories: \n  - challenge_1\n  - instruction\n  - Game of Thrones\n  - Erika_Nagai\n---\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(igraph)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'igraph' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'igraph'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    decompose, spectrum\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:base':\n\n    union\n```\n:::\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:igraph':\n\n    as_data_frame, groups, union\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n\n```{.r .cell-code}\nlibrary(tidyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'tidyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:igraph':\n\n    crossing\n```\n:::\n\n```{.r .cell-code}\nlibrary(statnet)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'statnet' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: tergm\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'tergm' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: ergm\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'ergm' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: network\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\n'network' 1.18.0 (2022-10-05), part of the Statnet Project\n* 'news(package=\"network\")' for changes since last version\n* 'citation(\"network\")' for citation information\n* 'https://statnet.org' for help, support, and other information\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'network'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:igraph':\n\n    %c%, %s%, add.edges, add.vertices, delete.edges, delete.vertices,\n    get.edge.attribute, get.edges, get.vertex.attribute, is.bipartite,\n    is.directed, list.edge.attributes, list.vertex.attributes,\n    set.edge.attribute, set.vertex.attribute\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\n'ergm' 4.4.0 (2023-01-26), part of the Statnet Project\n* 'news(package=\"ergm\")' for changes since last version\n* 'citation(\"ergm\")' for citation information\n* 'https://statnet.org' for help, support, and other information\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n'ergm' 4 is a major update that introduces some backwards-incompatible\nchanges. Please type 'news(package=\"ergm\")' for a list of major\nchanges.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: networkDynamic\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'networkDynamic' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\n'networkDynamic' 0.11.2 (2022-05-04), part of the Statnet Project\n* 'news(package=\"networkDynamic\")' for changes since last version\n* 'citation(\"networkDynamic\")' for citation information\n* 'https://statnet.org' for help, support, and other information\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nRegistered S3 method overwritten by 'tergm':\n  method                   from\n  simulate_formula.network ergm\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\n'tergm' 4.1.1 (2022-11-07), part of the Statnet Project\n* 'news(package=\"tergm\")' for changes since last version\n* 'citation(\"tergm\")' for citation information\n* 'https://statnet.org' for help, support, and other information\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'tergm'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:ergm':\n\n    snctrl\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: ergm.count\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'ergm.count' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\n'ergm.count' 4.1.1 (2022-05-24), part of the Statnet Project\n* 'news(package=\"ergm.count\")' for changes since last version\n* 'citation(\"ergm.count\")' for citation information\n* 'https://statnet.org' for help, support, and other information\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: sna\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: statnet.common\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'statnet.common' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'statnet.common'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:ergm':\n\n    snctrl\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    attr, order\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nsna: Tools for Social Network Analysis\nVersion 2.7 created on 2022-05-09.\ncopyright (c) 2005, Carter T. Butts, University of California-Irvine\n For citation information, type citation(\"sna\").\n Type help(package=\"sna\") to get started.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'sna'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:igraph':\n\n    betweenness, bonpow, closeness, components, degree, dyad.census,\n    evcent, hierarchy, is.connected, neighborhood, triad.census\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: tsna\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'tsna' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\n'statnet' 2019.6 (2019-06-13), part of the Statnet Project\n* 'news(package=\"statnet\")' for changes since last version\n* 'citation(\"statnet\")' for citation information\n* 'https://statnet.org' for help, support, and other information\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nunable to reach CRAN\n```\n:::\n\n```{.r .cell-code}\nlibrary(readr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'readr' was built under R version 4.2.2\n```\n:::\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to\n\n1) read in a dataset, and\n\n2) create a network object\n\n## Load the Data\n\nI read got_marriage.csv. This data shows the network of romantic relationship (marriage, engagement, affair) between families in the show \"Game of Thrones\".\n\n# Game of Thrones Marriage data\n\n`got_marriages` file looks like an edge list where each row represents an edge (from and to).\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngot_marriage <- read_csv(\"../posts/_data/got/got_marriages.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 255 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): From, To, Type, Notes, Generation\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nhead(got_marriage)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 5\n  From      To      Type    Notes  Generation\n  <chr>     <chr>   <chr>   <chr>  <chr>     \n1 Targaryen Stark   Married R+L=J  Current   \n2 Baratheon Martell Engaged died   Current   \n3 Baratheon Stark   Engaged broken Current   \n4 Martell   Essos   Married <NA>   Current   \n5 Martell   Reach   Affair  <NA>   Current   \n6 Martell   Essos   Affair  <NA>   Current   \n```\n:::\n:::\n\nThere are multiple edges between the same families for example there are four marriages between Arryn family and Vale family. The number of marriages (or other types of relationship) should be recorded as an weight of edges.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngot_marriage <- got_marriage %>%\n  group_by(From, To, Type) %>%\n  summarize(weight=n())\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'From', 'To'. You can override using the\n`.groups` argument.\n```\n:::\n:::\n\n\n## Create a Network\n\nLoad the package `igraph` and create an `igraph` object (i.e. a graph or network) in the form of an edge list. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(igraph)\n\ngot.marriage.net <- graph_from_data_frame(got_marriage, directed=FALSE) #marriage is a symmetrical relationship so it should be indirected\n```\n:::\n\n\nThis network is weighted and not directed.\nThe edges of this network has two attributes, which are type (marriage/affair/engaged) and weight (the number of marriages/affairs/engagements).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nedge_attr_names(got.marriage.net)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Type\"   \"weight\"\n```\n:::\n:::\n\n\n## Plot a Network\n\n### The most simple network\n\nThis is a simple plot of Game of Thrones marriage network.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot.igraph(got.marriage.net,\n            vertex.label.color = V(got.marriage.net)$type)\n```\n\n::: {.cell-output-display}\n![](Week1_Challenge_ErikaNagai_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# plot.igraph(got_distance.net, \n#             label.cex = .2,\n#             vertex.size=0,\n#             arrow.mode = \"-\",\n#             vertex.label.color=V(got_distance.net)$color)\n```\n:::\n\n### Network with the relationship types and the weight of edges\nI visualized the type and the weight of the edges.\n\nSepta family and Beyond Wall family are isolated from other families and they connect with other family (Martell and North, respectively) with one affair relationship.\nTragaryen, Tyrell, Vale, and North families have many marriages within the same families. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Assign colors to the type\n\ncolors <- c(Married = \"darkcyan\",\n            Engaged = \"cyan\",\n            Affair = \"brown3\")\n\nE(got.marriage.net)$color <- colors[match(E(got.marriage.net)$Type, names(colors))]\n\n# Plot\nplot(got.marriage.net,\n     vertex.color = \"light grey\",\n     edge.color=E(got.marriage.net)$color,\n     edge.width=E(got.marriage.net)$weight*0.4,\n     main = \"Game of Thrones: Marriage Network\")\nlegend(x = \"bottomleft\",\n       legend = c(\"Married\", \"Engaged\", \"Affair\"), fill=colors, title = \"Type of relationship\")\n```\n\n::: {.cell-output-display}\n![](Week1_Challenge_ErikaNagai_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n### Cleaned Network \n\nThere are marriages within the same families, for example there are several marriages within the family North. The edges within the same families makes the whole network visualization looks more complicated. So I removed the marriages with in the same families.\n\nThis visualization shows that Tyrell & Reach families, Lannister & Waterlands, Frev & Vale familiesa are strongly connected with many marriages.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngot_marriage1 <- got_marriage %>% \n  filter(From != To)\n\ngot.marriage1.net <- graph_from_data_frame(got_marriage1, directed=FALSE)\n\nE(got.marriage1.net)$color <- colors[match(E(got.marriage1.net)$Type, names(colors))]\n\n# Plot\nplot(got.marriage1.net,\n     vertex.color = \"light grey\",\n     edge.color=E(got.marriage1.net)$color,\n     edge.width=E(got.marriage1.net)$weight*0.4,\n     main = \"Game of Thrones: Marriage Network\")\nlegend(x = \"bottomleft\",\n       legend = c(\"Married\", \"Engaged\", \"Affair\"), fill=colors, title = \"Type of relationship\")\n```\n\n::: {.cell-output-display}\n![](Week1_Challenge_ErikaNagai_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "Week1_Challenge_ErikaNagai_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}