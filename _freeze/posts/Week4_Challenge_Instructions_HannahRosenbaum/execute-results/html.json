{
  "hash": "0d49ce95a0767005c01c60ade7ab8e9b",
  "result": {
    "markdown": "---\ntitle: \"Week 4 Challenge Instructions\"\nauthor: \"Hannah Rosenbaum\"\ndescription: \"Centrality of a Network\"\ndate: \"03/06/2023\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\n# editor: visual\ncategories: \n  - challenge_4\n  - instructions\n  # - railroads\n  # - faostat\n  # - wildbirds\n---\n\n\n\n\n## Challenge Overview\n\nDescribe the many measures of centrality of at least one network of your choice.\n\n## Describe the Network Data\n\nIf you have not done it before, always start by evaluating the basic structure of the network (number of edges and vertices, dyad and triad census, etc.). Create a data frame `nodes` with the corresponding local attributes such as degree or local transitivity.\n\n## Centrality\n\nCompute at least one measure of centrality for each node, adding them as attributes to `nodes` in the form of extra columns: eigencentrality, betweenness, closeness, etc. Compute the distribution of at least one of those measures. What do we learn from comparing these measures of centrality with an equivalent random network (i.e. with the same number of edges and vertices)?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngot_marriages <- read.csv(\"C:/Users/18639/Social_Networks_Spring_2023/posts/_data/got/got_marriages.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngraph <- graph_from_edgelist(as.matrix(got_marriages[, c(\"From\", \"To\")]))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnodes <- data.frame(\"Name\"=c(), \"degree\"=c(), \"transitivity\"=c(), 'centrality'=c())\nfamilies <- unique.data.frame(as.data.frame(got_marriages[, c(\"To\")]))\ncentrality <- eigen_centrality(graph)$vector\n\n# Iterate across family names computing degrees\nfor (name in families) {\n  obs <- data.frame(\"Name\"=name, \"degree\"=degree(graph, v = name, mode = \"total\"), \"transitivity\"=transitivity(graph, vids=name, type=\"local\"), \"centrality\"=centrality[name])\n\n  nodes <- rbind(nodes, obs)\n}\nnodes\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                   Name degree transitivity  centrality\nStark             Stark     34    0.4166667 0.113194498\nMartell         Martell     12    0.4000000 0.089478716\nEssos             Essos     15    0.6000000 0.192767892\nReach             Reach     49    0.3636364 0.282784492\nSepta             Septa      1          NaN 0.001889578\nDorne             Dorne      4    1.0000000 0.046014412\nTargaryen     Targaryen     85    0.3636364 1.000000000\nLannister     Lannister     28    0.7000000 0.057273778\nVale               Vale     37    0.4666667 0.151988690\nRiverlands   Riverlands     39    0.5714286 0.299362265\nCrownlands   Crownlands     22    0.5714286 0.272772860\nWesterlands Westerlands     31    0.6666667 0.089262517\nTyrell           Tyrell     12    1.0000000 0.055324132\nNorth             North     46    0.1666667 0.126568322\nBeyond Wall Beyond Wall      1          NaN 0.002672823\nFrey               Frey     51    0.2888889 0.214820599\nTully             Tully      5    0.5000000 0.018146747\nStormlands   Stormlands     11    0.7000000 0.099655003\nArryn             Arryn     10    0.6666667 0.079951432\nBaratheon     Baratheon     17    0.4181818 0.089383036\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrandom_network <- sample_gnp(length(V(graph)), graph.density(graph))\nplot(random_network)\n```\n\n::: {.cell-output-display}\n![](Week4_Challenge_Instructions_HannahRosenbaum_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(nodes$centrality)\n```\n\n::: {.cell-output-display}\n![](Week4_Challenge_Instructions_HannahRosenbaum_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(eigen_centrality(random_network)$vector)\n```\n\n::: {.cell-output-display}\n![](Week4_Challenge_Instructions_HannahRosenbaum_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::",
    "supporting": [
      "Week4_Challenge_Instructions_HannahRosenbaum_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}