{
  "hash": "d852b34579f04b62862738d4f6463446",
  "result": {
    "markdown": "---\ntitle: \"Week 3 Challenge\"\nauthor: \"Claire Battaglia\"\ndescription: \"Degree and density of a network\"\ndate: \"March 22, 2023\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\n# editor: visual\ncategories: \n  - Claire Battaglia\n  - challenge3\n  - degree\n  - density\n---\n\n\n\n\n## Describe the network data\n\nThis week I'll be creating a network of murders in the movie the Godfather.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# read in data\nmurders <- read_csv(\"Godfather_murders.csv\", show_col_types = FALSE)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nNew names:\n• `` -> `...4`\n```\n:::\n\n```{.r .cell-code}\n# create to, from objects\nfrom <- murders[, 1]\nto <- murders[, 2]\n\n# create network object - igraph\nmurders.ig <- graph_from_data_frame(murders, directed = TRUE)\n\nprint(murders.ig)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nIGRAPH 3263af1 DN-- 30 21 -- \n+ attr: name (v/c), family from (e/c), ...4 (e/l)\n+ edges from 3263af1 (vertex names):\n [1] Rocco Lampone    ->Khartoum           \n [2] Tattaglia unknown->Luca Brasi         \n [3] Rocco Lampone    ->Paulie Gatto       \n [4] Corleone unknown ->Bruno Tattaglia    \n [5] Michael Corleone ->Virgil Sollozzo    \n [6] Michael Corleone ->Marc McCluskey     \n [7] Barzini unknown  ->Sonny Corleone     \n [8] Barzini unknown  ->guard 1            \n+ ... omitted several edges\n```\n:::\n\n```{.r .cell-code}\n# create network object - tidygraph\nmurders_tidy <- as_tbl_graph(murders.ig)\n\nprint(murders_tidy)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tbl_graph: 30 nodes and 21 edges\n#\n# A rooted forest with 9 trees\n#\n# Node Data: 30 × 1 (active)\n  name             \n  <chr>            \n1 Rocco Lampone    \n2 Tattaglia unknown\n3 Corleone unknown \n4 Michael Corleone \n5 Barzini unknown  \n6 Fabrizio         \n# … with 24 more rows\n#\n# Edge Data: 21 × 4\n   from    to `family from` ...4 \n  <int> <int> <chr>         <lgl>\n1     1    10 Corleone      NA   \n2     2    11 Tattaglia     NA   \n3     1    12 Corleone      NA   \n# … with 18 more rows\n```\n:::\n:::\n\n\nI've created a network object with both `igraph` and `tidygraph`, just to compare the two.\n\nThe network is:\n\n* directed (one person commits the murder, the other is murdered)\n* named\n* unweighted\n* not bipartite\n\nIt has 30 nodes and 21 edges. The network is not connected.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# get number of components\nigraph::components(murders.ig)$no\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 9\n```\n:::\n\n```{.r .cell-code}\n# get size of each component\nigraph::components(murders.ig)$csize\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5 2 3 3 4 2 4 3 4\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# create plot\nggraph(murders_tidy, layout = \"auto\") + \n  geom_node_point() +\n  geom_edge_diagonal() + \n  labs(title = \"Murders in the Godfather, Part 1\") +\n  theme_graph(foreground = \"#c6a25a\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nUsing \"tree\" as default layout\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Using the `size` aesthetic in this geom was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` in the `default_aes` field and elsewhere instead.\n```\n:::\n\n::: {.cell-output-display}\n![](ClaireBattaglia_Week3Challenge_files/figure-html/plot network-1.png){width=672}\n:::\n:::\n\n\n## Exploring degree\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# create df of degrees\nmurders_nodes <- data.frame(name = V(murders.ig)$name, degree = igraph::degree(murders.ig)) %>%\n  mutate(indegree = igraph::degree(murders.ig, mode = \"in\", loops = FALSE),\n         outdegree = igraph::degree(murders.ig, mode = \"out\", loops = FALSE))\n\nmurders_nodes\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                                                 name degree indegree outdegree\nRocco Lampone                           Rocco Lampone      4        0         4\nTattaglia unknown                   Tattaglia unknown      1        0         1\nCorleone unknown                     Corleone unknown      2        0         2\nMichael Corleone                     Michael Corleone      2        0         2\nBarzini unknown                       Barzini unknown      3        0         3\nFabrizio                                     Fabrizio      1        0         1\nClemenza                                     Clemenza      3        0         3\nWillie Cicci                             Willie Cicci      2        0         2\nAl Neri                                       Al Neri      3        0         3\nKhartoum                                     Khartoum      1        1         0\nLuca Brasi                                 Luca Brasi      1        1         0\nPaulie Gatto                             Paulie Gatto      1        1         0\nBruno Tattaglia                       Bruno Tattaglia      1        1         0\nVirgil Sollozzo                       Virgil Sollozzo      1        1         0\nMarc McCluskey                         Marc McCluskey      1        1         0\nSonny Corleone                         Sonny Corleone      1        1         0\nguard 1                                       guard 1      1        1         0\nguard 2                                       guard 2      1        1         0\nApollonia Vitelli                   Apollonia Vitelli      1        1         0\nVictor Stracci                         Victor Stracci      1        1         0\nStracci's Bodyguard               Stracci's Bodyguard      1        1         0\nMoe Greene                                 Moe Greene      1        1         0\nCarmine Cuneo                           Carmine Cuneo      1        1         0\nPhillip Tattaglia                   Phillip Tattaglia      1        1         0\nprostitute                                 prostitute      1        1         0\nEmilio Barzini's Bodyguard Emilio Barzini's Bodyguard      1        1         0\nEmilio Barzini's Driver       Emilio Barzini's Driver      1        1         0\nEmilio Barzini                         Emilio Barzini      1        1         0\nSalvatore Tessio                     Salvatore Tessio      1        1         0\nCarlo Rizzi                               Carlo Rizzi      1        1         0\n```\n:::\n:::\n\n\nFor this network, any node with an out-degree of anything other than zero has *committed* a murder while any node with an in-degree of anything other than zero was ultimately murdered. Logically we know that no node should have an in-degree of greater than zero, as one can only be murdered once.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# get summary\nsummary(murders_nodes)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     name               degree       indegree     outdegree  \n Length:30          Min.   :1.0   Min.   :0.0   Min.   :0.0  \n Class :character   1st Qu.:1.0   1st Qu.:0.0   1st Qu.:0.0  \n Mode  :character   Median :1.0   Median :1.0   Median :0.0  \n                    Mean   :1.4   Mean   :0.7   Mean   :0.7  \n                    3rd Qu.:1.0   3rd Qu.:1.0   3rd Qu.:1.0  \n                    Max.   :4.0   Max.   :1.0   Max.   :4.0  \n```\n:::\n:::\n\nGiven the logical constraints of this network, there isn't much to revealed by the summary statistics. In the out-degree column we can see:\n\n* The maximum number of murders committed by any one person is 4.\n* The mean number of murders committed by all nodes is .7. This is the mean of *all* nodes, however, not the mean of the nodes who actually murdered someone. If we look at the out-degree distribution below, we can see that most nodes did not murder anyone and are therefore dragging the mean number of murders down significantly.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# create plot\nggplot(murders_nodes, aes(x = outdegree)) +\n  geom_histogram(binwidth = 1, fill = \"#c6a25a\") +\n  labs(title = \"Distribution of Murders in the Godfather, Part 1\", x = NULL) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](ClaireBattaglia_Week3Challenge_files/figure-html/plot distribution-1.png){width=672}\n:::\n:::\n\n\n## Density\n\nNetwork density is the proportion of ties present in a network of all possible ties. A complete network has a network density of \"1.\" [I THINK]  that in this particular network a density of \"1\" would mean that every node both murdered someone and was ultimately murdered.\n\n_Possible ties = n(n-1)_\n\n_Actual ties = (2 * # of mutual ties) + # of asymmetric ties_\n\nThere are 870 possible ties and 21 actual ties.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# calc density manually - FOR PRACTICE\nn <- 30\np_ties <- n * (n-1)\np_ties\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 870\n```\n:::\n\n```{.r .cell-code}\nmut <- dyad.census(murders.ig)$mut\nasym <- dyad.census(murders.ig)$asym\na_ties <- (2 * mut) + asym\na_ties\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 21\n```\n:::\n\n```{.r .cell-code}\na_ties/p_ties\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.02413793\n```\n:::\n\n```{.r .cell-code}\n# get density\ngraph.density(murders.ig)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.02413793\n```\n:::\n:::\n\n## Random network\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# create random network\nrandom <- erdos.renyi.game(30, 21, type = \"gnm\", directed = TRUE)\n\n# plot random network\nggraph(random, layout = \"auto\") +\n  geom_node_point() +\n  geom_edge_diagonal() +\n  labs(title = \"Plot of Random Network\") +\n  theme_graph(foreground = \"#c6a25a\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nUsing \"sugiyama\" as default layout\n```\n:::\n\n::: {.cell-output-display}\n![](ClaireBattaglia_Week3Challenge_files/figure-html/random network-1.png){width=672}\n:::\n:::\n\n\nThe random network is very different from the actual network.\n\n\n\n",
    "supporting": [
      "ClaireBattaglia_Week3Challenge_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}